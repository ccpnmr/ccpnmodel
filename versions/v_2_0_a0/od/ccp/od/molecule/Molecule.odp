ObjectDomain_Shared_Package 15
{-yk94ms_-e3s_e41656c6_-m0p 4 "Logical" objectdomain.uml.mechanisms.UmlPackage-owns "ccp" objectdomain.uml.mechanisms.UmlPackage-owns "molecule" objectdomain.uml.mechanisms.UmlPackage-owns "Molecule" objectdomain.uml.mechanisms.UmlPackage-owns
}[objectdomain.uml.core.TypeExpression $17
objectdomain.uml.mechanisms.UmlPackage-owns $1
objectdomain.uml.core.Generalization-owns $12
objectdomain.uml.core.Dependency-owns $13
objectdomain.uml.core.Projection $15
objectdomain.uml.core.UmlAttribute-features $6
objectdomain.uml.core.UmlAssociationEnd-connections $10
objectdomain.uml.view.style.BaseViewElementStyle-owns $14
objectdomain.uml.view.ClassView-owns $3
objectdomain.uml.core.UmlTaggedValue-taggedValues $7
objectdomain.uml.core.UmlConstraint-constraints $11
objectdomain.uml.core.UmlAssociation-owns $9
objectdomain.uml.view.Diagram-owns $2
objectdomain.uml.core.UmlOperation-features $8
objectdomain.uml.core.UmlMultiplicity $16
objectdomain.uml.core.UmlClass-owns $5
objectdomain.uml.view.AssociationView-owns $4
objectdomain.uml.core.Stereotype-owns $18
]
($1 1 > -yk94ms_-e3s_e41656c6_-m0p 4 "Logical" $1 "ccp" $1 "molecule" $1 "Molecule" $1
(name "Molecule"
)
(uid "-yk94ms_-e3s_e41656c6_-m0p"))
($2 2 < -yk94ms_85r_eqyymv3f_-khe "_Molecule-details" 1
(name "_Molecule-details"
)
(uid "-yk94ms_85r_eqyymv3f_-khe")
(diagramType "class"))
($3 3 < -yk94ms_85r_eqyymv3f_-khd "Molecule" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-khd")
(bbx 390 130 200 640))
($3 4 < -yk94ms_85r_eqyymv3f_-khc "MolResidue" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-khc")
(bbx 630 740 170 220))
($4 5 < -yk94ms_85r_eqyymv3f_-khb "" 2
(toMultiplicityPosition 615 795)
(toRolePosition 645 220)
(uid "-yk94ms_85r_eqyymv3f_-khb")
(points 510 770 510 825 630 825)
(fromMultiplicityPosition 485 780))
($3 6 < -yk94ms_85r_eqyymv3f_-kha "MolSeqFragment" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kha")
(bbx 910 230 160 110))
($4 7 < -yk94ms_85r_eqyymv3f_-kh9 "" 2
(fromOrderedPosition 705 710)
(uid "-yk94ms_85r_eqyymv3f_-kh9")
(points 800 740 955 740 955 340)
(fromRolePosition 815 750)
(fromMultiplicityPosition 805 750))
($3 8 < -yk94ms_85r_eqyymv3f_-kh8 "NaturalSource" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kh8")
(bbx 640 290 240 430))
($3 9 < -yk94ms_85r_eqyymv3f_-kh7 "MoleculeSysName" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kh7")
(bbx 660 110 140 80))
($4 10 < -yk94ms_85r_eqyymv3f_-kh6 "" 2
(toMultiplicityPosition 650 150)
(uid "-yk94ms_85r_eqyymv3f_-kh6")
(points 590 140 660 140)
(fromMultiplicityPosition 610 145))
($4 11 < -yk94ms_85r_eqyymv3f_-kh5 "" 2
(toMultiplicityPosition 495 275)
(uid "-yk94ms_85r_eqyymv3f_-kh5")
(points 590 515 640 515)
(fromMultiplicityPosition 595 520))
($4 12 < -yk94ms_85r_eqyymv3f_-kh4 "" 2
(toMultiplicityPosition 920 480)
(uid "-yk94ms_85r_eqyymv3f_-kh4")
(points 920 340 920 410 880 410)
(fromMultiplicityPosition 910 350))
($3 13 < -yk94ms_85r_eqyymv3f_-kh3 "MemopsRoot" 2
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kh3")
(bbx 300 20 250 30))
($4 14 < -yk94ms_85r_eqyymv3f_-kh2 "" 2
(toMultiplicityPosition 490 110)
(uid "-yk94ms_85r_eqyymv3f_-kh2")
(points 485 50 485 130)
(fromMultiplicityPosition 490 65))
($3 15 < -yk94ms_85r_eqyymv3f_-kgx "MolFeature" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kgx")
(bbx 860 840 230 130))
($4 16 < -yk94ms_85r_eqyymv3f_-kgw "" 2
(toMultiplicityPosition 845 940)
(uid "-yk94ms_85r_eqyymv3f_-kgw")
(points 800 935 860 935)
(fromMultiplicityPosition 805 940))
($3 17 < -yk94ms_85r_eqyymv3f_-kgu "ChemCompVar" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kgu")
(bbx 100 550 260 410))
($4 18 < -yk94ms_85r_eqyymv3f_-kgt "" 2
(toMultiplicityPosition 365 955)
(uid "-yk94ms_85r_eqyymv3f_-kgt")
(points 630 945 360 945))
($3 19 < -yk94ms_85r_eqyymv3f_-kgs "MolResLinkEnd" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kgs")
(bbx 150 210 110 80))
($4 20 < -yk94ms_85r_eqyymv3f_-kgr "" 2
(toMultiplicityPosition 265 220)
(uid "-yk94ms_85r_eqyymv3f_-kgr")
(points 630 900 375 900 375 245 260 245)
(fromMultiplicityPosition 615 875))
($3 21 < -yk94ms_85r_eqyymv3f_-kgq "MolResLink" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kgq")
(bbx 100 70 210 90))
($4 22 < -yk94ms_85r_eqyymv3f_-kgp "" 2
(toMultiplicityPosition 315 155)
(uid "-yk94ms_85r_eqyymv3f_-kgp")
(points 390 145 310 145)
(fromMultiplicityPosition 380 160))
($4 23 < -yk94ms_85r_eqyymv3f_-kgo "" 2
(toMultiplicityPosition 190 185)
(uid "-yk94ms_85r_eqyymv3f_-kgo")
(points 205 160 205 210))
($3 24 < -yk94ms_85r_eqyymv3f_-kgn "LinkDihedralAngle" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kgn")
(bbx 470 1040 130 60))
($3 25 < -yk94ms_85r_eqyymv3f_-kgm "LinkEnd" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kgm")
(bbx 120 340 220 80))
($4 26 < -yk94ms_85r_eqyymv3f_-kgl "" 2
(toMultiplicityPosition 325 530)
(uid "-yk94ms_85r_eqyymv3f_-kgl")
(points 320 420 320 550)
(fromMultiplicityPosition 310 425))
($4 27 < -yk94ms_85r_eqyymv3f_-kgk "" 2
(toMultiplicityPosition 185 305)
(uid "-yk94ms_85r_eqyymv3f_-kgk")
(points 210 290 210 340))
($3 28 < -yk94ms_85r_eqyymv3f_-kgh "ChemComp" 2
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kgh")
(bbx 60 470 240 30))
($4 29 < -yk94ms_85r_eqyymv3f_-kgg "" 2
(toMultiplicityPosition 185 530)
(uid "-yk94ms_85r_eqyymv3f_-kgg")
(points 200 500 200 550)
(fromMultiplicityPosition 210 510))
($4 30 < -yk94ms_85r_eqyymv3f_-kgf "" 2
(toMultiplicityPosition 205 425)
(uid "-yk94ms_85r_eqyymv3f_-kgf")
(points 195 470 195 420)
(fromMultiplicityPosition 175 450))
($4 31 < -yk94ms_85r_eqyymv3f_-kgd "" 2
(toMultiplicityPosition 90 505)
(uid "-yk94ms_85r_eqyymv3f_-kgd")
(points 685 960 685 975 75 975 75 500))
($3 32 < -yk94ms_85r_eqyymv3f_-kgc "SmilesType" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kgc")
(bbx 780 1040 80 60))
($4 33 < -yk94ms_85r_eqyymv3f_-kgb "" 2
(toMultiplicityPosition 900 265)
(uid "-yk94ms_85r_eqyymv3f_-kgb")
(points 590 255 910 255)
(fromMultiplicityPosition 595 270))
($3 34 < -yk94ms_85r_eqyymv3f_-kg7 "SecStrucCode" 2
(autoSizeToFit true)
(uid "-yk94ms_85r_eqyymv3f_-kg7")
(bbx 640 1040 100 60))
($3 35 < -yk94ms_85r_eqyymv3f_-kg6 "MolType" 2
(uid "-yk94ms_85r_eqyymv3f_-kg6")
(bbx 290 1040 140 60))
($3 36 < -yk94ms_85r_eqyymv3f_-kg5 "MolComponent" 2
(uid "-yk94ms_85r_eqyymv3f_-kg5")
(bbx 870 30 300 140))
($4 37 < -yk94ms_85r_eqyymv3f_-kg4 "" 2
(toMultiplicityPosition 860 55)
(uid "-yk94ms_85r_eqyymv3f_-kg4")
(points 575 130 575 50 870 50))
($4 38 < -yk94ms_l0q_evqpurmn_-p6j "" 2
(toRolePosition 350 95)
(uid "-yk94ms_l0q_evqpurmn_-p6j")
(points 410 50 410 130))
($4 39 < -hkpzxr_-iih_f3zymwjl_-p71 "" 2
(toMultiplicityPosition 80 450)
(uid "-hkpzxr_-iih_f3zymwjl_-p71")
(points 300 35 75 35 75 470)
(fromMultiplicityPosition 270 40))
($3 40 < -hkpzxr_v5_f8ok98qm_-p8f "Entry" 2
(uid "-hkpzxr_v5_f8ok98qm_-p8f")
(bbx 1000 640 160 170))
($3 41 < -hkpzxr_v5_f9gtenwt_-p85 "Alignment" 2
(autoSizeToFit true)
(uid "-hkpzxr_v5_f9gtenwt_-p85")
(bbx 990 380 170 210))
($4 42 < -hkpzxr_v5_f9gtenwt_-p8k "" 2
(toMultiplicityPosition 1010 365)
(uid "-hkpzxr_v5_f9gtenwt_-p8k")
(points 1025 340 1025 380))
($4 43 < -hkpzxr_v5_f9gtenwt_-p8l "" 2
(toMultiplicityPosition 1015 620)
(toRolePosition 1040 620)
(uid "-hkpzxr_v5_f9gtenwt_-p8l")
(points 1030 590 1030 640)
(fromMultiplicityPosition 1035 595))
($4 44 < -hkpzxr_v5_f9gtenwt_-p88 "" 2
(toMultiplicityPosition 1110 355)
(uid "-hkpzxr_v5_f9gtenwt_-p88")
(points 590 205 1100 205 1100 380)
(fromMultiplicityPosition 605 175))
($2 45 < -yk94ms_85r_eqyymv3f_-kg3 "_Molecule" 1
(name "_Molecule"
)
(uid "-yk94ms_85r_eqyymv3f_-kg3")
(diagramType "class"))
($3 46 < -yk94ms_85r_eqyymv3f_-kg2 "Molecule" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kg2")
(bbx 220 140 70 30))
($3 47 < -yk94ms_85r_eqyymv3f_-kg1 "MolResidue" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kg1")
(bbx 270 270 80 30))
($4 48 < -yk94ms_85r_eqyymv3f_-kg0 "" 45
(toMultiplicityPosition 275 250)
(toRolePosition 645 220)
(uid "-yk94ms_85r_eqyymv3f_-kg0")
(points 285 170 285 270)
(fromMultiplicityPosition 270 175))
($3 49 < -yk94ms_85r_eqyymv3f_-kfz "MolSeqFragment" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kfz")
(bbx 420 170 120 30))
($4 50 < -yk94ms_85r_eqyymv3f_-kfy "" 45
(fromOrderedPosition 465 250)
(uid "-yk94ms_85r_eqyymv3f_-kfy")
(points 350 270 470 270 470 200)
(fromRolePosition 370 250)
(fromMultiplicityPosition 355 245))
($3 51 < -yk94ms_85r_eqyymv3f_-kfx "NaturalSource" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kfx")
(bbx 420 120 240 30))
($3 52 < -yk94ms_85r_eqyymv3f_-kfw "MoleculeSysName" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kfw")
(bbx 40 140 120 30))
($4 53 < -yk94ms_85r_eqyymv3f_-kfv "" 45
(toMultiplicityPosition 165 160)
(uid "-yk94ms_85r_eqyymv3f_-kfv")
(points 220 155 160 155)
(fromMultiplicityPosition 205 170))
($4 54 < -yk94ms_85r_eqyymv3f_-kfu "" 45
(toMultiplicityPosition 495 275)
(uid "-yk94ms_85r_eqyymv3f_-kfu")
(points 290 140 420 140)
(fromMultiplicityPosition 305 120))
($4 55 < -yk94ms_85r_eqyymv3f_-kft "" 45
(toMultiplicityPosition 630 155)
(uid "-yk94ms_85r_eqyymv3f_-kft")
(points 540 185 625 185 625 150)
(fromMultiplicityPosition 545 195))
($3 56 < -yk94ms_85r_eqyymv3f_-kfs "MemopsRoot" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kfs")
(bbx 40 40 250 30))
($4 57 < -yk94ms_85r_eqyymv3f_-kfr "" 45
(toMultiplicityPosition 255 120)
(uid "-yk94ms_85r_eqyymv3f_-kfr")
(points 250 70 250 140)
(fromMultiplicityPosition 230 75))
($3 58 < -yk94ms_85r_eqyymv3f_-kfm "MolFeature" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kfm")
(bbx 430 290 230 30))
($4 59 < -yk94ms_85r_eqyymv3f_-kfl "" 45
(toMultiplicityPosition 420 300)
(uid "-yk94ms_85r_eqyymv3f_-kfl")
(points 350 295 430 295)
(fromMultiplicityPosition 345 300))
($3 60 < -yk94ms_85r_eqyymv3f_-kfj "MolResLink" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kfj")
(bbx 40 200 80 30))
($4 61 < -yk94ms_85r_eqyymv3f_-kfi "" 45
(toMultiplicityPosition 125 220)
(uid "-yk94ms_85r_eqyymv3f_-kfi")
(points 255 170 255 215 120 215)
(fromMultiplicityPosition 240 175))
($3 62 < -yk94ms_85r_eqyymv3f_-kfh "MolResLinkEnd" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kfh")
(bbx 30 270 110 30))
($4 63 < -yk94ms_85r_eqyymv3f_-kfg "" 45
(toMultiplicityPosition 150 290)
(uid "-yk94ms_85r_eqyymv3f_-kfg")
(points 270 285 140 285)
(fromMultiplicityPosition 255 260))
($4 64 < -yk94ms_85r_eqyymv3f_-kff "" 45
(toMultiplicityPosition 60 245)
(uid "-yk94ms_85r_eqyymv3f_-kff")
(points 75 230 75 270))
($3 65 < -yk94ms_85r_eqyymv3f_-kfe "ChemCompVar" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kfe")
(bbx 60 330 260 30))
($4 66 < -yk94ms_85r_eqyymv3f_-kfd "" 45
(toMultiplicityPosition 260 310)
(uid "-yk94ms_85r_eqyymv3f_-kfd")
(points 280 300 280 330))
($3 67 < -yk94ms_85r_eqyymv3f_-kfc "LinkEnd" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kfc")
(bbx 30 410 220 30))
($4 68 < -yk94ms_85r_eqyymv3f_-kfb "" 45
(toMultiplicityPosition 105 365)
(uid "-yk94ms_85r_eqyymv3f_-kfb")
(points 100 410 100 360)
(fromMultiplicityPosition 90 390))
($4 69 < -yk94ms_85r_eqyymv3f_-kfa "" 45
(toMultiplicityPosition 50 385)
(uid "-yk94ms_85r_eqyymv3f_-kfa")
(points 40 300 40 410))
($3 70 < -yk94ms_85r_eqyymv3f_-kf7 "ChemComp" 45
(showAttributeCompartment false)
(showOperationCompartment false)
(uid "-yk94ms_85r_eqyymv3f_-kf7")
(bbx 290 410 240 30))
($4 71 < -yk94ms_85r_eqyymv3f_-kf6 "" 45
(toMultiplicityPosition 310 365)
(uid "-yk94ms_85r_eqyymv3f_-kf6")
(points 305 410 305 360)
(fromMultiplicityPosition 290 390))
($4 72 < -yk94ms_85r_eqyymv3f_-kf5 "" 45
(toMultiplicityPosition 255 400)
(uid "-yk94ms_85r_eqyymv3f_-kf5")
(points 290 425 250 425)
(fromMultiplicityPosition 280 435))
($4 73 < -yk94ms_85r_eqyymv3f_-kf3 "" 45
(toMultiplicityPosition 345 385)
(uid "-yk94ms_85r_eqyymv3f_-kf3")
(points 335 300 335 410))
($4 74 < -yk94ms_85r_eqyymv3f_-kf2 "" 45
(toMultiplicityPosition 400 185)
(uid "-yk94ms_85r_eqyymv3f_-kf2")
(points 290 170 420 170)
(fromMultiplicityPosition 295 180))
($3 75 < -hkpzxr_-iih_f3zymwjl_-p6z "MolComponent" 45
(showAttributeCompartment false)
(autoSizeToFit true)
(showOperationCompartment false)
(uid "-hkpzxr_-iih_f3zymwjl_-p6z")
(bbx 340 60 300 30))
($4 76 < -hkpzxr_-iih_f3zymwjl_-p70 "" 45
(toMultiplicityPosition 325 65)
(uid "-hkpzxr_-iih_f3zymwjl_-p70")
(points 280 140 280 85 340 85))
($4 77 < -hkpzxr_-iih_f3zymwjl_-p6x "" 45
(toRolePosition 115 110)
(uid "-hkpzxr_-iih_f3zymwjl_-p6x")
(points 225 70 225 140))
($4 78 < -hkpzxr_-iih_f3zymwjl_-p6y "" 45
(toMultiplicityPosition 535 400)
(uid "-hkpzxr_-iih_f3zymwjl_-p6y")
(points 290 50 680 50 680 420 530 420)
(fromMultiplicityPosition 310 25))
($5 79 < -yk94ms_-e3s_e41656c6_-lyc "Molecule" 1
(name "Molecule"
)
(uid "-yk94ms_-e3s_e41656c6_-lyc"))
($6 80 < -yk94ms_85r_eqyymv3f_-kex "name" 79
(changeability "frozen")
(name "name"
)
(uid "-yk94ms_85r_eqyymv3f_-kex")
(multiplicity "1"))
($7 81 < -yk94ms_85r_eqyymv3f_-kew "documentation" 80
(name "documentation"
)
(value "Name of Molecule. Used as key. Should be correct and informative, but may be an abbreviation or an acronym if the alternative is too long. Recommended e.g. NaCl, Lysozyme, Lac headpiece, morphine."
)
(uid "-yk94ms_85r_eqyymv3f_-kew"))
($7 82 < -yk94ms_85r_eqyymv3f_-kev "guid" 80
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00010"
)
(uid "-yk94ms_85r_eqyymv3f_-kev"))
($6 83 < -yk94ms_85r_eqyymv3f_-keu "longName" 79
(name "longName"
)
(uid "-yk94ms_85r_eqyymv3f_-keu"))
($7 84 < -yk94ms_85r_eqyymv3f_-ket "documentation" 83
(name "documentation"
)
(value "Long form of molecule name."
)
(uid "-yk94ms_85r_eqyymv3f_-ket"))
($7 85 < -yk94ms_85r_eqyymv3f_-kes "guid" 83
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00011"
)
(uid "-yk94ms_85r_eqyymv3f_-kes"))
($6 86 < -yk94ms_85r_eqyymv3f_-ker "isFinalised" 79
(initialValue "False"
)
(name "isFinalised"
)
(uid "-yk94ms_85r_eqyymv3f_-ker")
(multiplicity "1"))
($7 87 < -yk94ms_85r_eqyymv3f_-keq "documentation" 86
(name "documentation"
)
(value "Non-finalised molecules may not have links to Samples etc."
"Finalised molecules can no longer have residues added or removed."
"Note that you can add MolResidues to non-finalised molecules even if they already have chanis, but that you must make sure of adding new MolSystem.Residues as necessary."
)
(uid "-yk94ms_85r_eqyymv3f_-keq"))
($7 88 < -yk94ms_85r_eqyymv3f_-kep "guid" 86
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00012"
)
(uid "-yk94ms_85r_eqyymv3f_-kep"))
($6 89 < -yk94ms_85r_eqyymv3f_-keo "molType" 79
(changeability "frozen")
(name "molType"
)
(uid "-yk94ms_85r_eqyymv3f_-keo"))
($7 90 < -yk94ms_85r_eqyymv3f_-ken "documentation" 89
(name "documentation"
)
(value "molType of ChemComps making up Molecule. Possible values: 'protein', 'DNA', 'RNA', 'DNA/RNA', 'other'. The values are returned if *all* ChemComps are of the correct molType(s). 'other' is returned if the Molecule contains neither protein, not DNA, nor RNA ChemComps. If the Molecule contains a mixture of molTypes (except for DNA/RNA) the value is None (not set). "
""
"Note that the molType says nothing about how the ChemComps are linked, and that e.g. a Molecule of molType 'protein' need not contain a single peptide bond. If e.g. molType is 'protein' and isStdLinear' is True, on the other hand, the Molecule is a single unbroken polypeptide (which may or may not contain crosslinks)."
)
(uid "-yk94ms_85r_eqyymv3f_-ken"))
($7 91 < -yk94ms_85r_eqyymv3f_-kem "isDerived" 89
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kem"))
($7 92 < -yk94ms_85r_eqyymv3f_-kel "guid" 89
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00013"
)
(uid "-yk94ms_85r_eqyymv3f_-kel"))
($6 93 < -yk94ms_85r_eqyymv3f_-kek "commonNames" 79
(name "commonNames"
)
(uid "-yk94ms_85r_eqyymv3f_-kek")
(multiplicity "*"))
($7 94 < -yk94ms_85r_eqyymv3f_-kej "baseName" 93
(name "baseName"
)
(value "commonName"
)
(uid "-yk94ms_85r_eqyymv3f_-kej"))
($7 95 < -yk94ms_85r_eqyymv3f_-kei "documentation" 93
(name "documentation"
)
(value "List of molecule common names."
)
(uid "-yk94ms_85r_eqyymv3f_-kei"))
($7 96 < -yk94ms_85r_eqyymv3f_-keh "guid" 93
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00014"
)
(uid "-yk94ms_85r_eqyymv3f_-keh"))
($6 97 < -yk94ms_85r_eqyymv3f_-keg "keywords" 79
(name "keywords"
)
(uid "-yk94ms_85r_eqyymv3f_-keg")
(multiplicity "*"))
($7 98 < -yk94ms_85r_eqyymv3f_-kef "documentation" 97
(name "documentation"
)
(value "Keywords for searching molecule. e.g. 'DNA binding', 'receptor', 'Zinc finger'..."
)
(uid "-yk94ms_85r_eqyymv3f_-kef"))
($7 99 < -yk94ms_85r_eqyymv3f_-kee "baseName" 97
(name "baseName"
)
(value "keyword"
)
(uid "-yk94ms_85r_eqyymv3f_-kee"))
($7 100 < -yk94ms_85r_eqyymv3f_-ked "guid" 97
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00015"
)
(uid "-yk94ms_85r_eqyymv3f_-ked"))
($6 101 < -yk94ms_85r_eqyymv3f_-kec "functions" 79
(name "functions"
)
(uid "-yk94ms_85r_eqyymv3f_-kec")
(multiplicity "*"))
($7 102 < -yk94ms_85r_eqyymv3f_-keb "baseName" 101
(name "baseName"
)
(value "function"
)
(uid "-yk94ms_85r_eqyymv3f_-keb"))
($7 103 < -yk94ms_85r_eqyymv3f_-kea "documentation" 101
(name "documentation"
)
(value "Keywords describing functions for molecule. e.g. 'enzyme', 'structure', ..."
)
(uid "-yk94ms_85r_eqyymv3f_-kea"))
($7 104 < -yk94ms_85r_eqyymv3f_-ke9 "guid" 101
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00016"
)
(uid "-yk94ms_85r_eqyymv3f_-ke9"))
($6 105 < -yk94ms_85r_eqyymv3f_-ke8 "seqLength" 79
(changeability "frozen")
(name "seqLength"
)
(uid "-yk94ms_85r_eqyymv3f_-ke8")
(multiplicity "1"))
($7 106 < -yk94ms_85r_eqyymv3f_-ke7 "documentation" 105
(name "documentation"
)
(value "Number of MolResidues in Molecule. For linear polymers equal to sequence length."
)
(uid "-yk94ms_85r_eqyymv3f_-ke7"))
($7 107 < -yk94ms_85r_eqyymv3f_-ke6 "isDerived" 105
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-ke6"))
($7 108 < -yk94ms_85r_eqyymv3f_-ke5 "guid" 105
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00017"
)
(uid "-yk94ms_85r_eqyymv3f_-ke5"))
($6 109 < -yk94ms_85r_eqyymv3f_-ke4 "calcIsoelectricPoint" 79
(name "calcIsoelectricPoint"
)
(uid "-yk94ms_85r_eqyymv3f_-ke4"))
($7 110 < -yk94ms_85r_eqyymv3f_-ke3 "documentation" 109
(name "documentation"
)
(value "Calculated isoelectric point of molecule. The pI indicates the value of pH at which the net charge of the molecule would be neutralized, if the molecule would have a conformation with each amino acid fully exposed to the solvent. NB This is derived information, this should be moved when this gets developed."
)
(uid "-yk94ms_85r_eqyymv3f_-ke3"))
($7 111 < -yk94ms_85r_eqyymv3f_-ke2 "guid" 109
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00018"
)
(uid "-yk94ms_85r_eqyymv3f_-ke2"))
($6 112 < -yk94ms_85r_eqyymv3f_-ke1 "empiricalFormula" 79
(changeability "frozen")
(name "empiricalFormula"
)
(uid "-yk94ms_85r_eqyymv3f_-ke1")
(multiplicity "1"))
($7 113 < -yk94ms_85r_eqyymv3f_-ke0 "documentation" 112
(name "documentation"
)
(value "Empirical formula for molecule."
)
(uid "-yk94ms_85r_eqyymv3f_-ke0"))
($7 114 < -yk94ms_85r_eqyymv3f_-kdz "isDerived" 112
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kdz"))
($7 115 < -yk94ms_85r_eqyymv3f_-kdy "guid" 112
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00019"
)
(uid "-yk94ms_85r_eqyymv3f_-kdy"))
($6 116 < -yk94ms_85r_eqyymv3f_-kdx "molecularMass" 79
(changeability "frozen")
(name "molecularMass"
)
(uid "-yk94ms_85r_eqyymv3f_-kdx")
(multiplicity "1"))
($7 117 < -yk94ms_85r_eqyymv3f_-kdw "documentation" 116
(name "documentation"
)
(value "Molecular mass, in atomic units. This is the sum of the atomic weights of the atoms that form this molecule."
)
(uid "-yk94ms_85r_eqyymv3f_-kdw"))
($7 118 < -yk94ms_85r_eqyymv3f_-kdv "isDerived" 116
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kdv"))
($7 119 < -yk94ms_85r_eqyymv3f_-kdu "guid" 116
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00020"
)
(uid "-yk94ms_85r_eqyymv3f_-kdu"))
($6 120 < -yk94ms_85r_eqyymv3f_-kdt "formalCharge" 79
(changeability "frozen")
(name "formalCharge"
)
(uid "-yk94ms_85r_eqyymv3f_-kdt")
(multiplicity "1"))
($7 121 < -yk94ms_85r_eqyymv3f_-kds "documentation" 120
(name "documentation"
)
(value "Formal charge of molecule."
)
(uid "-yk94ms_85r_eqyymv3f_-kds"))
($7 122 < -yk94ms_85r_eqyymv3f_-kdr "isDerived" 120
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kdr"))
($7 123 < -yk94ms_85r_eqyymv3f_-kdq "guid" 120
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00021"
)
(uid "-yk94ms_85r_eqyymv3f_-kdq"))
($6 124 < -yk94ms_85r_eqyymv3f_-kdp "isAromatic" 79
(changeability "frozen")
(name "isAromatic"
)
(uid "-yk94ms_85r_eqyymv3f_-kdp")
(multiplicity "1"))
($7 125 < -yk94ms_85r_eqyymv3f_-kdo "documentation" 124
(name "documentation"
)
(value "Does molecule contain aromatic groups?"
)
(uid "-yk94ms_85r_eqyymv3f_-kdo"))
($7 126 < -yk94ms_85r_eqyymv3f_-kdn "isDerived" 124
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kdn"))
($7 127 < -yk94ms_85r_eqyymv3f_-kdm "guid" 124
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00022"
)
(uid "-yk94ms_85r_eqyymv3f_-kdm"))
($6 128 < -yk94ms_85r_eqyymv3f_-kdl "isParamagnetic" 79
(changeability "frozen")
(name "isParamagnetic"
)
(uid "-yk94ms_85r_eqyymv3f_-kdl")
(multiplicity "1"))
($7 129 < -yk94ms_85r_eqyymv3f_-kdk "documentation" 128
(name "documentation"
)
(value "Does Molecule contain paramagnetic groups?"
)
(uid "-yk94ms_85r_eqyymv3f_-kdk"))
($7 130 < -yk94ms_85r_eqyymv3f_-kdj "isDerived" 128
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kdj"))
($7 131 < -yk94ms_85r_eqyymv3f_-kdi "guid" 128
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00023"
)
(uid "-yk94ms_85r_eqyymv3f_-kdi"))
($6 132 < -yk94ms_85r_eqyymv3f_-kdh "smiles" 79
(name "smiles"
)
(uid "-yk94ms_85r_eqyymv3f_-kdh"))
($7 133 < -yk94ms_85r_eqyymv3f_-kdg "documentation" 132
(name "documentation"
)
(value "SMILES (Simplified Molecular Input Line Entry Specification) string describing molecule. "
)
(uid "-yk94ms_85r_eqyymv3f_-kdg"))
($7 134 < -yk94ms_85r_eqyymv3f_-kdf "guid" 132
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00024"
)
(uid "-yk94ms_85r_eqyymv3f_-kdf"))
($6 135 < -yk94ms_85r_eqyymv3f_-kde "smilesType" 79
(name "smilesType"
)
(uid "-yk94ms_85r_eqyymv3f_-kde"))
($7 136 < -yk94ms_85r_eqyymv3f_-kdd "documentation" 135
(name "documentation"
)
(value "Type of Smiles string in smiles attribute"
)
(uid "-yk94ms_85r_eqyymv3f_-kdd"))
($7 137 < -yk94ms_85r_eqyymv3f_-kdc "guid" 135
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00025"
)
(uid "-yk94ms_85r_eqyymv3f_-kdc"))
($6 138 < -yk94ms_85r_eqyymv3f_-kdb "details" 79
(name "details"
)
(uid "-yk94ms_85r_eqyymv3f_-kdb"))
($7 139 < -yk94ms_85r_eqyymv3f_-kda "guid" 138
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00026"
)
(uid "-yk94ms_85r_eqyymv3f_-kda"))
($8 140 < -yk94ms_85r_eqyymv3f_-kd9 "getMolType" 79
(name "getMolType"
)
(uid "-yk94ms_85r_eqyymv3f_-kd9")
(isQuery true))
($7 141 < -yk94ms_85r_eqyymv3f_-kd6 "documentation" 140
(name "documentation"
)
(value "Getter for derived attribute molType. Possible return values are 'protein', 'DNA', 'RNA', 'carbohydrate', or 'DNA/RNA'"
)
(uid "-yk94ms_85r_eqyymv3f_-kd6"))
($7 142 < -yk94ms_85r_eqyymv3f_-kd5 "opType" 140
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kd5"))
($7 143 < -yk94ms_85r_eqyymv3f_-kd2 "guid" 140
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00034"
)
(uid "-yk94ms_85r_eqyymv3f_-kd2"))
($7 144 < z8kflu_15v_ewd8sewa_-p79 "code:java" 140
(name "code:java"
)
(value "java.util.Set<java.lang.String> aset = new java.util.HashSet<java.lang.String>();"
"for (ccp.api.molecule.Molecule.MolResidue x: getMolResidues())"
"  aset.add(x.getChemComp().getMolType());"
""
"int nn = aset.size();"
"if (nn == 1)"
"  result = aset.iterator().next();"
"else if ((nn == 2) && aset.contains(\"DNA\") && aset.contains(\"RNA\"))"
"  result = \"DNA/RNA\";"
"else"
"  result = null;"
)
(uid "z8kflu_15v_ewd8sewa_-p79"))
($7 145 < z8kflu_15v_ewd8sewa_-p78 "code:python" 140
(name "code:python"
)
(value "aset = set(x.chemComp for x in self.molResidues)"
"aset = set(x.molType for x in aset)"
"if len(aset) == 1:"
"  result = aset.pop()"
"elif aset == set(('DNA', 'RNA')):"
"  result = 'DNA/RNA'"
"else:"
"  result = None"
)
(uid "z8kflu_15v_ewd8sewa_-p78"))
($8 146 < -yk94ms_85r_eqyymv3f_-kd1 "getSeqLength" 79
(name "getSeqLength"
)
(uid "-yk94ms_85r_eqyymv3f_-kd1")
(isQuery true))
($7 147 < -yk94ms_85r_eqyymv3f_-kcy "documentation" 146
(name "documentation"
)
(value "Getter function for derived attribute seqLength."
)
(uid "-yk94ms_85r_eqyymv3f_-kcy"))
($7 148 < -yk94ms_85r_eqyymv3f_-kcw "opType" 146
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kcw"))
($7 149 < -yk94ms_85r_eqyymv3f_-kcu "guid" 146
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00036"
)
(uid "-yk94ms_85r_eqyymv3f_-kcu"))
($7 150 < z8kflu_15v_ewd8sewa_-p77 "code:java" 146
(name "code:java"
)
(value "result = getMolResidues().size();"
)
(uid "z8kflu_15v_ewd8sewa_-p77"))
($7 151 < z8kflu_15v_ewd8sewa_-p76 "code:python" 146
(name "code:python"
)
(value "result = len(self.molResidues)"
)
(uid "z8kflu_15v_ewd8sewa_-p76"))
($8 152 < -yk94ms_85r_eqyymv3f_-kct "getEmpiricalFormula" 79
(name "getEmpiricalFormula"
)
(uid "-yk94ms_85r_eqyymv3f_-kct")
(isQuery true))
($7 153 < -yk94ms_85r_eqyymv3f_-kcq "documentation" 152
(name "documentation"
)
(value "getter for derived attribute empiricalFormula"
)
(uid "-yk94ms_85r_eqyymv3f_-kcq"))
($7 154 < -yk94ms_85r_eqyymv3f_-kcp "opType" 152
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kcp"))
($7 155 < -yk94ms_85r_eqyymv3f_-kcm "guid" 152
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00038"
)
(uid "-yk94ms_85r_eqyymv3f_-kcm"))
($7 156 < z8kflu_15v_ewd8sewa_-p75 "code:java" 152
(name "code:java"
)
(value "// get formula dictionary "
"java.util.Map<java.lang.String, java.lang.Integer> dd = new java.util.HashMap<java.lang.String, java.lang.Integer>();"
"for (ccp.api.molecule.Molecule.MolResidue mr: getMolResidues()) {"
"  for (ccp.api.molecule.ChemComp.AbstractChemAtom ca: mr.getChemComp().findFirstChemCompVar(\"linking\", mr.getLinking(), \"descriptor\", mr.getDescriptor()).getChemAtoms()) {"
"    if (ca instanceof ccp.api.molecule.ChemComp.ChemAtom) {"
"      java.lang.String ss = ((ccp.api.molecule.ChemComp.ChemAtom) ca).getElementSymbol();"
"      java.lang.Integer ii = dd.get(ss);"
"      if (ii == null)"
"        dd.put(ss, 1);"
"      else"
"        dd.put(ss, ii+1);"
"    }"
"  }"
"}"
""
"// generate formula"
"java.lang.StringBuffer ll = new java.lang.StringBuffer(2*dd.size());"
"java.lang.String[] es = { \"C\", \"H\" };"
"for (int kk = 0; kk < es.length; kk++) {"
"  java.lang.String ss = es[kk];"
"  java.lang.Integer ii = dd.remove(ss);"
"  if (ii != null) {"
"    ll.append(ss);"
"    ll.append(ii);"
"  }"
"}"
""
"java.util.List<java.lang.String> keys = java.util.Collections.list(java.util.Collections.enumeration(dd.keySet()));"
"java.util.Collections.sort(keys);"
"for (java.lang.String ss: keys) {"
"  java.lang.Integer ii = dd.get(ss);"
"  ll.append(ss);"
"  ll.append(ii);"
"}"
""
"result = ll.toString();"
)
(uid "z8kflu_15v_ewd8sewa_-p75"))
($7 157 < z8kflu_15v_ewd8sewa_-p74 "code:python" 152
(name "code:python"
)
(value "# get formula dictionary"
"dd = {}"
"clazz = ccp.api.molecule.ChemComp.ChemAtom"
""
"for mr in self.molResidues:"
"  for ss in (ca.elementSymbol for ca in mr.getByNavigation('chemComp', ('chemCompVars', (mr.linking, mr.descriptor)), 'chemAtoms') if isinstance(ca, clazz)):"
"    ii = dd.get(ss)"
"    if ii is None:"
"      dd[ss] = 1"
"    else:"
"      dd[ss] = ii + 1"
""
"# generate formula"
"ll = [None] * (len(dd)*2)"
"next = 0"
"for ss in ('C','H'):"
"  ii = dd.get(ss)"
"  if ii is not None:"
"    ll[next] = ss"
"    ll[next+1] = str(ii)"
"    del dd[ss]"
"    next = next + 2"
""
"items = dd.items()"
"items.sort()"
"for (ss, ii) in items:"
"  ll[next] = ss"
"  ll[next+1] = str(ii)"
"  next = next + 2"
"#"
"result = ''.join(ll) or None"
)
(uid "z8kflu_15v_ewd8sewa_-p74"))
($8 158 < -yk94ms_85r_eqyymv3f_-kcl "getMolecularMass" 79
(name "getMolecularMass"
)
(uid "-yk94ms_85r_eqyymv3f_-kcl")
(isQuery true))
($7 159 < -yk94ms_85r_eqyymv3f_-kci "documentation" 158
(name "documentation"
)
(value "getter for derived attribute molecularMass"
)
(uid "-yk94ms_85r_eqyymv3f_-kci"))
($7 160 < -yk94ms_85r_eqyymv3f_-kch "opType" 158
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kch"))
($7 161 < -yk94ms_85r_eqyymv3f_-kce "guid" 158
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00040"
)
(uid "-yk94ms_85r_eqyymv3f_-kce"))
($7 162 < z8kflu_15v_ewd8sewa_-p73 "code:java" 158
(name "code:java"
)
(value "// get formula dictionary "
"java.util.Map<java.lang.String, java.lang.Integer> dd = new java.util.HashMap<java.lang.String, java.lang.Integer>();"
"for (ccp.api.molecule.Molecule.MolResidue mr: getMolResidues()) {"
"  for (ccp.api.molecule.ChemComp.AbstractChemAtom ca: mr.getChemComp().findFirstChemCompVar(\"linking\", mr.getLinking(), \"descriptor\", mr.getDescriptor()).getChemAtoms()) {"
"    if (ca instanceof ccp.api.molecule.ChemComp.ChemAtom) {"
"      java.lang.String ss = ((ccp.api.molecule.ChemComp.ChemAtom) ca).getElementSymbol();"
"      java.lang.Integer ii = dd.get(ss);"
"      if (ii == null)"
"        dd.put(ss, 1);"
"      else"
"        dd.put(ss, ii+1);"
"    }"
"  }"
"}"
""
"// calculate mass"
"ccp.api.molecule.ChemElement.ChemElementStore xx = getRoot().getCurrentChemElementStore();"
"result = 0.0f;"
"for (java.lang.String ss: dd.keySet()) {"
"  java.lang.Integer ii = dd.get(ss);"
"  result += ii * xx.findFirstChemElement(\"symbol\", ss).getMass();"
"}"
)
(uid "z8kflu_15v_ewd8sewa_-p73"))
($7 163 < z8kflu_15v_ewd8sewa_-p72 "code:python" 158
(name "code:python"
)
(value "# get formula dictionary"
"dd = {}"
"clazz = ccp.api.molecule.ChemComp.ChemAtom"
""
"for mr in self.molResidues:"
"  for ss in (ca.elementSymbol for ca in mr.getByNavigation('chemComp', ('chemCompVars', (mr.linking, mr.descriptor)), 'chemAtoms') if isinstance(ca, clazz)):"
"    ii = dd.get(ss)"
"    if ii is None:"
"      dd[ss] = 1"
"    else:"
"      dd[ss] = ii + 1"
""
"# calculate mass"
"xx = self.root.currentChemElementStore"
"result = sum(ii * xx.findFirstChemElement(symbol=ss).mass for (ss, ii) in dd.iteritems())"
)
(uid "z8kflu_15v_ewd8sewa_-p72"))
($8 164 < -yk94ms_85r_eqyymv3f_-kcd "getFormalCharge" 79
(name "getFormalCharge"
)
(uid "-yk94ms_85r_eqyymv3f_-kcd")
(isQuery true))
($7 165 < -yk94ms_85r_eqyymv3f_-kca "documentation" 164
(name "documentation"
)
(value "getter for derived attribute formalCharge"
)
(uid "-yk94ms_85r_eqyymv3f_-kca"))
($7 166 < -yk94ms_85r_eqyymv3f_-kc9 "opType" 164
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kc9"))
($7 167 < -yk94ms_85r_eqyymv3f_-kc6 "guid" 164
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00042"
)
(uid "-yk94ms_85r_eqyymv3f_-kc6"))
($7 168 < z8kflu_15v_ewd8sewa_-p71 "code:java" 164
(name "code:java"
)
(value "result = 0;"
"for (ccp.api.molecule.Molecule.MolResidue x: getMolResidues())"
"  result += x.getChemCompVar().getFormalCharge();"
)
(uid "z8kflu_15v_ewd8sewa_-p71"))
($7 169 < z8kflu_15v_ewd8sewa_-p70 "code:python" 164
(name "code:python"
)
(value "result = sum(x.chemCompVar.formalCharge for x in self.molResidues)"
)
(uid "z8kflu_15v_ewd8sewa_-p70"))
($8 170 < -yk94ms_85r_eqyymv3f_-kc5 "getIsAromatic" 79
(name "getIsAromatic"
)
(uid "-yk94ms_85r_eqyymv3f_-kc5")
(isQuery true))
($7 171 < -yk94ms_85r_eqyymv3f_-kc2 "documentation" 170
(name "documentation"
)
(value "getter for derived attribute isAromatic"
)
(uid "-yk94ms_85r_eqyymv3f_-kc2"))
($7 172 < -yk94ms_85r_eqyymv3f_-kc1 "opType" 170
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kc1"))
($7 173 < -yk94ms_85r_eqyymv3f_-kby "guid" 170
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00044"
)
(uid "-yk94ms_85r_eqyymv3f_-kby"))
($7 174 < z8kflu_15v_ewd8sewa_-p6z "code:java" 170
(name "code:java"
)
(value "result = false;"
"for (ccp.api.molecule.Molecule.MolResidue rr: getMolResidues()) {"
"  if (rr.getChemCompVar().getIsAromatic()) {"
"    result = true;"
"    break;"
"  }"
"}"
)
(uid "z8kflu_15v_ewd8sewa_-p6z"))
($7 175 < z8kflu_15v_ewd8sewa_-p6y "code:python" 170
(name "code:python"
)
(value "for rr in self.molResidues:"
"  if rr.chemCompVar.isAromatic == True:"
"    result = True"
"    break"
"else:"
"  result = False"
)
(uid "z8kflu_15v_ewd8sewa_-p6y"))
($8 176 < -yk94ms_85r_eqyymv3f_-kbx "getIsParamagnetic" 79
(name "getIsParamagnetic"
)
(uid "-yk94ms_85r_eqyymv3f_-kbx")
(isQuery true))
($7 177 < -yk94ms_85r_eqyymv3f_-kbu "documentation" 176
(name "documentation"
)
(value "getter for derived attribute isParamagnetic"
)
(uid "-yk94ms_85r_eqyymv3f_-kbu"))
($7 178 < -yk94ms_85r_eqyymv3f_-kbt "opType" 176
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kbt"))
($7 179 < -yk94ms_85r_eqyymv3f_-kbq "guid" 176
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00046"
)
(uid "-yk94ms_85r_eqyymv3f_-kbq"))
($7 180 < z8kflu_15v_ewd8sewa_-p6x "code:java" 176
(name "code:java"
)
(value "result = false;"
"for (ccp.api.molecule.Molecule.MolResidue rr: getMolResidues()) {"
"  if (rr.getChemCompVar().getIsParamagnetic()) {"
"    result = true;"
"    break;"
"  }"
"}"
)
(uid "z8kflu_15v_ewd8sewa_-p6x"))
($7 181 < z8kflu_15v_ewd8sewa_-p6w "code:python" 176
(name "code:python"
)
(value "for rr in self.molResidues:"
"  if rr.chemCompVar.isParamagnetic == True:"
"    result = True"
"    break"
"else:"
"  result = False"
)
(uid "z8kflu_15v_ewd8sewa_-p6w"))
($6 182 < -yk94ms_85r_eqyymv3f_-kbp "seqDetails" 79
(name "seqDetails"
)
(uid "-yk94ms_85r_eqyymv3f_-kbp"))
($7 183 < -yk94ms_85r_eqyymv3f_-kbo "documentation" 182
(name "documentation"
)
(value "Details, notes, comments etc. about the sequence."
)
(uid "-yk94ms_85r_eqyymv3f_-kbo"))
($7 184 < -yk94ms_85r_eqyymv3f_-kbn "guid" 182
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00027"
)
(uid "-yk94ms_85r_eqyymv3f_-kbn"))
($6 185 < -yk94ms_85r_eqyymv3f_-kbm "seqString" 79
(changeability "frozen")
(name "seqString"
)
(uid "-yk94ms_85r_eqyymv3f_-kbm"))
($7 186 < -yk94ms_85r_eqyymv3f_-kbl "documentation" 185
(name "documentation"
)
(value "String holding sequence one-letter-codes with '*' for non-standard residues. The attribute is always defined, but is equal to the empty string except for linear polymers of defined molType. Note that one-letter codes are only defined for std ChemComps, which are only found for peptides and nucleotides, so the value for linear polymers of type 'other' is likely to be meaningless. "
)
(uid "-yk94ms_85r_eqyymv3f_-kbl"))
($7 187 < -yk94ms_85r_eqyymv3f_-kbk "isDerived" 185
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kbk"))
($7 188 < -yk94ms_85r_eqyymv3f_-kbj "guid" 185
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00028"
)
(uid "-yk94ms_85r_eqyymv3f_-kbj"))
($6 189 < -yk94ms_85r_eqyymv3f_-kbi "stdSeqString" 79
(changeability "frozen")
(name "stdSeqString"
)
(uid "-yk94ms_85r_eqyymv3f_-kbi"))
($7 190 < -yk94ms_85r_eqyymv3f_-kbh "documentation" 189
(name "documentation"
)
(value "String holding sequence one-letter-codes with non-standard ChemComps replaced by one-letter-code of corresponding standard derivative, or by '*' if there is no standard derivative."
" The attribute is always defined, but is equal to the empty string except for linear polymers of defined molType. Note that one-letter codes are only defined for std ChemComps, which are only found for peptides and nucleotides, so the value for linear polymers of type 'other' is likely to be meaningless. "
)
(uid "-yk94ms_85r_eqyymv3f_-kbh"))
($7 191 < -yk94ms_85r_eqyymv3f_-kbg "isDerived" 189
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kbg"))
($7 192 < -yk94ms_85r_eqyymv3f_-kbf "guid" 189
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00029"
)
(uid "-yk94ms_85r_eqyymv3f_-kbf"))
($6 193 < -yk94ms_85r_eqyymv3f_-kbe "hasNonStdChemComp" 79
(changeability "frozen")
(name "hasNonStdChemComp"
)
(uid "-yk94ms_85r_eqyymv3f_-kbe")
(multiplicity "1"))
($7 194 < -yk94ms_85r_eqyymv3f_-kbd "documentation" 193
(name "documentation"
)
(value "Does molecule contain non-standard ChemComp? Note that this will be true whenever the molecule does not consist entirely of StdChemComps. Since only molTypes protein, DNA, and RNA have any StdChemComps at all, this attribute will be True but meaningless for any Molecule that contains ChemComps of other types."
)
(uid "-yk94ms_85r_eqyymv3f_-kbd"))
($7 195 < -yk94ms_85r_eqyymv3f_-kbc "isDerived" 193
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kbc"))
($7 196 < -yk94ms_85r_eqyymv3f_-kbb "guid" 193
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00030"
)
(uid "-yk94ms_85r_eqyymv3f_-kbb"))
($6 197 < -yk94ms_85r_eqyymv3f_-kba "hasNonStdChirality" 79
(changeability "frozen")
(name "hasNonStdChirality"
)
(uid "-yk94ms_85r_eqyymv3f_-kba"))
($7 198 < -yk94ms_85r_eqyymv3f_-kb9 "documentation" 197
(name "documentation"
)
(value "Does molecule contain ChemComp of non-standard chirality? Note that this will be true also when the Molecule contains a ChemComp where no StdChirality is defined."
)
(uid "-yk94ms_85r_eqyymv3f_-kb9"))
($7 199 < -yk94ms_85r_eqyymv3f_-kb8 "isDerived" 197
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kb8"))
($7 200 < -yk94ms_85r_eqyymv3f_-kb7 "guid" 197
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00031"
)
(uid "-yk94ms_85r_eqyymv3f_-kb7"))
($6 201 < -yk94ms_85r_eqyymv3f_-kb6 "isStdLinear" 79
(changeability "frozen")
(name "isStdLinear"
)
(uid "-yk94ms_85r_eqyymv3f_-kb6")
(multiplicity "1"))
($7 202 < -yk94ms_85r_eqyymv3f_-kb5 "documentation" 201
(name "documentation"
)
(value "Is the molecule a standard linear polymer? A linear polymer must contain a linear sequence where MolResidues with successive serials are linked by linear polymer type links  (linkCodes 'next' and 'prev'). "
""
"Linear polymers may be heavily crosslinked but all the sequential links must be present and of  the correct type. The component MolResidues may be of any type or a mixture of types (peptide, nucleotide, styrene monomers, ...) provided the 'next' and/or 'prev' links are present."
"The following are not linear polymers:"
"- A strand of DNA with a break in the middle of the sequence numbering, even if the strand is circular."
"- A protein with one peptide bond replaced by a bond going through an Aspartate side chain COOH. "
"- A glycoprotein. "
"- A linear polysaccharide."
)
(uid "-yk94ms_85r_eqyymv3f_-kb5"))
($7 203 < -yk94ms_85r_eqyymv3f_-kb4 "isDerived" 201
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kb4"))
($7 204 < -yk94ms_85r_eqyymv3f_-kb3 "guid" 201
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00032"
)
(uid "-yk94ms_85r_eqyymv3f_-kb3"))
($8 205 < -yk94ms_85r_eqyymv3f_-kb2 "getIsStdCyclic" 79
(name "getIsStdCyclic"
)
(uid "-yk94ms_85r_eqyymv3f_-kb2")
(isQuery true))
($7 206 < -yk94ms_85r_eqyymv3f_-kaz "documentation" 205
(name "documentation"
)
(value "getter for derived attribute isStdCyclic"
)
(uid "-yk94ms_85r_eqyymv3f_-kaz"))
($7 207 < -yk94ms_85r_eqyymv3f_-kay "opType" 205
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kay"))
($7 208 < -yk94ms_85r_eqyymv3f_-kav "guid" 205
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00048"
)
(uid "-yk94ms_85r_eqyymv3f_-kav"))
($7 209 < z8kflu_15v_ewd8sewa_-p6v "code:java" 205
(name "code:java"
)
(value "java.util.Collection<? extends ccp.api.molecule.Molecule.MolResLink> molResLinks = getMolResLinks();"
"int maxDiff = getMolResidues().size() - 1;"
"int spareLinks = molResLinks.size() - maxDiff - 1;"
"for (ccp.api.molecule.Molecule.MolResLink molResLink: molResLinks) {"
"  java.util.Set<ccp.api.molecule.Molecule.MolResLinkEnd> molResLinkEnds = molResLink.getMolResLinkEnds();"
"  java.util.Iterator<ccp.api.molecule.Molecule.MolResLinkEnd> iter = molResLinkEnds.iterator();"
"  ccp.api.molecule.Molecule.MolResLinkEnd endA = iter.next();"
"  ccp.api.molecule.Molecule.MolResLinkEnd endB = iter.next();"
"  java.lang.String codeA = endA.getLinkCode();"
"  java.lang.String codeB = endB.getLinkCode();"
"  int diff = endA.getMolResidue().getSerial() - endB.getMolResidue().getSerial();"
"  if (!(((diff == -1) && \"next\".equals(codeA) && \"prev\".equals(codeB)) ||"
"        ((diff == 1) && \"next\".equals(codeB) && \"prev\".equals(codeA)) ||"
"        ((diff == maxDiff) && \"next\".equals(codeA) && \"prev\".equals(codeB)) ||"
"        ((diff == -maxDiff) && \"next\".equals(codeB) && \"prev\".equals(codeA))))"
"    spareLinks--;"
"}"
"if (spareLinks < 0)"
"  result = false;"
"else"
"  result = true;"
)
(uid "z8kflu_15v_ewd8sewa_-p6v"))
($7 210 < z8kflu_15v_ewd8sewa_-p6u "code:python" 205
(name "code:python"
)
(value "molResLinks = self.molResLinks"
"maxDiff = len(self.molResidues)-1"
"spareLinks = len(molResLinks) - maxDiff -1"
""
"for molResLink in molResLinks:"
"  endA, endB = molResLink.molResLinkEnds"
"  codeA = endA.linkCode"
"  codeB = endB.linkCode"
"  diff = endA.molResidue.serial - endB.molResidue.serial"
"  if not ( (diff == -1 and codeA == 'next' and codeB == 'prev') or "
"            (diff == 1 and codeB == 'next' and codeA == 'prev' ) or"
"            (diff == maxDiff and codeA == 'next' and codeB == 'prev') or "
"            (diff == -maxDiff and codeB == 'next' and codeA == 'prev' ) ):"
"    spareLinks = spareLinks -1"
""
"if spareLinks < 0:"
"  return False"
"else:"
"  return True"
)
(uid "z8kflu_15v_ewd8sewa_-p6u"))
($6 211 < -yk94ms_85r_eqyymv3f_-kau "isStdCyclic" 79
(changeability "frozen")
(name "isStdCyclic"
)
(uid "-yk94ms_85r_eqyymv3f_-kau"))
($7 212 < -yk94ms_85r_eqyymv3f_-kat "documentation" 211
(name "documentation"
)
(value "Is Molecule a Std Cyclic polymer, i.e. a Std Linear polymer with a polymer-type link between the last and the first residue?"
)
(uid "-yk94ms_85r_eqyymv3f_-kat"))
($7 213 < -yk94ms_85r_eqyymv3f_-kas "isDerived" 211
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-kas"))
($7 214 < -yk94ms_85r_eqyymv3f_-kar "guid" 211
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00033"
)
(uid "-yk94ms_85r_eqyymv3f_-kar"))
($8 215 < -yk94ms_85r_eqyymv3f_-kaq "getIsStdLinear" 79
(name "getIsStdLinear"
)
(uid "-yk94ms_85r_eqyymv3f_-kaq")
(isQuery true))
($7 216 < -yk94ms_85r_eqyymv3f_-kan "documentation" 215
(name "documentation"
)
(value "getter for derived attribute isStdLinear"
)
(uid "-yk94ms_85r_eqyymv3f_-kan"))
($7 217 < -yk94ms_85r_eqyymv3f_-kam "opType" 215
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kam"))
($7 218 < -yk94ms_85r_eqyymv3f_-kaj "guid" 215
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00050"
)
(uid "-yk94ms_85r_eqyymv3f_-kaj"))
($7 219 < z8kflu_15v_ewd8sewa_-p6t "code:java" 215
(name "code:java"
)
(value "java.util.Collection<? extends ccp.api.molecule.Molecule.MolResLink> molResLinks = getMolResLinks();"
"int maxDiff = getMolResidues().size() - 1;"
"int spareLinks = molResLinks.size() - maxDiff;"
"for (ccp.api.molecule.Molecule.MolResLink molResLink: molResLinks) {"
"  java.util.Set<ccp.api.molecule.Molecule.MolResLinkEnd> molResLinkEnds = molResLink.getMolResLinkEnds();"
"  java.util.Iterator<ccp.api.molecule.Molecule.MolResLinkEnd> iter = molResLinkEnds.iterator();"
"  ccp.api.molecule.Molecule.MolResLinkEnd endA = iter.next();"
"  ccp.api.molecule.Molecule.MolResLinkEnd endB = iter.next();"
"  java.lang.String codeA = endA.getLinkCode();"
"  java.lang.String codeB = endB.getLinkCode();"
"  int diff = endA.getMolResidue().getSerial() - endB.getMolResidue().getSerial();"
"  if (!(((diff == -1) && \"next\".equals(codeA) && \"prev\".equals(codeB)) ||"
"        ((diff == 1) && \"next\".equals(codeB) && \"prev\".equals(codeA))))"
"    spareLinks--;"
"}"
"if (spareLinks < 0)"
"  result = false;"
"else"
"  result = true;"
)
(uid "z8kflu_15v_ewd8sewa_-p6t"))
($7 220 < z8kflu_15v_ewd8sewa_-p6s "code:python" 215
(name "code:python"
)
(value "molResLinks = self.molResLinks"
"maxDiff = len(self.molResidues)-1"
"spareLinks = len(molResLinks) - maxDiff"
""
"for molResLink in molResLinks:"
"  endA, endB = molResLink.molResLinkEnds"
"  codeA = endA.linkCode"
"  codeB = endB.linkCode"
"  diff = endA.molResidue.serial - endB.molResidue.serial"
"  if not ( (diff == -1 and codeA == 'next' and codeB == 'prev') or "
"            (diff == 1 and codeB == 'next' and codeA == 'prev' ) ):"
"    spareLinks = spareLinks -1"
""
"if spareLinks < 0:"
"  return False"
"else:"
"  return True"
)
(uid "z8kflu_15v_ewd8sewa_-p6s"))
($8 221 < -yk94ms_85r_eqyymv3f_-kai "getHasNonStdChemComp" 79
(name "getHasNonStdChemComp"
)
(uid "-yk94ms_85r_eqyymv3f_-kai")
(isQuery true))
($7 222 < -yk94ms_85r_eqyymv3f_-kaf "documentation" 221
(name "documentation"
)
(value "getter for derived attribute hasNonStdChemComp"
)
(uid "-yk94ms_85r_eqyymv3f_-kaf"))
($7 223 < -yk94ms_85r_eqyymv3f_-kae "opType" 221
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-kae"))
($7 224 < -yk94ms_85r_eqyymv3f_-kab "guid" 221
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00052"
)
(uid "-yk94ms_85r_eqyymv3f_-kab"))
($7 225 < z8kflu_15v_ewd8sewa_-p6r "code:java" 221
(name "code:java"
)
(value "result = false;"
"for (ccp.api.molecule.Molecule.MolResidue x: getMolResidues()) {"
"  ccp.api.molecule.ChemComp.ChemComp cc = x.getChemComp();"
"  if (!cc.getCcpCode().equals(cc.getStdChemCompCode())) {"
"    result = true;"
"    break;"
"  }"
"}"
)
(uid "z8kflu_15v_ewd8sewa_-p6r"))
($7 226 < z8kflu_15v_ewd8sewa_-p6q "code:python" 221
(name "code:python"
)
(value "for cc in frozenset(x.chemComp for x in self.molResidues):"
"  if cc.ccpCode != cc.stdChemCompCode:"
"    result = True"
"    break"
"else:"
"  result = False"
)
(uid "z8kflu_15v_ewd8sewa_-p6q"))
($8 227 < -yk94ms_85r_eqyymv3f_-kaa "getHasNonStdChirality" 79
(name "getHasNonStdChirality"
)
(uid "-yk94ms_85r_eqyymv3f_-kaa")
(isQuery true))
($7 228 < -yk94ms_85r_eqyymv3f_-ka7 "documentation" 227
(name "documentation"
)
(value "getter for derived link hasNonStdChirality"
)
(uid "-yk94ms_85r_eqyymv3f_-ka7"))
($7 229 < -yk94ms_85r_eqyymv3f_-ka6 "opType" 227
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-ka6"))
($7 230 < -yk94ms_85r_eqyymv3f_-ka3 "guid" 227
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00054"
)
(uid "-yk94ms_85r_eqyymv3f_-ka3"))
($7 231 < z8kflu_15v_ewd8sewa_-p6p "code:java" 227
(name "code:java"
)
(value "result = false;"
"for (ccp.api.molecule.Molecule.MolResidue x: getMolResidues()) {"
"  ccp.api.molecule.ChemComp.ChemComp cc = x.getChemComp();"
"  if (!java.lang.Boolean.TRUE.equals(cc.getHasStdChirality())) {"
"    result = true;"
"    break;"
"  }"
"}"
)
(uid "z8kflu_15v_ewd8sewa_-p6p"))
($7 232 < z8kflu_15v_ewd8sewa_-p6o "code:python" 227
(name "code:python"
)
(value "for cc in frozenset(x.chemComp for x in self.molResidues):"
"  if not cc.hasStdChirality:"
"    result = True"
"    break"
"else:"
"  result = False"
)
(uid "z8kflu_15v_ewd8sewa_-p6o"))
($8 233 < -yk94ms_85r_eqyymv3f_-ka2 "getSeqString" 79
(name "getSeqString"
)
(uid "-yk94ms_85r_eqyymv3f_-ka2")
(isQuery true))
($7 234 < -yk94ms_85r_eqyymv3f_-k9z "documentation" 233
(name "documentation"
)
(value "getter for derived attribute seqString"
)
(uid "-yk94ms_85r_eqyymv3f_-k9z"))
($7 235 < -yk94ms_85r_eqyymv3f_-k9y "opType" 233
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-k9y"))
($7 236 < -yk94ms_85r_eqyymv3f_-k9v "guid" 233
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00056"
)
(uid "-yk94ms_85r_eqyymv3f_-k9v"))
($7 237 < z8kflu_15v_ewd8sewa_-p6n "code:java" 233
(name "code:java"
)
(value "java.util.List<? extends ccp.api.molecule.Molecule.MolResidue> ll = sortedMolResidues();"
"result = null;"
"if (!ll.isEmpty()) {"
"  java.lang.String molType = ll.get(0).getMolType();"
"  java.util.Map<java.lang.String, java.lang.String> mapDict = ccp.general.Constants.getCcpCodeToCode1LetterMap(molType);"
""
"  if ((mapDict != null) && getIsStdLinear()) {"
"    int nn = ll.size();"
"    java.lang.StringBuffer output = new java.lang.StringBuffer(nn);"
""
"    boolean ok = true;"
"    for (ccp.api.molecule.Molecule.MolResidue molRes: ll) {"
"      if (!molType.equals(molRes.getMolType())) {"
"        ok = false;"
"        break;"
"      }"
""
"      String code = mapDict.get(molRes.getCcpCode());"
"      if (code == null)"
"        code = \"*\";"
"      output.append(code);"
"    }"
""
"    if (ok)"
"      result = output.toString();"
"  }"
"}"
)
(uid "z8kflu_15v_ewd8sewa_-p6n"))
($7 238 < z8kflu_15v_ewd8sewa_-p6m "code:python" 233
(name "code:python"
)
(value "ll = self.sortedMolResidues()"
"result = None"
"if ll:"
"  "
"  from ccp.general.Constants import ccpCodeToCode1LetterDict"
"  molType = ll[0].molType"
"  mapDict = ccpCodeToCode1LetterDict.get(molType)"
"  "
"  if mapDict is not None and self.isStdLinear:"
"    output = [None] * len(ll)"
"    ii = -1"
""
"    for rr in ll:"
"      if rr.molType != molType:"
"        break"
"      "
"      ii = ii + 1"
"      output[ii] = mapDict.get(rr.ccpCode,'*')"
""
"    else:"
"      result = ''.join(output)"
)
(uid "z8kflu_15v_ewd8sewa_-p6m"))
($8 239 < -yk94ms_85r_eqyymv3f_-k9u "getStdSeqString" 79
(name "getStdSeqString"
)
(uid "-yk94ms_85r_eqyymv3f_-k9u")
(isQuery true))
($7 240 < -yk94ms_85r_eqyymv3f_-k9r "documentation" 239
(name "documentation"
)
(value "getter for serived attribute stdSeqString"
)
(uid "-yk94ms_85r_eqyymv3f_-k9r"))
($7 241 < -yk94ms_85r_eqyymv3f_-k9q "opType" 239
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-k9q"))
($7 242 < -yk94ms_85r_eqyymv3f_-k9n "guid" 239
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00058"
)
(uid "-yk94ms_85r_eqyymv3f_-k9n"))
($7 243 < z8kflu_15v_ewd8sewa_-p6l "code:java" 239
(name "code:java"
)
(value "java.util.List<? extends ccp.api.molecule.Molecule.MolResidue> ll = sortedMolResidues();"
"result = null;"
"if (!ll.isEmpty()) {"
"  java.lang.String molType = ll.get(0).getMolType();"
"  java.util.Map<java.lang.String, java.lang.String> mapDict = ccp.general.Constants.getCcpCodeToCode1LetterMap(molType);"
""
"  if ((mapDict != null) && getIsStdLinear()) {"
"    int nn = ll.size();"
"    java.lang.StringBuffer output = new java.lang.StringBuffer(nn);"
""
"    boolean ok = true;"
"    for (ccp.api.molecule.Molecule.MolResidue molRes: ll) {"
"      if (!molType.equals(molRes.getMolType())) {"
"        ok = false;"
"        break;"
"      }"
""
"      String code = mapDict.get(molRes.getCcpCode());"
"      if (code == null) {"
"        code = molRes.getChemComp().getCode1Letter();"
"        if ((code == null) || (code.length() == 0))"
"          code = \"*\";"
"      }"
"      output.append(code);"
"    }"
""
"    if (ok)"
"      result = output.toString();"
"  }"
"}"
)
(uid "z8kflu_15v_ewd8sewa_-p6l"))
($7 244 < z8kflu_15v_ewd8sewa_-p6k "code:python" 239
(name "code:python"
)
(value "ll = self.sortedMolResidues()"
"result = None"
"if ll:"
"  "
"  from ccp.general.Constants import ccpCodeToCode1LetterDict"
"  "
"  molType = ll[0].molType"
"  mapDict = ccpCodeToCode1LetterDict.get(molType)"
"  if mapDict is not None and self.isStdLinear:"
""
"    output = [None] * len(ll)"
"    ii = -1"
""
"    for rr in ll:"
"      if rr.molType != molType:"
"        break"
"      "
"      ii = ii + 1"
"      output[ii] = mapDict.get(rr.ccpCode) or rr.chemComp.code1Letter or '*'"
""
"    else:"
"      result = ''.join(output)"
)
(uid "z8kflu_15v_ewd8sewa_-p6k"))
($9 245 < -yk94ms_85r_eqyymv3f_-k9m "#<anon> (Molecule, Chain)##," 79
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k9m"))
($10 246 < -yk94ms_85r_eqyymv3f_-k9l "#0" 245
(changeability "frozen")
(uid "-yk94ms_85r_eqyymv3f_-k9l")
(multiplicity "1"))
($7 247 < -yk94ms_85r_eqyymv3f_-k9k "documentation" 246
(name "documentation"
)
(value "Molecule to which Chain corresponds"
)
(uid "-yk94ms_85r_eqyymv3f_-k9k"))
($7 248 < -yk94ms_85r_eqyymv3f_-k9j "guid" 246
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00044"
)
(uid "-yk94ms_85r_eqyymv3f_-k9j"))
($10 249 < -yk94ms_85r_eqyymv3f_-k9i "#1" 245
(uid "-yk94ms_85r_eqyymv3f_-k9i")
(multiplicity "*"))
($7 250 < -yk94ms_85r_eqyymv3f_-k9g "documentation" 249
(name "documentation"
)
(value "MolSystem Chains corresponding to Molecule"
)
(uid "-yk94ms_85r_eqyymv3f_-k9g"))
($7 251 < -yk94ms_85r_eqyymv3f_-k9f "guid" 249
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00045"
)
(uid "-yk94ms_85r_eqyymv3f_-k9f"))
($7 252 < -hkpzxr_-li2_fcls44u3_-p96 "noDeleteIfSet" 249
(name "noDeleteIfSet"
)
(value "True"
)
(uid "-hkpzxr_-li2_fcls44u3_-p96"))
($9 253 < -yk94ms_-e3s_e41656c6_-lua "#<anon> (Molecule, MolResidue)##," 79
(name "")
(uid "-yk94ms_-e3s_e41656c6_-lua"))
($10 254 < -yk94ms_85r_eqyymv3f_-k9d "#0" 253
(changeability "frozen")
(aggregation "composite")
(uid "-yk94ms_85r_eqyymv3f_-k9d")
(multiplicity "1"))
($7 255 < -yk94ms_85r_eqyymv3f_-k9c "guid" 254
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00046"
)
(uid "-yk94ms_85r_eqyymv3f_-k9c"))
($10 256 < -yk94ms_85r_eqyymv3f_-k9b "#1" 253
(uid "-yk94ms_85r_eqyymv3f_-k9b")
(multiplicity "*"))
($7 257 < -yk94ms_85r_eqyymv3f_-k9a "guid" 256
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00047"
)
(uid "-yk94ms_85r_eqyymv3f_-k9a"))
($9 258 < -yk94ms_85r_eqyymv3f_-k99 "#<anon> (Molecule, MoleculeSysName)##," 79
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k99"))
($10 259 < -yk94ms_85r_eqyymv3f_-k98 "#0" 258
(changeability "frozen")
(aggregation "composite")
(uid "-yk94ms_85r_eqyymv3f_-k98")
(multiplicity "1"))
($7 260 < -yk94ms_85r_eqyymv3f_-k97 "guid" 259
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00048"
)
(uid "-yk94ms_85r_eqyymv3f_-k97"))
($10 261 < -yk94ms_85r_eqyymv3f_-k96 "#1" 258
(uid "-yk94ms_85r_eqyymv3f_-k96")
(multiplicity "*"))
($7 262 < -yk94ms_85r_eqyymv3f_-k95 "guid" 261
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00049"
)
(uid "-yk94ms_85r_eqyymv3f_-k95"))
($9 263 < -yk94ms_-e3s_e41656c6_-lu4 "#<anon> (Molecule, Citation)##," 79
(name "")
(uid "-yk94ms_-e3s_e41656c6_-lu4"))
($10 264 < -yk94ms_85r_eqyymv3f_-k93 "#0" 263
(uid "-yk94ms_85r_eqyymv3f_-k93")
(multiplicity "*"))
($7 265 < -yk94ms_85r_eqyymv3f_-k92 "documentation" 264
(name "documentation"
)
(value "Molecules described by Citation"
)
(uid "-yk94ms_85r_eqyymv3f_-k92"))
($7 266 < -yk94ms_85r_eqyymv3f_-k91 "guid" 264
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00050"
)
(uid "-yk94ms_85r_eqyymv3f_-k91"))
($10 267 < -yk94ms_85r_eqyymv3f_-k90 "#1" 263
(changeability "frozen")
(uid "-yk94ms_85r_eqyymv3f_-k90")
(multiplicity "*"))
($7 268 < -yk94ms_85r_eqyymv3f_-k8z "documentation" 267
(name "documentation"
)
(value "Citations describing molecule."
)
(uid "-yk94ms_85r_eqyymv3f_-k8z"))
($7 269 < -yk94ms_85r_eqyymv3f_-k8y "guid" 267
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00051"
)
(uid "-yk94ms_85r_eqyymv3f_-k8y"))
($9 270 < -yk94ms_-e3s_e41656c6_-ltz "#<anon> (Molecule, NaturalSource)##," 79
(name "")
(uid "-yk94ms_-e3s_e41656c6_-ltz"))
($10 271 < -yk94ms_85r_eqyymv3f_-k8w "#0" 270
(uid "-yk94ms_85r_eqyymv3f_-k8w")
(multiplicity "*"))
($7 272 < -yk94ms_85r_eqyymv3f_-k8v "documentation" 271
(name "documentation"
)
(value "Molecules from natural source."
)
(uid "-yk94ms_85r_eqyymv3f_-k8v"))
($7 273 < -yk94ms_85r_eqyymv3f_-k8u "guid" 271
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00001"
)
(uid "-yk94ms_85r_eqyymv3f_-k8u"))
($10 274 < -yk94ms_85r_eqyymv3f_-k8t "#1" 270
(uid "-yk94ms_85r_eqyymv3f_-k8t"))
($7 275 < -yk94ms_85r_eqyymv3f_-k8s "documentation" 274
(name "documentation"
)
(value "Natural source for molecule"
)
(uid "-yk94ms_85r_eqyymv3f_-k8s"))
($7 276 < -yk94ms_85r_eqyymv3f_-k8r "guid" 274
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00002"
)
(uid "-yk94ms_85r_eqyymv3f_-k8r"))
($9 277 < -yk94ms_-e3s_e41656c6_-ltt "#<anon> (Molecule, MolComponent)##," 79
(name "")
(uid "-yk94ms_-e3s_e41656c6_-ltt"))
($10 278 < -yk94ms_85r_eqyymv3f_-k8o "#0" 277
(uid "-yk94ms_85r_eqyymv3f_-k8o"))
($7 279 < -yk94ms_85r_eqyymv3f_-k8n "documentation" 278
(name "documentation"
)
(value "The molecule used to describe the precise topology of the MolComponent."
)
(uid "-yk94ms_85r_eqyymv3f_-k8n"))
($7 280 < -yk94ms_85r_eqyymv3f_-k8m "guid" 278
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00003"
)
(uid "-yk94ms_85r_eqyymv3f_-k8m"))
($11 281 < -yk94ms_85r_eqyymv3f_-k8l "Molecule_must_be_finalised" 278
(name "Molecule_must_be_finalised"
)
(uid "-yk94ms_85r_eqyymv3f_-k8l")
(body "code:python"
"_"
"value.isFinalised"
"_"
"code:java"
"_"
"other.getIsFinalised()"
))
($7 282 < -yk94ms_85r_eqyymv3f_-k8k "guid" 281
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00005"
)
(uid "-yk94ms_85r_eqyymv3f_-k8k"))
($10 283 < -yk94ms_85r_eqyymv3f_-k8j "#1" 277
(uid "-yk94ms_85r_eqyymv3f_-k8j")
(multiplicity "*"))
($7 284 < -yk94ms_85r_eqyymv3f_-k8i "documentation" 283
(name "documentation"
)
(value "The list of MolComponent associated to a particular Molecule."
)
(uid "-yk94ms_85r_eqyymv3f_-k8i"))
($7 285 < -yk94ms_85r_eqyymv3f_-k8h "guid" 283
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00004"
)
(uid "-yk94ms_85r_eqyymv3f_-k8h"))
($7 286 < -hkpzxr_-li2_fcls44u3_-p95 "noDeleteIfSet" 283
(name "noDeleteIfSet"
)
(value "True"
)
(uid "-hkpzxr_-li2_fcls44u3_-p95"))
($9 287 < -yk94ms_85r_eqyymv3f_-k8g "#<anon> (Molecule, MolResLink)##," 79
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k8g"))
($10 288 < -yk94ms_85r_eqyymv3f_-k8f "#0" 287
(changeability "frozen")
(aggregation "composite")
(uid "-yk94ms_85r_eqyymv3f_-k8f")
(multiplicity "1"))
($7 289 < -yk94ms_85r_eqyymv3f_-k8e "guid" 288
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00006"
)
(uid "-yk94ms_85r_eqyymv3f_-k8e"))
($10 290 < -yk94ms_85r_eqyymv3f_-k8d "#1" 287
(uid "-yk94ms_85r_eqyymv3f_-k8d")
(multiplicity "*"))
($7 291 < -yk94ms_85r_eqyymv3f_-k8c "guid" 290
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00007"
)
(uid "-yk94ms_85r_eqyymv3f_-k8c"))
($9 292 < -yk94ms_85r_eqyymv3f_-k8b "#<anon> (Molecule, MolSeqFragment)##," 79
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k8b"))
($10 293 < -yk94ms_85r_eqyymv3f_-k8a "#0" 292
(changeability "frozen")
(aggregation "composite")
(uid "-yk94ms_85r_eqyymv3f_-k8a")
(multiplicity "1"))
($7 294 < -yk94ms_85r_eqyymv3f_-k89 "guid" 293
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00008"
)
(uid "-yk94ms_85r_eqyymv3f_-k89"))
($10 295 < -yk94ms_85r_eqyymv3f_-k88 "#1" 292
(uid "-yk94ms_85r_eqyymv3f_-k88")
(multiplicity "*"))
($7 296 < -yk94ms_85r_eqyymv3f_-k87 "guid" 295
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00009"
)
(uid "-yk94ms_85r_eqyymv3f_-k87"))
($12 297 < -yk94ms_l0q_evqpurmn_-p7a "#<anon> (Molecule, TopObject)" 79
(uid "-yk94ms_l0q_evqpurmn_-p7a"))
($9 298 < -hkpzxr_v5_f9gtenwt_-p89 "#<anon> (Molecule, Alignment)##," 79
(name "")
(uid "-hkpzxr_v5_f9gtenwt_-p89"))
($10 299 < -hkpzxr_v5_f9gtenwt_-p87 "#0" 298
(changeability "frozen")
(aggregation "composite")
(uid "-hkpzxr_v5_f9gtenwt_-p87")
(multiplicity "1"))
($7 300 < -hkpzxr_v5_f9gtenwt_-p7v "guid" 299
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:40_00001"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7v"))
($10 301 < -hkpzxr_v5_f9gtenwt_-p86 "#1" 298
(uid "-hkpzxr_v5_f9gtenwt_-p86")
(multiplicity "*"))
($7 302 < -hkpzxr_v5_f9gtenwt_-p7u "guid" 301
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:40_00002"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7u"))
($7 303 < -yk94ms_85r_eqyymv3f_-k86 "documentation" 79
(name "documentation"
)
(value "Abstract molecule, with defined topology but no location, coordinates, etc. "
)
(uid "-yk94ms_85r_eqyymv3f_-k86"))
($7 304 < -yk94ms_85r_eqyymv3f_-k84 "guid" 79
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00039"
)
(uid "-yk94ms_85r_eqyymv3f_-k84"))
($7 305 < -yk94ms_15v_evqyosvg_-p8n "keyNames" 79
(name "keyNames"
)
(value "name"
)
(uid "-yk94ms_15v_evqyosvg_-p8n"))
($11 306 < -yk94ms_85r_eqyymv3f_-k83 "smiles_goes_with_smilesType" 79
(name "smiles_goes_with_smilesType"
)
(uid "-yk94ms_85r_eqyymv3f_-k83")
(body "code:python"
"_"
"(self.smiles is None) == (self.smilesType is None)"
"_"
"code:java"
"_"
"(getSmiles() == null) == (getSmilesType() == null)"
))
($7 307 < -yk94ms_85r_eqyymv3f_-k82 "guid" 306
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00040"
)
(uid "-yk94ms_85r_eqyymv3f_-k82"))
($11 308 < -yk94ms_85r_eqyymv3f_-k81 "seqCode_and_seqInsertCode_form_secondary_key_for_molResidues" 79
(name "seqCode_and_seqInsertCode_form_secondary_key_for_molResidues"
)
(uid "-yk94ms_85r_eqyymv3f_-k81")
(body "code:python"
"_"
"ll = self.molResidues"
"aset = frozenset((x.seqCode, x.seqInsertCode) for x in ll)"
"isValid = (len(aset) == len(ll))"
"_"
"code:java"
"_"
"java.util.Set<java.lang.String> dd = new java.util.HashSet<java.lang.String>();"
"int nn = 0;"
"for (ccp.api.molecule.Molecule.MolResidue res: getMolResidues()) {"
"  java.lang.String ss = res.getSeqCode() + \":\" + res.getSeqInsertCode();"
"  dd.add(ss);"
"  nn++;"
"}"
"isValid = (dd.size() == nn);"
))
($7 309 < -yk94ms_85r_eqyymv3f_-k80 "guid" 308
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00041"
)
(uid "-yk94ms_85r_eqyymv3f_-k80"))
($11 310 < -yk94ms_85r_eqyymv3f_-k7z "molResidue_serials_must_be_consecutive" 79
(name "molResidue_serials_must_be_consecutive"
)
(uid "-yk94ms_85r_eqyymv3f_-k7z")
(body "code:python"
"_"
"ll = self.sortedMolResidues()"
"if ll:"
"  isValid = (len(ll) == (ll[-1].serial - ll[0].serial + 1))"
"else:"
"  isValid = True"
""
"_"
"code:java"
"_"
"java.util.List<? extends ccp.api.molecule.Molecule.MolResidue> ll = sortedMolResidues();"
"if (ll == null)"
"  isValid = true;"
"else"
"  isValid = (ll.size() == (ll.get(ll.size()-1).getSerial() - ll.get(0).getSerial() + 1));"
))
($7 311 < -yk94ms_85r_eqyymv3f_-k7y "guid" 310
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00042"
)
(uid "-yk94ms_85r_eqyymv3f_-k7y"))
($5 312 < -yk94ms_85r_eqyymv3f_-k7x "MoleculeSysName" 1
(name "MoleculeSysName"
)
(uid "-yk94ms_85r_eqyymv3f_-k7x"))
($6 313 < -yk94ms_85r_eqyymv3f_-k7w "namingSystem" 312
(changeability "frozen")
(name "namingSystem"
)
(uid "-yk94ms_85r_eqyymv3f_-k7w")
(multiplicity "1"))
($7 314 < -yk94ms_85r_eqyymv3f_-k7v "documentation" 313
(name "documentation"
)
(value "Naming system used for name."
)
(uid "-yk94ms_85r_eqyymv3f_-k7v"))
($7 315 < -yk94ms_85r_eqyymv3f_-k7u "guid" 313
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00060"
)
(uid "-yk94ms_85r_eqyymv3f_-k7u"))
($6 316 < -yk94ms_85r_eqyymv3f_-k7t "name" 312
(name "name"
)
(uid "-yk94ms_85r_eqyymv3f_-k7t"))
($7 317 < -yk94ms_85r_eqyymv3f_-k7s "documentation" 316
(name "documentation"
)
(value "Molecule systematic name."
)
(uid "-yk94ms_85r_eqyymv3f_-k7s"))
($7 318 < -yk94ms_85r_eqyymv3f_-k7r "guid" 316
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00061"
)
(uid "-yk94ms_85r_eqyymv3f_-k7r"))
($12 319 < -yk94ms_85r_eqyymv3f_-k7q "#<anon> (MoleculeSysName, DataObject)" 312
(uid "-yk94ms_85r_eqyymv3f_-k7q"))
($7 320 < -yk94ms_85r_eqyymv3f_-k7o "documentation" 312
(name "documentation"
)
(value "Molecule systematic name in a given naming system."
)
(uid "-yk94ms_85r_eqyymv3f_-k7o"))
($7 321 < -yk94ms_85r_eqyymv3f_-k7n "guid" 312
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00043"
)
(uid "-yk94ms_85r_eqyymv3f_-k7n"))
($7 322 < -yk94ms_15v_evqyosvg_-p8m "keyNames" 312
(name "keyNames"
)
(value "namingSystem"
)
(uid "-yk94ms_15v_evqyosvg_-p8m"))
($5 323 < -yk94ms_-e3s_e41656c6_-lsj "MolResidue" 1
(name "MolResidue"
)
(uid "-yk94ms_-e3s_e41656c6_-lsj"))
($6 324 < -yk94ms_85r_eqyymv3f_-k7l "serial" 323
(changeability "frozen")
(name "serial"
)
(uid "-yk94ms_85r_eqyymv3f_-k7l")
(multiplicity "1"))
($7 325 < -yk94ms_85r_eqyymv3f_-k7k "isAutomatic" 324
(name "isAutomatic"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k7k"))
($7 326 < -yk94ms_85r_eqyymv3f_-k7j "guid" 324
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00011"
)
(uid "-yk94ms_85r_eqyymv3f_-k7j"))
($6 327 < -yk94ms_85r_eqyymv3f_-k7i "seqCode" 323
(name "seqCode"
)
(uid "-yk94ms_85r_eqyymv3f_-k7i")
(multiplicity "1"))
($7 328 < -yk94ms_85r_eqyymv3f_-k7h "documentation" 327
(name "documentation"
)
(value "The seqCode is the residue number given by the user. For linear polymers normally used to give the position of the residue in the molecule sequence."
)
(uid "-yk94ms_85r_eqyymv3f_-k7h"))
($7 329 < -yk94ms_85r_eqyymv3f_-k7g "guid" 327
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00012"
)
(uid "-yk94ms_85r_eqyymv3f_-k7g"))
($6 330 < -yk94ms_85r_eqyymv3f_-k7f "seqInsertCode" 323
(initialValue " "
)
(name "seqInsertCode"
)
(uid "-yk94ms_85r_eqyymv3f_-k7f")
(multiplicity "1"))
($7 331 < -yk94ms_85r_eqyymv3f_-k7e "documentation" 330
(name "documentation"
)
(value "Sequence insert code - entered by user. Serves to distinguish residues that the user prefers to give the same seqCode. Defaults to a single space."
)
(uid "-yk94ms_85r_eqyymv3f_-k7e"))
($7 332 < -yk94ms_85r_eqyymv3f_-k7d "guid" 330
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00013"
)
(uid "-yk94ms_85r_eqyymv3f_-k7d"))
($6 333 < -yk94ms_85r_eqyymv3f_-k7c "molType" 323
(changeability "frozen")
(name "molType"
)
(uid "-yk94ms_85r_eqyymv3f_-k7c")
(multiplicity "1"))
($7 334 < -yk94ms_85r_eqyymv3f_-k7b "isDerived" 333
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k7b"))
($7 335 < -yk94ms_85r_eqyymv3f_-k7a "documentation" 333
(name "documentation"
)
(value "molType of ChemComp corresponding to MolResidue"
)
(uid "-yk94ms_85r_eqyymv3f_-k7a"))
($7 336 < -yk94ms_85r_eqyymv3f_-k79 "guid" 333
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00014"
)
(uid "-yk94ms_85r_eqyymv3f_-k79"))
($6 337 < -yk94ms_85r_eqyymv3f_-k78 "ccpCode" 323
(changeability "frozen")
(name "ccpCode"
)
(uid "-yk94ms_85r_eqyymv3f_-k78")
(multiplicity "1"))
($7 338 < -yk94ms_85r_eqyymv3f_-k77 "isDerived" 337
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k77"))
($7 339 < -yk94ms_85r_eqyymv3f_-k76 "documentation" 337
(name "documentation"
)
(value "ccpCode of ChemComp corresponding to MolResidue"
)
(uid "-yk94ms_85r_eqyymv3f_-k76"))
($7 340 < -yk94ms_85r_eqyymv3f_-k75 "guid" 337
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00015"
)
(uid "-yk94ms_85r_eqyymv3f_-k75"))
($6 341 < -yk94ms_85r_eqyymv3f_-k74 "linking" 323
(changeability "frozen")
(name "linking"
)
(uid "-yk94ms_85r_eqyymv3f_-k74")
(multiplicity "1"))
($7 342 < -yk94ms_85r_eqyymv3f_-k73 "documentation" 341
(name "documentation"
)
(value "Residue linking code. For polymers distinguishes between terminal (start), terminal (end) and internal residues. For nonpolymers defines substitution pattern. Part of key for ChemCompVar. May be modified after sequence definition. "
)
(uid "-yk94ms_85r_eqyymv3f_-k73"))
($7 343 < -yk94ms_85r_eqyymv3f_-k72 "guid" 341
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00016"
)
(uid "-yk94ms_85r_eqyymv3f_-k72"))
($8 344 < -yk94ms_85r_eqyymv3f_-k71 "getMolType" 323
(name "getMolType"
)
(uid "-yk94ms_85r_eqyymv3f_-k71")
(isQuery true))
($7 345 < -yk94ms_85r_eqyymv3f_-k6y "opType" 344
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-k6y"))
($7 346 < -yk94ms_85r_eqyymv3f_-k6x "documentation" 344
(name "documentation"
)
(value "getter for derived attribute molType"
)
(uid "-yk94ms_85r_eqyymv3f_-k6x"))
($7 347 < -yk94ms_85r_eqyymv3f_-k6u "guid" 344
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00018"
)
(uid "-yk94ms_85r_eqyymv3f_-k6u"))
($7 348 < z8kflu_15v_ewd8sewa_-p6j "code:java" 344
(name "code:java"
)
(value "result = getChemComp().getMolType();"
)
(uid "z8kflu_15v_ewd8sewa_-p6j"))
($7 349 < z8kflu_15v_ewd8sewa_-p6i "code:python" 344
(name "code:python"
)
(value "result = self.getByNavigation('chemComp','molType')"
)
(uid "z8kflu_15v_ewd8sewa_-p6i"))
($8 350 < -yk94ms_85r_eqyymv3f_-k6t "getCcpCode" 323
(name "getCcpCode"
)
(uid "-yk94ms_85r_eqyymv3f_-k6t")
(isQuery true))
($7 351 < -yk94ms_85r_eqyymv3f_-k6q "documentation" 350
(name "documentation"
)
(value "getter for derived attribute ccpCode"
)
(uid "-yk94ms_85r_eqyymv3f_-k6q"))
($7 352 < -yk94ms_85r_eqyymv3f_-k6p "opType" 350
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-k6p"))
($7 353 < -yk94ms_85r_eqyymv3f_-k6m "guid" 350
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00020"
)
(uid "-yk94ms_85r_eqyymv3f_-k6m"))
($7 354 < z8kflu_15v_ewd8sewa_-p6h "code:java" 350
(name "code:java"
)
(value "result = getChemComp().getCcpCode();"
)
(uid "z8kflu_15v_ewd8sewa_-p6h"))
($7 355 < z8kflu_15v_ewd8sewa_-p6g "code:python" 350
(name "code:python"
)
(value "result = self.getByNavigation('chemComp', 'ccpCode')"
)
(uid "z8kflu_15v_ewd8sewa_-p6g"))
($8 356 < -yk94ms_85r_eqyymv3f_-k6l "getChemCompVar" 323
(name "getChemCompVar"
)
(uid "-yk94ms_85r_eqyymv3f_-k6l")
(isQuery true))
($7 357 < -yk94ms_85r_eqyymv3f_-k6i "documentation" 356
(name "documentation"
)
(value "getter for derived link chemCompVar"
)
(uid "-yk94ms_85r_eqyymv3f_-k6i"))
($7 358 < -yk94ms_85r_eqyymv3f_-k6h "opType" 356
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-k6h"))
($7 359 < -yk94ms_85r_eqyymv3f_-k6e "guid" 356
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00022"
)
(uid "-yk94ms_85r_eqyymv3f_-k6e"))
($7 360 < z8kflu_15v_ewd8sewa_-p6f "code:java" 356
(name "code:java"
)
(value "result = getChemComp().findFirstChemCompVar(\"linking\", getLinking(), \"descriptor\", getDescriptor());"
)
(uid "z8kflu_15v_ewd8sewa_-p6f"))
($7 361 < z8kflu_15v_ewd8sewa_-p6e "code:python" 356
(name "code:python"
)
(value "result = self.getByNavigation('chemComp', ('chemCompVars', (self.linking, self.descriptor)))"
)
(uid "z8kflu_15v_ewd8sewa_-p6e"))
($8 362 < -yk94ms_85r_eqyymv3f_-k6d "setChemCompVar" 323
(name "setChemCompVar"
)
(uid "-yk94ms_85r_eqyymv3f_-k6d"))
($7 363 < -yk94ms_85r_eqyymv3f_-k6a "documentation" 362
(name "documentation"
)
(value "setter for settable, derived link chemCompVar. NB needed also for backward compatibility with release 1.0b1"
)
(uid "-yk94ms_85r_eqyymv3f_-k6a"))
($7 364 < -yk94ms_85r_eqyymv3f_-k69 "opType" 362
(name "opType"
)
(value "set"
)
(uid "-yk94ms_85r_eqyymv3f_-k69"))
($7 365 < -yk94ms_85r_eqyymv3f_-k66 "guid" 362
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00024"
)
(uid "-yk94ms_85r_eqyymv3f_-k66"))
($7 366 < z8kflu_15v_ewd8sewa_-p6d "code:java" 362
(name "code:java"
)
(value "ccp.api.molecule.ChemComp.ChemComp cc = getChemComp();"
""
"if ((cc != null) && (cc != value.getChemComp()))"
"  throw new memops.general.ApiException(\"molResidue.chemCompVar incompatible with molResidue.chemCompHead\");"
""
"setLinking(value.getLinking());"
"setDescriptor(value.getDescriptor());"
)
(uid "z8kflu_15v_ewd8sewa_-p6d"))
($7 367 < z8kflu_15v_ewd8sewa_-p6c "code:python" 362
(name "code:python"
)
(value "cc = self.chemComp"
"if cc is not None and cc is not value.chemComp:"
"  raise ApiError(\" molResidue.chemCompVar incompatible with molResidue.chemComp\")"
""
"self.linking = value.linking"
"self.descriptor = value.descriptor"
)
(uid "z8kflu_15v_ewd8sewa_-p6c"))
($6 368 < -yk94ms_85r_eqyymv3f_-k65 "descriptor" 323
(changeability "frozen")
(name "descriptor"
)
(uid "-yk94ms_85r_eqyymv3f_-k65")
(multiplicity "1"))
($7 369 < -yk94ms_85r_eqyymv3f_-k64 "documentation" 368
(name "documentation"
)
(value "ChemComp descriptor - part of ChemCompVar key. Describes topological variant (e,g, protonation state) of ChemCompVar. For Polymer-type ChemComps (those that have 'next' or 'prev' LinkEnds) also describes non-polymer part of substitution pattern. "
)
(uid "-yk94ms_85r_eqyymv3f_-k64"))
($7 370 < -yk94ms_85r_eqyymv3f_-k63 "guid" 368
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00017"
)
(uid "-yk94ms_85r_eqyymv3f_-k63"))
($9 371 < -yk94ms_85r_eqyymv3f_-k5u "#<anon> (MolResidue, Residue)##," 323
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k5u"))
($10 372 < -yk94ms_85r_eqyymv3f_-k5t "#0" 371
(changeability "frozen")
(uid "-yk94ms_85r_eqyymv3f_-k5t")
(multiplicity "1"))
($7 373 < -yk94ms_85r_eqyymv3f_-k5s "documentation" 372
(name "documentation"
)
(value "MolResidue (Residue in Molecule Sequene) corresponding to Residue"
)
(uid "-yk94ms_85r_eqyymv3f_-k5s"))
($7 374 < -yk94ms_85r_eqyymv3f_-k5r "guid" 372
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00062"
)
(uid "-yk94ms_85r_eqyymv3f_-k5r"))
($10 375 < -yk94ms_85r_eqyymv3f_-k5q "#1" 371
(uid "-yk94ms_85r_eqyymv3f_-k5q")
(isNavigable false))
($7 376 < -yk94ms_85r_eqyymv3f_-k5o "isDerived" 371
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k5o"))
($9 377 < -yk94ms_85r_eqyymv3f_-k5n "#<anon> (MolResidue, MolSeqFragment)##limitResidues," 323
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k5n"))
($10 378 < -yk94ms_85r_eqyymv3f_-k5m "limitResidues#0" 377
(changeability "frozen")
(name "limitResidues"
)
(uid "-yk94ms_85r_eqyymv3f_-k5m")
(multiplicity "2"))
($7 379 < -yk94ms_85r_eqyymv3f_-k5l "documentation" 378
(name "documentation"
)
(value "MolResidues belonging to Polymer Sequence Block. "
)
(uid "-yk94ms_85r_eqyymv3f_-k5l"))
($7 380 < -yk94ms_85r_eqyymv3f_-k5k "baseName" 378
(name "baseName"
)
(value "limitResidue"
)
(uid "-yk94ms_85r_eqyymv3f_-k5k"))
($7 381 < -yk94ms_85r_eqyymv3f_-k5j "guid" 378
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00063"
)
(uid "-yk94ms_85r_eqyymv3f_-k5j"))
($10 382 < -yk94ms_85r_eqyymv3f_-k5i "#1" 377
(uid "-yk94ms_85r_eqyymv3f_-k5i"))
($7 383 < -yk94ms_85r_eqyymv3f_-k5h "documentation" 382
(name "documentation"
)
(value "MolSeqFragment delimited by MolResidue"
)
(uid "-yk94ms_85r_eqyymv3f_-k5h"))
($7 384 < -yk94ms_85r_eqyymv3f_-k5g "guid" 382
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00001"
)
(uid "-yk94ms_85r_eqyymv3f_-k5g"))
($12 385 < -yk94ms_85r_eqyymv3f_-k5d "#<anon> (MolResidue, DataObject)" 323
(uid "-yk94ms_85r_eqyymv3f_-k5d"))
($9 386 < -yk94ms_-e3s_e41656c6_-lqt "#<anon> (MolResidue, MolFeature)##," 323
(name "")
(uid "-yk94ms_-e3s_e41656c6_-lqt"))
($10 387 < -yk94ms_85r_eqyymv3f_-k54 "#0" 386
(uid "-yk94ms_85r_eqyymv3f_-k54")
(multiplicity "1"))
($7 388 < -yk94ms_85r_eqyymv3f_-k53 "documentation" 387
(name "documentation"
)
(value "The MolResidue who has the different features."
)
(uid "-yk94ms_85r_eqyymv3f_-k53"))
($7 389 < -yk94ms_85r_eqyymv3f_-k52 "guid" 387
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00005"
)
(uid "-yk94ms_85r_eqyymv3f_-k52"))
($10 390 < -yk94ms_85r_eqyymv3f_-k51 "#1" 386
(uid "-yk94ms_85r_eqyymv3f_-k51")
(multiplicity "*"))
($7 391 < -yk94ms_85r_eqyymv3f_-k50 "documentation" 390
(name "documentation"
)
(value "The MolFeature associated to a MolResidue."
)
(uid "-yk94ms_85r_eqyymv3f_-k50"))
($7 392 < -yk94ms_85r_eqyymv3f_-k4z "guid" 390
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00006"
)
(uid "-yk94ms_85r_eqyymv3f_-k4z"))
($9 393 < -yk94ms_85r_eqyymv3f_-k4y "#<anon> (MolResidue, ChemCompVar)##," 323
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k4y"))
($10 394 < -yk94ms_85r_eqyymv3f_-k4x "#0" 393
(uid "-yk94ms_85r_eqyymv3f_-k4x")
(isNavigable false))
($10 395 < -yk94ms_85r_eqyymv3f_-k4w "#1" 393
(uid "-yk94ms_85r_eqyymv3f_-k4w")
(multiplicity "1"))
($7 396 < -yk94ms_85r_eqyymv3f_-k4v "documentation" 395
(name "documentation"
)
(value "ChemCompVar corresponding to MolResidue"
)
(uid "-yk94ms_85r_eqyymv3f_-k4v"))
($7 397 < -yk94ms_85r_eqyymv3f_-k4u "guid" 395
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00007"
)
(uid "-yk94ms_85r_eqyymv3f_-k4u"))
($7 398 < -yk94ms_85r_eqyymv3f_-k4t "isDerived" 393
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k4t"))
($9 399 < -yk94ms_85r_eqyymv3f_-k4s "#<anon> (MolResidue, MolResLinkEnd)##," 323
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k4s"))
($10 400 < -yk94ms_85r_eqyymv3f_-k4r "#0" 399
(changeability "frozen")
(aggregation "composite")
(uid "-yk94ms_85r_eqyymv3f_-k4r")
(multiplicity "1"))
($7 401 < -yk94ms_85r_eqyymv3f_-k4q "guid" 400
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00008"
)
(uid "-yk94ms_85r_eqyymv3f_-k4q"))
($10 402 < -yk94ms_85r_eqyymv3f_-k4p "#1" 399
(uid "-yk94ms_85r_eqyymv3f_-k4p")
(multiplicity "*"))
($7 403 < -yk94ms_85r_eqyymv3f_-k4o "guid" 402
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00009"
)
(uid "-yk94ms_85r_eqyymv3f_-k4o"))
($9 404 < -yk94ms_85r_eqyymv3f_-k4n "#<anon> (MolResidue, ChemComp)##," 323
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k4n"))
($10 405 < -yk94ms_85r_eqyymv3f_-k4m "#0" 404
(uid "-yk94ms_85r_eqyymv3f_-k4m")
(isNavigable false))
($10 406 < -yk94ms_85r_eqyymv3f_-k4l "#1" 404
(changeability "frozen")
(uid "-yk94ms_85r_eqyymv3f_-k4l")
(multiplicity "1"))
($7 407 < -yk94ms_85r_eqyymv3f_-k4k "documentation" 406
(name "documentation"
)
(value "ChemComp that describes the type of the MolResidue"
)
(uid "-yk94ms_85r_eqyymv3f_-k4k"))
($7 408 < -yk94ms_85r_eqyymv3f_-k4j "guid" 406
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00010"
)
(uid "-yk94ms_85r_eqyymv3f_-k4j"))
($7 409 < -yk94ms_85r_eqyymv3f_-k4h "documentation" 323
(name "documentation"
)
(value "Monomer/Residue belonging to a Molecule, e.g. in the sequence for Insulin A-chain as such, as opposed to a specific Insulin A-chain molecule with coordinates."
""
"Note that MolResidues can neither be created nor deleted while their parent Molecule is linked to one or more chains. When creating a Molecule all relevant MolResLinkEnds are created automatically."
"Note also that MolResidues can not be deleted, except as a consequence of deleting their molecule."
""
"It is guaranteed that the serials of molResidues form a continuous range, and that all linear polymer type links are between MolResidues with consecutive serials. The Molesidue.serials must start at one. This constraint is not checked (for technical reasons), but it can only be broken if someone has modified the data bypassing the API."
)
(uid "-yk94ms_85r_eqyymv3f_-k4h"))
($7 410 < -yk94ms_85r_eqyymv3f_-k49 "guid" 323
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
)
(uid "-yk94ms_85r_eqyymv3f_-k49"))
($7 411 < -yk94ms_15v_evqyosvg_-p8l "destructorCode:java" 323
(name "destructorCode:java"
)
(value "ccp.api.molecule.Molecule.Molecule molecule = getMolecule();"
"if (molecule.getChains().size() > 0 || molecule.getIsFinalised().booleanValue())"
"  throw new memops.general.ApiException(\"MolResidue of \" + molecule.getName() + \" cannot be deleted if molecule is finalised or has chains\");"
""
"// The following code interacts directly with the deletion implementation (use of 'nowDeleted'). "
"// This is bad, but the only way to accomplish the desired result."
"if (!objsToBeDeleted.contains(molecule) && !getRoot().getOverride())"
"    throw new memops.general.ApiException(\"MolResidue \" + getFullKey() + \": MolResidues can only be deleted when the Molecule is deleted.\");"
)
(uid "-yk94ms_15v_evqyosvg_-p8l"))
($7 412 < -yk94ms_15v_evqyosvg_-p8k "constructorCode:java" 323
(name "constructorCode:java"
)
(value "if (getMolecule().getIsFinalised())"
"  throw new memops.general.ApiException(\"MolResidues may not be added once Molecule has been finalised\");"
""
"for (ccp.api.molecule.ChemComp.AbstractChemAtom ca: getChemCompVar().getChemAtoms()) {"
"  if (ca instanceof ccp.api.molecule.ChemComp.LinkAtom) {"
"    ccp.api.molecule.ChemComp.LinkEnd le = ((ccp.api.molecule.ChemComp.LinkAtom)ca).getBoundLinkEnd();"
"    if (le != null)"
"      newMolResLinkEnd(le.getLinkCode());"
"  }"
"}"
)
(uid "-yk94ms_15v_evqyosvg_-p8k"))
($7 413 < -yk94ms_15v_evqyosvg_-p8j "destructorCode:python" 323
(name "destructorCode:python"
)
(value "# The following code interacts directly with the deletion implementation (use of 'objsToBeDeleted'). "
"# This is bad, but the only way to accomplish the desired result."
"if self.molecule not in objsToBeDeleted and not self.root.override:"
"  raise ApiError(\"MolResidue %s: MolResidues can only be deleted when the Molecule is deleted.\" % self)"
)
(uid "-yk94ms_15v_evqyosvg_-p8j"))
($7 414 < -yk94ms_15v_evqyosvg_-p8i "constructorCode:python" 323
(name "constructorCode:python"
)
(value "if self.molecule.isFinalised:"
"  raise ApiError(\"MolResidues may not be added once Molecule has been finalised\")"
""
"for ca in self.chemCompVar.chemAtoms:"
"  if isinstance(ca,ccp.api.molecule.ChemComp.LinkAtom):"
"    linkEnd = ca.boundLinkEnd"
"    if linkEnd is not None:"
"      MolResLinkEnd(self, linkCode=linkEnd.linkCode)"
)
(uid "-yk94ms_15v_evqyosvg_-p8i"))
($7 415 < -yk94ms_15v_evqyosvg_-p8h "keyNames" 323
(name "keyNames"
)
(value "serial"
)
(uid "-yk94ms_15v_evqyosvg_-p8h"))
($5 416 < -yk94ms_85r_eqyymv3f_-k48 "MolSeqFragment" 1
(name "MolSeqFragment"
)
(uid "-yk94ms_85r_eqyymv3f_-k48"))
($6 417 < -yk94ms_85r_eqyymv3f_-k47 "organismName" 416
(changeability "frozen")
(name "organismName"
)
(uid "-yk94ms_85r_eqyymv3f_-k47"))
($7 418 < -yk94ms_85r_eqyymv3f_-k46 "documentation" 417
(name "documentation"
)
(value "Common name of source organism (e.g. 'mouse', 'human',...)."
)
(uid "-yk94ms_85r_eqyymv3f_-k46"))
($7 419 < -yk94ms_85r_eqyymv3f_-k45 "isDerived" 417
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k45"))
($7 420 < -yk94ms_85r_eqyymv3f_-k44 "guid" 417
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00030"
)
(uid "-yk94ms_85r_eqyymv3f_-k44"))
($6 421 < -yk94ms_85r_eqyymv3f_-k43 "organismSciName" 416
(changeability "frozen")
(name "organismSciName"
)
(uid "-yk94ms_85r_eqyymv3f_-k43"))
($7 422 < -yk94ms_85r_eqyymv3f_-k42 "documentation" 421
(name "documentation"
)
(value "Scientific name of source organism (e.g. 'mus musculus', 'homo sapiens',...). "
)
(uid "-yk94ms_85r_eqyymv3f_-k42"))
($7 423 < -yk94ms_85r_eqyymv3f_-k41 "isDerived" 421
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k41"))
($7 424 < -yk94ms_85r_eqyymv3f_-k40 "guid" 421
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00031"
)
(uid "-yk94ms_85r_eqyymv3f_-k40"))
($8 425 < -yk94ms_85r_eqyymv3f_-k3z "getOrganismName" 416
(name "getOrganismName"
)
(uid "-yk94ms_85r_eqyymv3f_-k3z")
(isQuery true))
($7 426 < -yk94ms_85r_eqyymv3f_-k3w "documentation" 425
(name "documentation"
)
(value "getter for derived attribute organismName"
)
(uid "-yk94ms_85r_eqyymv3f_-k3w"))
($7 427 < -yk94ms_85r_eqyymv3f_-k3v "opType" 425
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-k3v"))
($7 428 < -yk94ms_85r_eqyymv3f_-k3s "guid" 425
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00032"
)
(uid "-yk94ms_85r_eqyymv3f_-k3s"))
($7 429 < z8kflu_15v_ewd8sewa_-p6b "code:java" 425
(name "code:java"
)
(value "if (getNaturalSource() == null)"
"  result = null;"
"else"
"  result = getNaturalSource().getOrganismName();"
)
(uid "z8kflu_15v_ewd8sewa_-p6b"))
($7 430 < z8kflu_15v_ewd8sewa_-p6a "code:python" 425
(name "code:python"
)
(value "result = self.getByNavigation('naturalSource', 'organismName')"
)
(uid "z8kflu_15v_ewd8sewa_-p6a"))
($8 431 < -yk94ms_85r_eqyymv3f_-k3r "getOrganismSciName" 416
(name "getOrganismSciName"
)
(uid "-yk94ms_85r_eqyymv3f_-k3r")
(isQuery true))
($7 432 < -yk94ms_85r_eqyymv3f_-k3o "documentation" 431
(name "documentation"
)
(value "getter for derived attribute organismSciName"
)
(uid "-yk94ms_85r_eqyymv3f_-k3o"))
($7 433 < -yk94ms_85r_eqyymv3f_-k3n "opType" 431
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-k3n"))
($7 434 < -yk94ms_85r_eqyymv3f_-k3k "guid" 431
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00034"
)
(uid "-yk94ms_85r_eqyymv3f_-k3k"))
($7 435 < z8kflu_15v_ewd8sewa_-p69 "code:java" 431
(name "code:java"
)
(value "if (getNaturalSource() == null)"
"  result = null;"
"else"
"  result = getNaturalSource().getScientificName();"
)
(uid "z8kflu_15v_ewd8sewa_-p69"))
($7 436 < z8kflu_15v_ewd8sewa_-p68 "code:python" 431
(name "code:python"
)
(value "result = self.getByNavigation('naturalSource', 'scientificName')"
)
(uid "z8kflu_15v_ewd8sewa_-p68"))
($9 437 < -yk94ms_85r_eqyymv3f_-k3j "#<anon> (MolSeqFragment, NaturalSource)##," 416
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k3j"))
($10 438 < -yk94ms_85r_eqyymv3f_-k3i "#0" 437
(uid "-yk94ms_85r_eqyymv3f_-k3i")
(multiplicity "*"))
($7 439 < -yk94ms_85r_eqyymv3f_-k3h "documentation" 438
(name "documentation"
)
(value "MOlecule fragments arising from NaturalSource"
)
(uid "-yk94ms_85r_eqyymv3f_-k3h"))
($7 440 < -yk94ms_85r_eqyymv3f_-k3g "guid" 438
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00028"
)
(uid "-yk94ms_85r_eqyymv3f_-k3g"))
($10 441 < -yk94ms_85r_eqyymv3f_-k3f "#1" 437
(uid "-yk94ms_85r_eqyymv3f_-k3f"))
($7 442 < -yk94ms_85r_eqyymv3f_-k3e "documentation" 441
(name "documentation"
)
(value "Natural Source that MolSeqFragment refers to."
)
(uid "-yk94ms_85r_eqyymv3f_-k3e"))
($7 443 < -yk94ms_85r_eqyymv3f_-k3d "guid" 441
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00029"
)
(uid "-yk94ms_85r_eqyymv3f_-k3d"))
($12 444 < -yk94ms_85r_eqyymv3f_-k3c "#<anon> (MolSeqFragment, DataObject)" 416
(uid "-yk94ms_85r_eqyymv3f_-k3c"))
($9 445 < -hkpzxr_v5_f9gtenwt_-p8o "#<anon> (MolSeqFragment, Alignment)##," 416
(name "")
(uid "-hkpzxr_v5_f9gtenwt_-p8o"))
($10 446 < -hkpzxr_v5_f9gtenwt_-p8j "#0" 445
(uid "-hkpzxr_v5_f9gtenwt_-p8j"))
($7 447 < -hkpzxr_v5_f9gtenwt_-p8i "documentation" 446
(name "documentation"
)
(value "MolSeqFragment that alignment refers to.  If not set, the alignment refers to the entire molecule"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8i"))
($7 448 < -hkpzxr_v5_f9gtenwt_-p7t "guid" 446
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:39_00007"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7t"))
($10 449 < -hkpzxr_v5_f9gtenwt_-p8h "#1" 445
(uid "-hkpzxr_v5_f9gtenwt_-p8h")
(multiplicity "*"))
($7 450 < -hkpzxr_v5_f9gtenwt_-p8a "documentation" 449
(name "documentation"
)
(value "Alignments relevant to MolSeqFragment"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8a"))
($7 451 < -hkpzxr_v5_f9gtenwt_-p7s "guid" 449
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:39_00008"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7s"))
($7 452 < -yk94ms_85r_eqyymv3f_-k3b "documentation" 416
(name "documentation"
)
(value "Block of molResidues with consecutive serials in a molecule . For linear polymers this is guaranteed to be a connected fragment of the molecule. For other molecules the set of Molresidues selected may or may not be connected, depending on how the molecule was created. MolSeqFragments are disjoint and no residue can be a member of more than one."
)
(uid "-yk94ms_85r_eqyymv3f_-k3b"))
($7 453 < -yk94ms_85r_eqyymv3f_-k39 "guid" 416
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00045"
)
(uid "-yk94ms_85r_eqyymv3f_-k39"))
($7 454 < -yk94ms_15v_evqyosvg_-p8g "keyNames" 416
(name "keyNames"
)
(value "limitResidues"
)
(uid "-yk94ms_15v_evqyosvg_-p8g"))
($11 455 < -yk94ms_85r_eqyymv3f_-k38 "MolSeqFragments_are_disjoint" 416
(name "MolSeqFragments_are_disjoint"
)
(uid "-yk94ms_85r_eqyymv3f_-k38")
(body "code:python"
"_"
"ll = [x.serial for x in self.limitResidues]"
"min0 = min(ll)"
"max0 = max(ll)"
"for seqBlock in self.molecule.molSeqFragments:"
"  if seqBlock is not self:"
"    (i1, i2) = [x.serial for x in seqBlock.limitResidues]"
"    if not ((i1 > max0 and i2 > max0) or (i1 < min0 and i2 < min0)):"
"      isValid = False"
"      break"
"else:"
"  isValid = True"
""
"_"
"code:java"
"_"
"isValid = true;"
"java.util.List<java.lang.Integer> ll = new java.util.ArrayList<java.lang.Integer>();"
"for (ccp.api.molecule.Molecule.MolResidue molResidue: getLimitResidues())"
"  ll.add(molResidue.getSerial());"
""
"int min0 = java.util.Collections.min(ll);"
"int max0 = java.util.Collections.max(ll);"
""
"for (ccp.api.molecule.Molecule.MolSeqFragment seqBlock: getMolecule().getMolSeqFragments()) {"
"  if (seqBlock != this) {"
"    int min1 = -1, max1 = -1;"
"    for (ccp.api.molecule.Molecule.MolResidue mr: seqBlock.getLimitResidues()) {"
"      int sr = mr.getSerial();"
"      if (min1 < 0) {"
"        min1 = max1 = sr;"
"      } else {"
"        min1 = java.lang.Math.min(min1, sr);"
"        max1 = java.lang.Math.max(max1, sr);"
"      }"
"    }"
""
"    if (!((min1 > max0) || (max1 < min0))) {"
"      isValid = false;"
"      break;"
"    }"
"  }"
"}"
))
($7 456 < -yk94ms_85r_eqyymv3f_-k37 "guid" 455
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00046"
)
(uid "-yk94ms_85r_eqyymv3f_-k37"))
($13 457 < -yk94ms_85r_eqyymv3f_-k36 "#<anon> (Molecule, Citation)" 1
(uid "-yk94ms_85r_eqyymv3f_-k36"))
($13 458 < -yk94ms_85r_eqyymv3f_-k35 "#<anon> (Molecule, Taxonomy)" 1
(uid "-yk94ms_85r_eqyymv3f_-k35"))
($13 459 < -yk94ms_85r_eqyymv3f_-k2o "#<anon> (Molecule, ChemComp)" 1
(uid "-yk94ms_85r_eqyymv3f_-k2o"))
($5 460 < -yk94ms_85r_eqyymv3f_-k2n "MolResLinkEnd" 1
(name "MolResLinkEnd"
)
(uid "-yk94ms_85r_eqyymv3f_-k2n"))
($6 461 < -yk94ms_85r_eqyymv3f_-k2m "linkCode" 460
(changeability "frozen")
(name "linkCode"
)
(uid "-yk94ms_85r_eqyymv3f_-k2m")
(multiplicity "1"))
($7 462 < -yk94ms_85r_eqyymv3f_-k2l "documentation" 461
(name "documentation"
)
(value "Link Code identifying Link End for MolResidue. Part of Key for ChemComp.LinkEnd"
)
(uid "-yk94ms_85r_eqyymv3f_-k2l"))
($7 463 < -yk94ms_85r_eqyymv3f_-k2k "guid" 461
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00041"
)
(uid "-yk94ms_85r_eqyymv3f_-k2k"))
($8 464 < -yk94ms_85r_eqyymv3f_-k2j "getLinkEnd" 460
(name "getLinkEnd"
)
(uid "-yk94ms_85r_eqyymv3f_-k2j")
(isQuery true))
($7 465 < -yk94ms_85r_eqyymv3f_-k2g "documentation" 464
(name "documentation"
)
(value "getter for derived link linkEnd"
)
(uid "-yk94ms_85r_eqyymv3f_-k2g"))
($7 466 < -yk94ms_85r_eqyymv3f_-k2f "opType" 464
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-k2f"))
($7 467 < -yk94ms_85r_eqyymv3f_-k2c "guid" 464
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00042"
)
(uid "-yk94ms_85r_eqyymv3f_-k2c"))
($7 468 < z8kflu_15v_ewd8sewa_-p7e "code:java" 464
(name "code:java"
)
(value "result = getMolResidue().getChemCompVar().findFirstLinkEnd(\"linkCode\", getLinkCode());"
)
(uid "z8kflu_15v_ewd8sewa_-p7e"))
($7 469 < z8kflu_15v_ewd8sewa_-p7d "code:python" 464
(name "code:python"
)
(value "result = self.molResidue.chemCompVar.findFirstLinkEnd(linkCode=self.linkCode)"
)
(uid "z8kflu_15v_ewd8sewa_-p7d"))
($12 470 < -yk94ms_85r_eqyymv3f_-k2b "#<anon> (MolResLinkEnd, DataObject)" 460
(uid "-yk94ms_85r_eqyymv3f_-k2b"))
($9 471 < -yk94ms_85r_eqyymv3f_-k2a "#<anon> (MolResLinkEnd, LinkEnd)##," 460
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k2a"))
($10 472 < -yk94ms_85r_eqyymv3f_-k29 "#0" 471
(uid "-yk94ms_85r_eqyymv3f_-k29")
(isNavigable false))
($10 473 < -yk94ms_85r_eqyymv3f_-k28 "#1" 471
(changeability "frozen")
(uid "-yk94ms_85r_eqyymv3f_-k28")
(multiplicity "1"))
($7 474 < -yk94ms_85r_eqyymv3f_-k27 "documentation" 473
(name "documentation"
)
(value "ChemComp.LinkEnd corresponding to MolResLinkEnd"
)
(uid "-yk94ms_85r_eqyymv3f_-k27"))
($7 475 < -yk94ms_85r_eqyymv3f_-k26 "guid" 473
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00040"
)
(uid "-yk94ms_85r_eqyymv3f_-k26"))
($7 476 < -yk94ms_85r_eqyymv3f_-k25 "isDerived" 471
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k25"))
($7 477 < -yk94ms_85r_eqyymv3f_-k24 "documentation" 460
(name "documentation"
)
(value "The MolResidue end (Link End) of a bond to another MolResidue"
"The MolResLinkEnds corresponding to a MolResidue are created automatically when the MolResidue is created."
"Note that MolResLinkEnds can neither be created nor deleted while their ancestor Molecule is linked to one or more chains."
)
(uid "-yk94ms_85r_eqyymv3f_-k24"))
($7 478 < -yk94ms_85r_eqyymv3f_-k1w "guid" 460
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00048"
)
(uid "-yk94ms_85r_eqyymv3f_-k1w"))
($7 479 < -yk94ms_15v_evqyosvg_-p8f "destructorCode:java" 460
(name "destructorCode:java"
)
(value "if (!getMolResidue().getMolecule().getChains().isEmpty())"
"  throw new memops.general.ApiException(\"MolResLinkEnd of \" + getMolResidue().getMolecule().getName() + \" cannot be deleted while molecule has chains\" );"
)
(uid "-yk94ms_15v_evqyosvg_-p8f"))
($7 480 < -yk94ms_15v_evqyosvg_-p8e "constructorCode:java" 460
(name "constructorCode:java"
)
(value "if (!getMolResidue().getMolecule().getChains().isEmpty())"
"  throw new memops.general.ApiException(\"MolResLinkEnd of \" + getMolResidue().getMolecule().getName() + \" cannot be created while molecule has chains\" );"
)
(uid "-yk94ms_15v_evqyosvg_-p8e"))
($7 481 < -yk94ms_15v_evqyosvg_-p8d "destructorCode:python" 460
(name "destructorCode:python"
)
(value "if self.getByNavigation('molResidue','molecule','chains'):"
"  raise ApiError(\"MolResLinkEnd of %s cannot be deleted while molecule has chains\" % self.molResidue.molecule.name)"
)
(uid "-yk94ms_15v_evqyosvg_-p8d"))
($7 482 < -yk94ms_15v_evqyosvg_-p8c "constructorCode:python" 460
(name "constructorCode:python"
)
(value "if self.getByNavigation('molResidue','molecule','chains'):"
"  raise ApiError(\"MolResLinkEnd of %s cannot be created while molecule has chains\" % self.molResidue.molecule.name)"
)
(uid "-yk94ms_15v_evqyosvg_-p8c"))
($7 483 < -yk94ms_15v_evqyosvg_-p8b "keyNames" 460
(name "keyNames"
)
(value "linkCode"
)
(uid "-yk94ms_15v_evqyosvg_-p8b"))
($5 484 < -yk94ms_85r_eqyymv3f_-k1v "MolResLink" 1
(name "MolResLink"
)
(uid "-yk94ms_85r_eqyymv3f_-k1v"))
($6 485 < -yk94ms_85r_eqyymv3f_-k1u "dihedralAngle" 484
(name "dihedralAngle"
)
(uid "-yk94ms_85r_eqyymv3f_-k1u"))
($7 486 < -yk94ms_85r_eqyymv3f_-k1t "documentation" 485
(name "documentation"
)
(value "Approximate value in degrees of dihedral angle formed across bond (as defined in the ChemComp Link definitions). The value is not precise but serves to indicate the conformation of rotationally hindered bonds."
)
(uid "-yk94ms_85r_eqyymv3f_-k1t"))
($7 487 < -yk94ms_85r_eqyymv3f_-k1s "guid" 485
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00046"
)
(uid "-yk94ms_85r_eqyymv3f_-k1s"))
($6 488 < -yk94ms_85r_eqyymv3f_-k1r "isStdLinear" 484
(changeability "frozen")
(name "isStdLinear"
)
(uid "-yk94ms_85r_eqyymv3f_-k1r"))
($7 489 < -yk94ms_85r_eqyymv3f_-k1q "documentation" 488
(name "documentation"
)
(value "Is the link a standard linear polymer link, i.e. a link between MolResidue with consecutive serials, with linkend linkcode 'next' and 'prev'"
)
(uid "-yk94ms_85r_eqyymv3f_-k1q"))
($7 490 < -yk94ms_85r_eqyymv3f_-k1p "isDerived" 488
(name "isDerived"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k1p"))
($7 491 < -yk94ms_85r_eqyymv3f_-k1o "guid" 488
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00047"
)
(uid "-yk94ms_85r_eqyymv3f_-k1o"))
($8 492 < -yk94ms_85r_eqyymv3f_-k1n "getIsStdLinear" 484
(name "getIsStdLinear"
)
(uid "-yk94ms_85r_eqyymv3f_-k1n")
(isQuery true))
($7 493 < -yk94ms_85r_eqyymv3f_-k1k "documentation" 492
(name "documentation"
)
(value "getter for derived attribute isStdLinear"
)
(uid "-yk94ms_85r_eqyymv3f_-k1k"))
($7 494 < -yk94ms_85r_eqyymv3f_-k1j "opType" 492
(name "opType"
)
(value "get"
)
(uid "-yk94ms_85r_eqyymv3f_-k1j"))
($7 495 < -yk94ms_85r_eqyymv3f_-k1g "guid" 492
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00048"
)
(uid "-yk94ms_85r_eqyymv3f_-k1g"))
($7 496 < z8kflu_15v_ewd8sewa_-p7c "code:java" 492
(name "code:java"
)
(value "java.util.Set<ccp.api.molecule.Molecule.MolResLinkEnd> molResLinkEnds = getMolResLinkEnds();"
"java.util.Iterator<ccp.api.molecule.Molecule.MolResLinkEnd> iter ="
"molResLinkEnds.iterator();"
"ccp.api.molecule.Molecule.MolResLinkEnd a = iter.next();"
"ccp.api.molecule.Molecule.MolResLinkEnd b = iter.next();"
"java.lang.String codeA = a.getLinkCode();"
"java.lang.String codeB = b.getLinkCode();"
"int diff = a.getMolResidue().getSerial() - b.getMolResidue().getSerial();"
"if (((diff == -1) && \"next\".equals(codeA) && \"prev\".equals(codeB)) ||"
"    ((diff == 1) && \"next\".equals(codeB) && \"prev\".equals(codeA)))"
"  result = true;"
"else"
"  result = false;"
)
(uid "z8kflu_15v_ewd8sewa_-p7c"))
($7 497 < z8kflu_15v_ewd8sewa_-p7b "code:python" 492
(name "code:python"
)
(value "(a, b)  = self.molResLinkEnds"
"codeA = a.linkCode"
"codeB = b.linkCode"
"diff = a.molResidue.serial - b.molResidue.serial"
"if ( (diff == -1 and codeA == 'next' and codeB == 'prev') or "
"     (diff == 1 and codeB == 'next' and codeA == 'prev' ) ):"
"  result = True"
"else:"
"  result = False"
)
(uid "z8kflu_15v_ewd8sewa_-p7b"))
($12 498 < -yk94ms_85r_eqyymv3f_-k1f "#<anon> (MolResLink, DataObject)" 484
(uid "-yk94ms_85r_eqyymv3f_-k1f"))
($9 499 < -yk94ms_85r_eqyymv3f_-k1e "#<anon> (MolResLink, MolResLinkEnd)##," 484
(name "")
(uid "-yk94ms_85r_eqyymv3f_-k1e"))
($10 500 < -yk94ms_85r_eqyymv3f_-k1d "#0" 499
(uid "-yk94ms_85r_eqyymv3f_-k1d"))
($7 501 < -yk94ms_85r_eqyymv3f_-k1c "documentation" 500
(name "documentation"
)
(value "InterChemComp link made up from LinkEnds"
)
(uid "-yk94ms_85r_eqyymv3f_-k1c"))
($7 502 < -yk94ms_85r_eqyymv3f_-k1b "guid" 500
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00044"
)
(uid "-yk94ms_85r_eqyymv3f_-k1b"))
($10 503 < -yk94ms_85r_eqyymv3f_-k1a "#1" 499
(changeability "frozen")
(uid "-yk94ms_85r_eqyymv3f_-k1a")
(multiplicity "2"))
($7 504 < -yk94ms_85r_eqyymv3f_-k19 "documentation" 503
(name "documentation"
)
(value "LinkEnds that make up the MolSystemLink"
)
(uid "-yk94ms_85r_eqyymv3f_-k19"))
($7 505 < -yk94ms_85r_eqyymv3f_-k18 "guid" 503
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00045"
)
(uid "-yk94ms_85r_eqyymv3f_-k18"))
($7 506 < -yk94ms_85r_eqyymv3f_-k17 "documentation" 484
(name "documentation"
)
(value "Link (bond) between two molResidues, through their MolResLinkEnds. MolResLinks that are valid for a Molecule are implicitly valid also for Chains linked to that Molecule. Unlike MolResLinkEnds, MolResLinks can be created (or modified) for existing molecules, even if the Molecule is linked to one or more Chains. This allows linkages to be redefined, or to be left as initially unknown (as in the case of a protein with unknown disulfide binding topology). "
)
(uid "-yk94ms_85r_eqyymv3f_-k17"))
($7 507 < -yk94ms_85r_eqyymv3f_-k15 "guid" 484
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00049"
)
(uid "-yk94ms_85r_eqyymv3f_-k15"))
($7 508 < -yk94ms_15v_evqyosvg_-p8a "keyNames" 484
(name "keyNames"
)
(value "molResLinkEnds"
)
(uid "-yk94ms_15v_evqyosvg_-p8a"))
($5 509 < -yk94ms_85r_eqyymv3f_-k14 "LinkDihedralAngle" 1
(name "LinkDihedralAngle"
)
(uid "-yk94ms_85r_eqyymv3f_-k14"))
($12 510 < -yk94ms_85r_eqyymv3f_-k13 "#<anon> (LinkDihedralAngle, Int)" 509
(uid "-yk94ms_85r_eqyymv3f_-k13"))
($7 511 < -yk94ms_85r_eqyymv3f_-k12 "isOpen" 509
(name "isOpen"
)
(value "False"
)
(uid "-yk94ms_85r_eqyymv3f_-k12"))
($7 512 < -yk94ms_85r_eqyymv3f_-k11 "documentation" 509
(name "documentation"
)
(value "Data Type for approximate dihedral angle across an interresidue bond, in degrees. Serves to specify the conformation across rotationally hindered bonds."
)
(uid "-yk94ms_85r_eqyymv3f_-k11"))
($7 513 < -yk94ms_85r_eqyymv3f_-k10 "enumeration" 509
(name "enumeration"
)
(value "('0','180','90','-90','120','-120')"
)
(uid "-yk94ms_85r_eqyymv3f_-k10"))
($7 514 < -yk94ms_85r_eqyymv3f_-k0z "guid" 509
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00050"
)
(uid "-yk94ms_85r_eqyymv3f_-k0z"))
($5 515 < -yk94ms_85r_eqyymv3f_-k0y "SmilesType" 1
(name "SmilesType"
)
(uid "-yk94ms_85r_eqyymv3f_-k0y"))
($12 516 < -yk94ms_85r_eqyymv3f_-k0x "#<anon> (SmilesType, Word)" 515
(uid "-yk94ms_85r_eqyymv3f_-k0x"))
($7 517 < -yk94ms_85r_eqyymv3f_-k0w "documentation" 515
(name "documentation"
)
(value "Type of smiles string"
)
(uid "-yk94ms_85r_eqyymv3f_-k0w"))
($7 518 < -yk94ms_85r_eqyymv3f_-k0v "isOpen" 515
(name "isOpen"
)
(value "False"
)
(uid "-yk94ms_85r_eqyymv3f_-k0v"))
($7 519 < -yk94ms_85r_eqyymv3f_-k0u "enumeration" 515
(name "enumeration"
)
(value "'stereo','nonstereo'"
)
(uid "-yk94ms_85r_eqyymv3f_-k0u"))
($7 520 < -yk94ms_85r_eqyymv3f_-k0t "guid" 515
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00051"
)
(uid "-yk94ms_85r_eqyymv3f_-k0t"))
($13 521 < -yk94ms_85r_eqyymv3f_-k09 "#<anon> (Molecule, ChemCompCoord)" 1
(uid "-yk94ms_85r_eqyymv3f_-k09"))
($5 522 < -yk94ms_85r_eqyymv3f_-k08 "SecStrucCode" 1
(name "SecStrucCode"
)
(uid "-yk94ms_85r_eqyymv3f_-k08"))
($12 523 < -yk94ms_85r_eqyymv3f_-k07 "#<anon> (SecStrucCode, Word)" 522
(uid "-yk94ms_85r_eqyymv3f_-k07"))
($7 524 < -yk94ms_85r_eqyymv3f_-k06 "documentation" 522
(name "documentation"
)
(value "Secondary Structure Code, or DSSP code (Kabsch and Sander)"
"Values are :"
"H: 4-membered (alpha) helix"
"B: beta bridge"
"E: (extended) beta strand."
"G: three-membered helix (3/01 helix)"
"I: five-membered (pi) helix"
"T: hydrogen-bonded turn"
"S: Bend (non-hydrogen bonded)"
"C: Random coil - not in a stable coformation"
"U: Undefined."
)
(uid "-yk94ms_85r_eqyymv3f_-k06"))
($7 525 < -yk94ms_85r_eqyymv3f_-k05 "isOpen" 522
(name "isOpen"
)
(value "True"
)
(uid "-yk94ms_85r_eqyymv3f_-k05"))
($7 526 < -yk94ms_85r_eqyymv3f_-k04 "enumeration" 522
(name "enumeration"
)
(value "('H','B','E','G','I','T','S','C','U')"
)
(uid "-yk94ms_85r_eqyymv3f_-k04"))
($7 527 < -yk94ms_85r_eqyymv3f_-k03 "guid" 522
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00053"
)
(uid "-yk94ms_85r_eqyymv3f_-k03"))
($11 528 < -yk94ms_85r_eqyymv3f_-k02 "length_is_1" 522
(name "length_is_1"
)
(uid "-yk94ms_85r_eqyymv3f_-k02")
(body "code:python"
"_"
"len(value) == 1"
"_"
"code:java"
"_"
"value.length() == 1"
))
($7 529 < -yk94ms_85r_eqyymv3f_-k01 "guid" 528
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00054"
)
(uid "-yk94ms_85r_eqyymv3f_-k01"))
($5 530 < -yk94ms_-e3s_e41656c6_-kas "MolType" 1
(name "MolType"
)
(uid "-yk94ms_-e3s_e41656c6_-kas"))
($12 531 < -yk94ms_85r_eqyymv3f_-jzz "#<anon> (MolType, Line)" 530
(uid "-yk94ms_85r_eqyymv3f_-jzz"))
($7 532 < -yk94ms_85r_eqyymv3f_-jzy "isOpen" 530
(name "isOpen"
)
(value "False"
)
(uid "-yk94ms_85r_eqyymv3f_-jzy"))
($7 533 < -yk94ms_85r_eqyymv3f_-jzx "enumeration" 530
(name "enumeration"
)
(value "('protein', 'DNA', 'RNA', 'DNA/RNA', 'carbohydrate', 'other',)"
)
(uid "-yk94ms_85r_eqyymv3f_-jzx"))
($7 534 < -yk94ms_85r_eqyymv3f_-jzw "documentation" 530
(name "documentation"
)
(value "This is an open enumeration for the type of Molecule and MolComponent."
)
(uid "-yk94ms_85r_eqyymv3f_-jzw"))
($7 535 < -yk94ms_85r_eqyymv3f_-jzv "guid" 530
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00055"
)
(uid "-yk94ms_85r_eqyymv3f_-jzv"))
($5 536 < -hkpzxr_v5_f9gtenwt_-p98 "Alignment" 1
(name "Alignment"
)
(uid "-hkpzxr_v5_f9gtenwt_-p98"))
($6 537 < -hkpzxr_v5_f9gtenwt_-p8g "serial" 536
(changeability "frozen")
(name "serial"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8g")
(multiplicity "1"))
($7 538 < -hkpzxr_v5_f9gtenwt_-p8f "isAutomatic" 537
(name "isAutomatic"
)
(value "True"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8f"))
($7 539 < -hkpzxr_v5_f9gtenwt_-p83 "guid" 537
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:11:59_00003"
)
(uid "-hkpzxr_v5_f9gtenwt_-p83"))
($6 540 < -hkpzxr_v5_f9gtenwt_-p94 "homologyRatio" 536
(name "homologyRatio"
)
(uid "-hkpzxr_v5_f9gtenwt_-p94"))
($7 541 < -hkpzxr_v5_f9gtenwt_-p93 "documentation" 540
(name "documentation"
)
(value "Fractioanl homology"
)
(uid "-hkpzxr_v5_f9gtenwt_-p93"))
($7 542 < -hkpzxr_v5_f9gtenwt_-p82 "guid" 540
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:11:59_00004"
)
(uid "-hkpzxr_v5_f9gtenwt_-p82"))
($6 543 < -hkpzxr_v5_f9gtenwt_-p92 "dbRefAlignBegin" 536
(name "dbRefAlignBegin"
)
(uid "-hkpzxr_v5_f9gtenwt_-p92"))
($7 544 < -hkpzxr_v5_f9gtenwt_-p91 "documentation" 543
(name "documentation"
)
(value "Optional. Residue number in the database reference sequence where the alignment begins."
)
(uid "-hkpzxr_v5_f9gtenwt_-p91"))
($7 545 < -hkpzxr_v5_f9gtenwt_-p81 "guid" 543
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:11:59_00005"
)
(uid "-hkpzxr_v5_f9gtenwt_-p81"))
($6 546 < -hkpzxr_v5_f9gtenwt_-p90 "dbRefAlignEnd" 536
(name "dbRefAlignEnd"
)
(uid "-hkpzxr_v5_f9gtenwt_-p90"))
($7 547 < -hkpzxr_v5_f9gtenwt_-p8z "documentation" 546
(name "documentation"
)
(value "Optional. Residue number in the database reference sequence where the alignment ends."
)
(uid "-hkpzxr_v5_f9gtenwt_-p8z"))
($7 548 < -hkpzxr_v5_f9gtenwt_-p84 "guid" 546
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:11:59_00006"
)
(uid "-hkpzxr_v5_f9gtenwt_-p84"))
($6 549 < -hkpzxr_v5_f9gtenwt_-p8y "nIdentical" 536
(name "nIdentical"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8y"))
($7 550 < -hkpzxr_v5_f9gtenwt_-p8x "documentation" 549
(name "documentation"
)
(value "Number of identical residues"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8x"))
($7 551 < -hkpzxr_v5_f9gtenwt_-p7r "guid" 549
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:39_00001"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7r"))
($6 552 < -hkpzxr_v5_f9gtenwt_-p8w "nPositive" 536
(name "nPositive"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8w"))
($7 553 < -hkpzxr_v5_f9gtenwt_-p8v "documentation" 552
(name "documentation"
)
(value "Number of positive-scoring residues"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8v"))
($7 554 < -hkpzxr_v5_f9gtenwt_-p7q "guid" 552
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:39_00002"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7q"))
($6 555 < -hkpzxr_v5_f9gtenwt_-p8u "alignLength" 536
(name "alignLength"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8u"))
($7 556 < -hkpzxr_v5_f9gtenwt_-p8t "documentation" 555
(name "documentation"
)
(value "Length of alignment"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8t"))
($7 557 < -hkpzxr_v5_f9gtenwt_-p7p "guid" 555
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:39_00003"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7p"))
($6 558 < -hkpzxr_v5_f9gtenwt_-p8s "alignmentScore" 536
(name "alignmentScore"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8s"))
($7 559 < -hkpzxr_v5_f9gtenwt_-p8r "documentation" 558
(name "documentation"
)
(value "Alignment score for alignment or threading program."
)
(uid "-hkpzxr_v5_f9gtenwt_-p8r"))
($7 560 < -hkpzxr_v5_f9gtenwt_-p7o "guid" 558
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:39_00004"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7o"))
($6 561 < -hkpzxr_v5_f9gtenwt_-p8q "alignmentProgram" 536
(name "alignmentProgram"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8q"))
($7 562 < -hkpzxr_v5_f9gtenwt_-p8p "documentation" 561
(name "documentation"
)
(value "Program used for alignment/threading."
)
(uid "-hkpzxr_v5_f9gtenwt_-p8p"))
($7 563 < -hkpzxr_v5_f9gtenwt_-p7n "guid" 561
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:39_00005"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7n"))
($6 564 < -hkpzxr_v5_f9gtenwt_-p8m "details" 536
(name "details"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8m"))
($7 565 < -hkpzxr_v5_f9gtenwt_-p7m "guid" 564
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:15:39_00006"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7m"))
($12 566 < -hkpzxr_v5_f9gtenwt_-p96 "#<anon> (Alignment, DataObject)" 536
(uid "-hkpzxr_v5_f9gtenwt_-p96"))
($9 567 < -hkpzxr_v5_f9gtenwt_-p8n "#<anon> (Alignment, Entry)##,dbRef" 536
(name "")
(uid "-hkpzxr_v5_f9gtenwt_-p8n"))
($10 568 < -hkpzxr_v5_f9gtenwt_-p8e "#0" 567
(uid "-hkpzxr_v5_f9gtenwt_-p8e")
(multiplicity "*"))
($7 569 < -hkpzxr_v5_f9gtenwt_-p8d "documentation" 568
(name "documentation"
)
(value "Molecule alignments using DbRef.Entry"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8d"))
($7 570 < -hkpzxr_v5_f9gtenwt_-p80 "guid" 568
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:11:59_00001"
)
(uid "-hkpzxr_v5_f9gtenwt_-p80"))
($10 571 < -hkpzxr_v5_f9gtenwt_-p8c "dbRef#1" 567
(changeability "frozen")
(name "dbRef"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8c")
(multiplicity "1"))
($7 572 < -hkpzxr_v5_f9gtenwt_-p8b "documentation" 571
(name "documentation"
)
(value "database reference used in alignment"
)
(uid "-hkpzxr_v5_f9gtenwt_-p8b"))
($7 573 < -hkpzxr_v5_f9gtenwt_-p7z "guid" 571
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:11:59_00002"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7z"))
($7 574 < -hkpzxr_v5_f9gtenwt_-p97 "documentation" 536
(name "documentation"
)
(value "Alignment of molecule with database reference"
)
(uid "-hkpzxr_v5_f9gtenwt_-p97"))
($7 575 < -hkpzxr_v5_f9gtenwt_-p95 "keyNames" 536
(name "keyNames"
)
(value "serial"
)
(uid "-hkpzxr_v5_f9gtenwt_-p95"))
($7 576 < -hkpzxr_v5_f9gtenwt_-p7y "guid" 536
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2007-11-26-10:11:54_00001"
)
(uid "-hkpzxr_v5_f9gtenwt_-p7y"))
($13 577 < -hkpzxr_v5_f9gtenwt_-p7x "#<anon> (Molecule, DbRef)" 1
(uid "-hkpzxr_v5_f9gtenwt_-p7x"))
($7 578 < -yk94ms_85r_eqyymv3f_-jzu "shortName" 1
(name "shortName"
)
(value "MOLE"
)
(uid "-yk94ms_85r_eqyymv3f_-jzu"))
($7 579 < -yk94ms_85r_eqyymv3f_-jzt "documentation" 1
(name "documentation"
)
(value "Covalent structure of molecules; sequence of linear poymers (DNA. RNA, and proteins)."
)
(uid "-yk94ms_85r_eqyymv3f_-jzt"))
($7 580 < -yk94ms_85r_eqyymv3f_-jzs "guid" 1
(name "guid"
)
(value "www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00038"
)
(uid "-yk94ms_85r_eqyymv3f_-jzs"))
($15 582)
($17 585)
($17 587)
($17 589)
($17 591)
($17 592)
($17 596)
($17 600)
($17 602)
($17 605)
($17 606)
($17 609)
($17 614)
($15 619)
($15 620)
($15 621)
($15 622)
($15 624)
($15 625)
($15 626)
($15 627)
($15 628)
($15 630)
($15 632)
($15 635)
($15 636)
($15 638)
($15 639)
($15 640)
($15 641)
($15 642)
($15 643)
($15 644)
($15 645)
($15 646)
($15 647)
($15 649)
($15 650)
($15 651)
($15 653)
($15 655)
($15 656)
($15 657)
($15 658)
($15 659)
($15 661)
($15 662)
($15 663)
($15 665)
($15 668)
($15 669)
($15 670)
($15 671)
($15 672)
($15 673)
($15 674)
($15 675)
($15 676)
($15 677)
($15 678)
($15 679)
($15 680)
($15 681)
($15 682)
($15 683)
($15 684)
($15 685)
($15 686)
($15 687)
($15 688)
($15 689)
($15 690)
($15 691)
($15 692)
($15 693)
($15 694)
($15 695)
($15 696)
($15 697)
($15 698)
($15 699)
($15 700)
($15 701)
($15 702)
($15 703)
($15 704)
($15 705)
($14 581 @ -yk94ms_-e3s_e41656c6_-fvz 2 "styles" objectdomain.uml.mechanisms.StylePackage-owns "Molecule" $14)
($5 583 @ z8kflu_63g_errlz7sn_-p8u 4 "Logical" $1 "memops" $1 "Implementation" $1 "TopObject" $5)
($5 584 @ -yk94ms_-e3s_e41656c6_-h0m 4 "Logical" $1 "memops" $1 "Implementation" $1 "Line" $5)
($5 586 @ -yk94ms_-e3s_e41656c6_-h04 4 "Logical" $1 "memops" $1 "Implementation" $1 "Text" $5)
($5 588 @ -yk94ms_-e3s_e41656c6_-h1k 4 "Logical" $1 "memops" $1 "Implementation" $1 "Boolean" $5)
($18 590 @ -yk94ms_-e3s_e41656c6_-fw7 2 "stereotypes" objectdomain.uml.mechanisms.StereotypePackage-owns "DataType" $18)
($5 593 @ -yk94ms_-e3s_e41656c6_-h0t 4 "Logical" $1 "memops" $1 "Implementation" $1 "Int" $5)
($5 594 @ -yk94ms_-e3s_e41656c6_-h10 4 "Logical" $1 "memops" $1 "Implementation" $1 "Float" $5)
($5 595 @ -yk94ms_-e3s_e41656c6_-h0a 4 "Logical" $1 "memops" $1 "Implementation" $1 "String" $5)
($5 597 @ -yk94ms_-e3s_e41656c6_-gzz 4 "Logical" $1 "memops" $1 "Implementation" $1 "Word" $5)
($5 598 @ -yk94ms_85r_eqyymv3f_-jo5 5 "Logical" $1 "ccp" $1 "molecule" $1 "MolSystem" $1 "Chain" $5)
($5 599 @ -yk94ms_-e3s_e41656c6_-gpe 4 "Logical" $1 "memops" $1 "Implementation" $1 "DataObject" $5)
($5 601 @ -yk94ms_85r_eqyymv3f_-l50 5 "Logical" $1 "ccp" $1 "molecule" $1 "ChemComp" $1 "MolType" $5)
($5 603 @ -hkpzxr_-li2_f6hr0e0k_-p8z 4 "Logical" $1 "memops" $1 "Implementation" $1 "LongWord" $5)
($5 604 @ -yk94ms_85r_eqyymv3f_-l4u 5 "Logical" $1 "ccp" $1 "molecule" $1 "ChemComp" $1 "ChemCompLinking" $5)
($5 607 @ -yk94ms_85r_eqyymv3f_-jju 5 "Logical" $1 "ccp" $1 "molecule" $1 "MolSystem" $1 "Residue" $5)
($5 608 @ -yk94ms_85r_eqyymv3f_-o9n 5 "Logical" $1 "ccp" $1 "general" $1 "Taxonomy" $1 "NaturalSource" $5)
($5 610 @ -yk94ms_-e3s_e41656c6_-gnv 4 "Logical" $1 "memops" $1 "Implementation" $1 "FloatRatio" $5)
($5 611 @ -yk94ms_85r_eqyymv3f_-op8 5 "Logical" $1 "ccp" $1 "general" $1 "DbRef" $1 "Entry" $5)
($5 612 @ -yk94ms_85r_eqyymv3f_-p09 5 "Logical" $1 "ccp" $1 "general" $1 "Annotation" $1 "MolFeature" $5)
($5 613 @ -yk94ms_85r_eqyymv3f_-lfz 5 "Logical" $1 "ccp" $1 "molecule" $1 "ChemComp" $1 "ChemCompVar" $5)
($5 615 @ -yk94ms_85r_eqyymv3f_-l38 5 "Logical" $1 "ccp" $1 "molecule" $1 "ChemComp" $1 "LinkEnd" $5)
($5 616 @ -yk94ms_-e3s_e41656c6_-ms3 5 "Logical" $1 "ccp" $1 "molecule" $1 "ChemComp" $1 "ChemComp" $5)
($5 617 @ -yk94ms_85r_eqyymv3f_-ovk 5 "Logical" $1 "ccp" $1 "general" $1 "Citation" $1 "Citation" $5)
($5 618 @ -yk94ms_85r_eqyymv3f_-mfi 5 "Logical" $1 "ccp" $1 "lims" $1 "RefSampleComponent" $1 "MolComponent" $5)
($14 623 @ -yk94ms_-e3s_e41656c6_-fvh 2 "styles" objectdomain.uml.mechanisms.StylePackage-owns "Taxonomy" $14)
($14 629 @ -yk94ms_-e3s_e41656c6_-fvw 2 "styles" objectdomain.uml.mechanisms.StylePackage-owns "memops.Implementation" $14)
($5 631 @ -yk94ms_-e3s_e41656c6_-gyg 4 "Logical" $1 "memops" $1 "Implementation" $1 "MemopsRoot" $5)
($9 633 @ -yk94ms_-e3s_e41656c6_-gx2 5 "Logical" $1 "memops" $1 "Implementation" $1 "MemopsRoot" $5 "#<anon> (MemopsRoot, Molecule)##," $9)
($14 634 @ -yk94ms_-e3s_e41656c6_-fvv 2 "styles" objectdomain.uml.mechanisms.StylePackage-owns "Annotation" $14)
($14 637 @ -yk94ms_-e3s_e41656c6_-fvu 2 "styles" objectdomain.uml.mechanisms.StylePackage-owns "ChemComp" $14)
($9 648 @ -yk94ms_85r_eqyymv3f_-l2c 6 "Logical" $1 "ccp" $1 "molecule" $1 "ChemComp" $1 "LinkEnd" $5 "#<anon> (LinkEnd, ChemCompVar)##," $9)
($9 652 @ -yk94ms_85r_eqyymv3f_-lky 6 "Logical" $1 "ccp" $1 "molecule" $1 "ChemComp" $1 "ChemComp" $5 "#<anon> (ChemComp, ChemCompVar)##," $9)
($9 654 @ -yk94ms_85r_eqyymv3f_-lkg 6 "Logical" $1 "ccp" $1 "molecule" $1 "ChemComp" $1 "ChemComp" $5 "#<anon> (ChemComp, LinkEnd)##," $9)
($14 660 @ -yk94ms_-e3s_e41656c6_-fw0 2 "styles" objectdomain.uml.mechanisms.StylePackage-owns "SampleComponent" $14)
($9 664 @ -yk94ms_l0q_evqpurmn_-p91 5 "Logical" $1 "memops" $1 "Implementation" $1 "MemopsRoot" $5 "#<anon> (MemopsRoot, Molecule)##,currentMolecule" $9)
($9 666 @ -yk94ms_63g_es2yk6pd_-p6x 5 "Logical" $1 "memops" $1 "Implementation" $1 "MemopsRoot" $5 "#<anon> (MemopsRoot, ChemComp)##," $9)
($14 667 @ -yk94ms_-e3s_e41656c6_-fvr 2 "styles" objectdomain.uml.mechanisms.StylePackage-owns "DbRef" $14)
($18 706 @ -yk94ms_-e3s_e41656c6_-fwy 2 "stereotypes" objectdomain.uml.mechanisms.StereotypePackage-owns "import" $18)
($1 707 @ -yk94ms_-e3s_e41656c6_-iio 4 "Logical" $1 "ccp" $1 "general" $1 "Citation" $1)
($1 708 @ -yk94ms_85r_eqyymv3f_-o9w 4 "Logical" $1 "ccp" $1 "general" $1 "Taxonomy" $1)
($1 709 @ -yk94ms_-e3s_e41656c6_-p0n 4 "Logical" $1 "ccp" $1 "molecule" $1 "ChemComp" $1)
($1 710 @ -yk94ms_-e3s_e41656c6_-m4c 4 "Logical" $1 "ccp" $1 "molecule" $1 "ChemCompCoord" $1)
($1 711 @ -yk94ms_-e3s_e41656c6_-id3 4 "Logical" $1 "ccp" $1 "general" $1 "DbRef" $1)
(styleAssn 3 581)
(typeAssn 246 79)
(assocEndAssn 79 246)
(typeAssn 254 79)
(assocEndAssn 79 254)
(typeAssn 259 79)
(assocEndAssn 79 259)
(typeAssn 264 79)
(assocEndAssn 79 264)
(typeAssn 271 79)
(assocEndAssn 79 271)
(typeAssn 288 79)
(assocEndAssn 79 288)
(typeAssn 293 79)
(assocEndAssn 79 293)
(typeAssn 278 79)
(assocEndAssn 79 278)
(typeAssn 299 79)
(assocEndAssn 79 299)
(subtypeAssn 297 79)
(supertypeAssn 297 583)
(generalizationAssn 79 297)
(typeRefAssn 80 584)
(typeExpression 80 585)
(typeRefAssn 83 586)
(typeExpression 83 587)
(typeRefAssn 86 588)
(typeExpression 86 589)
(stereotypeAssn 530 590)
(subtypeAssn 531 530)
(supertypeAssn 531 584)
(generalizationAssn 530 531)
(typeRefAssn 89 530)
(typeExpression 89 591)
(typeRefAssn 93 584)
(typeExpression 93 592)
(typeRefAssn 97 584)
(typeExpression 97 592)
(typeRefAssn 101 584)
(typeExpression 101 592)
(typeRefAssn 105 593)
(typeExpression 105 585)
(typeRefAssn 109 594)
(typeExpression 109 585)
(typeRefAssn 112 584)
(typeExpression 112 585)
(typeRefAssn 116 594)
(typeExpression 116 592)
(typeRefAssn 120 593)
(typeExpression 120 585)
(typeRefAssn 124 588)
(typeExpression 124 585)
(typeRefAssn 128 588)
(typeExpression 128 592)
(typeRefAssn 132 595)
(typeExpression 132 596)
(stereotypeAssn 515 590)
(subtypeAssn 516 515)
(supertypeAssn 516 597)
(generalizationAssn 515 516)
(typeRefAssn 135 515)
(typeExpression 135 596)
(typeRefAssn 138 595)
(typeExpression 138 592)
(typeRefAssn 182 586)
(typeExpression 182 596)
(typeRefAssn 185 595)
(typeExpression 185 596)
(typeRefAssn 189 595)
(typeExpression 189 596)
(typeRefAssn 193 588)
(typeExpression 193 596)
(typeRefAssn 197 588)
(typeExpression 197 596)
(typeRefAssn 201 588)
(typeExpression 201 596)
(typeRefAssn 211 588)
(typeExpression 211 596)
(typeAssn 249 598)
(assocEndAssn 323 256)
(typeAssn 372 323)
(assocEndAssn 323 372)
(typeAssn 378 323)
(assocEndAssn 323 378)
(typeAssn 387 323)
(assocEndAssn 323 387)
(typeAssn 394 323)
(assocEndAssn 323 394)
(typeAssn 400 323)
(assocEndAssn 323 400)
(typeAssn 405 323)
(assocEndAssn 323 405)
(subtypeAssn 385 323)
(supertypeAssn 385 599)
(generalizationAssn 323 385)
(typeRefAssn 324 593)
(typeExpression 324 600)
(typeRefAssn 327 593)
(typeExpression 327 585)
(typeRefAssn 330 584)
(typeExpression 330 600)
(typeRefAssn 333 601)
(typeExpression 333 602)
(typeRefAssn 337 603)
(typeExpression 337 602)
(typeRefAssn 341 604)
(typeExpression 341 605)
(typeRefAssn 368 584)
(typeExpression 368 606)
(typeAssn 375 607)
(assocEndAssn 416 382)
(typeAssn 438 416)
(assocEndAssn 416 438)
(typeAssn 295 416)
(assocEndAssn 416 295)
(typeAssn 446 416)
(assocEndAssn 416 446)
(subtypeAssn 444 416)
(supertypeAssn 444 599)
(generalizationAssn 416 444)
(typeRefAssn 417 584)
(typeExpression 417 585)
(typeRefAssn 421 584)
(typeExpression 421 585)
(typeAssn 441 608)
(assocEndAssn 536 449)
(typeAssn 568 536)
(assocEndAssn 536 568)
(typeAssn 301 536)
(assocEndAssn 536 301)
(subtypeAssn 566 536)
(supertypeAssn 566 599)
(generalizationAssn 536 566)
(typeRefAssn 537 593)
(typeExpression 537 609)
(typeRefAssn 540 610)
(typeExpression 540 609)
(typeRefAssn 543 593)
(typeExpression 543 609)
(typeRefAssn 546 593)
(typeExpression 546 609)
(typeRefAssn 549 593)
(typeExpression 549 609)
(typeRefAssn 552 593)
(typeExpression 552 609)
(typeRefAssn 555 593)
(typeExpression 555 609)
(typeRefAssn 558 594)
(typeExpression 558 609)
(typeRefAssn 561 586)
(typeExpression 561 609)
(typeRefAssn 564 595)
(typeExpression 564 609)
(typeAssn 571 611)
(typeAssn 449 536)
(typeAssn 382 416)
(typeAssn 390 612)
(typeAssn 395 613)
(assocEndAssn 460 402)
(typeAssn 503 460)
(assocEndAssn 460 503)
(typeAssn 472 460)
(assocEndAssn 460 472)
(subtypeAssn 470 460)
(supertypeAssn 470 599)
(generalizationAssn 460 470)
(typeRefAssn 461 597)
(typeExpression 461 614)
(typeAssn 473 615)
(typeAssn 402 460)
(typeAssn 406 616)
(typeAssn 256 323)
(assocEndAssn 312 261)
(subtypeAssn 319 312)
(supertypeAssn 319 599)
(generalizationAssn 312 319)
(typeRefAssn 313 597)
(typeExpression 313 585)
(typeRefAssn 316 584)
(typeExpression 316 585)
(typeAssn 261 312)
(typeAssn 267 617)
(typeAssn 274 608)
(typeAssn 283 618)
(assocEndAssn 484 290)
(typeAssn 500 484)
(assocEndAssn 484 500)
(subtypeAssn 498 484)
(supertypeAssn 498 599)
(generalizationAssn 484 498)
(stereotypeAssn 509 590)
(subtypeAssn 510 509)
(supertypeAssn 510 593)
(generalizationAssn 509 510)
(typeRefAssn 485 509)
(typeExpression 485 614)
(typeRefAssn 488 588)
(typeExpression 488 614)
(typeAssn 290 484)
(projectionAssn 3 79 582)
(styleAssn 4 581)
(projectionAssn 4 323 619)
(to 5 4)
(from 5 3)
(projectionAssn 5 253 620)
(styleAssn 6 581)
(projectionAssn 6 416 621)
(to 7 6)
(from 7 4)
(projectionAssn 7 377 622)
(styleAssn 8 623)
(projectionAssn 8 608 624)
(styleAssn 9 581)
(projectionAssn 9 312 625)
(to 10 9)
(from 10 3)
(projectionAssn 10 258 626)
(to 11 8)
(from 11 3)
(projectionAssn 11 270 627)
(to 12 8)
(from 12 6)
(projectionAssn 12 437 628)
(styleAssn 13 629)
(projectionAssn 13 631 630)
(to 14 3)
(from 14 13)
(projectionAssn 14 633 632)
(styleAssn 15 634)
(projectionAssn 15 612 635)
(to 16 15)
(from 16 4)
(projectionAssn 16 386 636)
(styleAssn 17 637)
(projectionAssn 17 613 638)
(to 18 17)
(from 18 4)
(projectionAssn 18 393 639)
(styleAssn 19 581)
(projectionAssn 19 460 640)
(to 20 19)
(from 20 4)
(projectionAssn 20 399 641)
(styleAssn 21 581)
(projectionAssn 21 484 642)
(to 22 21)
(from 22 3)
(projectionAssn 22 287 643)
(to 23 19)
(from 23 21)
(projectionAssn 23 499 644)
(styleAssn 24 581)
(projectionAssn 24 509 645)
(styleAssn 25 637)
(projectionAssn 25 615 646)
(to 26 17)
(from 26 25)
(projectionAssn 26 648 647)
(to 27 25)
(from 27 19)
(projectionAssn 27 471 649)
(styleAssn 28 637)
(projectionAssn 28 616 650)
(to 29 17)
(from 29 28)
(projectionAssn 29 652 651)
(to 30 25)
(from 30 28)
(projectionAssn 30 654 653)
(to 31 28)
(from 31 4)
(projectionAssn 31 404 655)
(styleAssn 32 581)
(projectionAssn 32 515 656)
(to 33 6)
(from 33 3)
(projectionAssn 33 292 657)
(styleAssn 34 581)
(stereotypeAssn 522 590)
(subtypeAssn 523 522)
(supertypeAssn 523 597)
(generalizationAssn 522 523)
(projectionAssn 34 522 658)
(styleAssn 35 581)
(projectionAssn 35 530 659)
(styleAssn 36 660)
(projectionAssn 36 618 661)
(to 37 36)
(from 37 3)
(projectionAssn 37 277 662)
(to 38 3)
(from 38 13)
(projectionAssn 38 664 663)
(to 39 28)
(from 39 13)
(projectionAssn 39 666 665)
(styleAssn 40 667)
(projectionAssn 40 611 668)
(styleAssn 41 581)
(projectionAssn 41 536 669)
(to 42 41)
(from 42 6)
(projectionAssn 42 445 670)
(to 43 40)
(from 43 41)
(projectionAssn 43 567 671)
(to 44 41)
(from 44 3)
(projectionAssn 44 298 672)
(styleAssn 46 581)
(projectionAssn 46 79 673)
(styleAssn 47 581)
(projectionAssn 47 323 674)
(to 48 47)
(from 48 46)
(projectionAssn 48 253 675)
(styleAssn 49 581)
(projectionAssn 49 416 676)
(to 50 49)
(from 50 47)
(projectionAssn 50 377 677)
(styleAssn 51 623)
(projectionAssn 51 608 678)
(styleAssn 52 581)
(projectionAssn 52 312 679)
(to 53 52)
(from 53 46)
(projectionAssn 53 258 680)
(to 54 51)
(from 54 46)
(projectionAssn 54 270 681)
(to 55 51)
(from 55 49)
(projectionAssn 55 437 682)
(styleAssn 56 629)
(projectionAssn 56 631 683)
(to 57 46)
(from 57 56)
(projectionAssn 57 633 684)
(styleAssn 58 634)
(projectionAssn 58 612 685)
(to 59 58)
(from 59 47)
(projectionAssn 59 386 686)
(styleAssn 60 581)
(projectionAssn 60 484 687)
(to 61 60)
(from 61 46)
(projectionAssn 61 287 688)
(styleAssn 62 581)
(projectionAssn 62 460 689)
(to 63 62)
(from 63 47)
(projectionAssn 63 399 690)
(to 64 62)
(from 64 60)
(projectionAssn 64 499 691)
(styleAssn 65 637)
(projectionAssn 65 613 692)
(to 66 65)
(from 66 47)
(projectionAssn 66 393 693)
(styleAssn 67 637)
(projectionAssn 67 615 694)
(to 68 65)
(from 68 67)
(projectionAssn 68 648 695)
(to 69 67)
(from 69 62)
(projectionAssn 69 471 696)
(styleAssn 70 637)
(projectionAssn 70 616 697)
(to 71 65)
(from 71 70)
(projectionAssn 71 652 698)
(to 72 67)
(from 72 70)
(projectionAssn 72 654 699)
(to 73 70)
(from 73 47)
(projectionAssn 73 404 700)
(to 74 49)
(from 74 46)
(projectionAssn 74 292 701)
(styleAssn 75 660)
(projectionAssn 75 618 702)
(to 76 75)
(from 76 46)
(projectionAssn 76 277 703)
(to 77 46)
(from 77 56)
(projectionAssn 77 664 704)
(to 78 70)
(from 78 56)
(projectionAssn 78 666 705)
(stereotypeAssn 457 706)
(clientAssn 457 1)
(supplierAssn 457 707)
(stereotypeAssn 458 706)
(clientAssn 458 1)
(supplierAssn 458 708)
(stereotypeAssn 459 706)
(clientAssn 459 1)
(supplierAssn 459 709)
(stereotypeAssn 521 706)
(clientAssn 521 1)
(supplierAssn 521 710)
(stereotypeAssn 577 706)
(clientAssn 577 1)
(supplierAssn 577 711)