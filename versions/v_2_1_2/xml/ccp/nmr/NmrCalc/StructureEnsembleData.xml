<?xml version="1.0"?>
<!--
#######################################################################

CCPN Data Model version 2.1.2

Autogenerated by XmlModelIo revision 1.18 on ?
  from data model element ccp.nmr.NmrCalc.StructureEnsembleData revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

StructureEnsembleData.xml: xmlmodel model for CCPN data model, MetaClass ccp.nmr.NmrCalc.StructureEnsembleData

Copyright (C) 2007 Rasmus Fogh (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Wim F. Vranken, Wayne Boucher, Tim J. Stevens, Rasmus
H. Fogh, Anne Pajon, Miguel Llinas, Eldon L. Ulrich, John L. Markley, John
Ionides and Ernest D. Laue (2005). The CCPN Data Model for NMR Spectroscopy:
Development of a Software Pipeline. Proteins 59, 687 - 696.

Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="StructureEnsembleData"
 guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
 container="www.ccpn.ac.uk_Fogh_2009-04-16-16:23:57_00001"
 isAbstract="false" isDerived="false" isImplicit="false" isLeaf="false"
 isRoot="false" isSingleton="false" partitionsChildren="false"
 visibility="public_vis">
  <documentation>StructureEnsemble data for calculations</documentation>
  <keyNames>
    <item>serial</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2009-04-16-16:23:57_00006</item>
  </supertypes>
  <taggedValues>
    <item tag="repositoryId">$Id:  $</item>
    <item tag="repositoryTag">$Name:  $</item>
  </taggedValues>


  <MetaAttribute name="ensembleId"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00044"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
   baseName="ensembleId" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>ensembleId of relevant StructureEnsemble - used in deriving link to Structures</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaOperation name="getModels"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00048"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link models</documentation>
    <target>www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00042</target>
    <codeStubs>
      <item tag="java">memops.api.Implementation.MemopsRoot memopsRoot = getRoot();
ccp.api.molecule.MolSystem.MolSystem molSystem = memopsRoot.findFirstMolSystem("code", getMolSystemCode());
ccp.api.molecule.MolStructure.StructureEnsemble ensemble = memopsRoot.findFirstStructureEnsemble("molSystem", molSystem, "ensembleId", getEnsembleId());
if (ensemble != null) {
  java.util.List&lt;java.lang.Integer&gt; modelSerials = getModelSerials();
  if (!modelSerials.isEmpty()) {
    result = new java.util.ArrayList&lt;ccp.api.molecule.MolStructure.Model&gt;();
    for (java.lang.Integer x: modelSerials) {
      ccp.api.molecule.MolStructure.Model model = ensemble.findFirstModel("serial", x);
      if (model != null) result.add(model);
    }
  } else {
    result = ensemble.sortedModels();
  }
}</item>
      <item tag="python">memopsRoot = self.root
molSystem = memopsRoot.findFirstMolSystem(code=self.molSystemCode)
ensemble = memopsRoot.findFirstStructureEnsemble(molSystem=molSystem, ensembleId=self.ensembleId)
if ensemble:
  modelSerials = self.modelSerials
  if modelSerials:
    ll = list(ensemble.findFirstModel(serial=x) for x in modelSerials)
    result = tuple(x for x in ll if x is not None)
  else:
    result = tuple(ensemble.sortedModels())
else:
  result = tuple()</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getStructureEnsemble"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00046"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link structureEnsemble</documentation>
    <target>www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00041</target>
    <codeStubs>
      <item tag="java">result = getRoot().findFirstStructureEnsemble("molSystem", getRoot().findFirstMolSystem("code", getMolSystemCode()), "ensembleId", getEnsembleId());</item>
      <item tag="python">memopsRoot = self.root
molSystem = memopsRoot.findFirstMolSystem(code=self.molSystemCode)
result = memopsRoot.findFirstStructureEnsemble(molSystem=molSystem, ensembleId=self.ensembleId)</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="modelSerials"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00045"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
   baseName="modelSerial" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="true" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>serial of MolStructure.Models linked to. If empty all Models in ensemble are used.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaRole name="models"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00042"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
   baseName="model" changeability="changeable" hicard="-1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="true" isUnique="true" locard="0"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <documentation>StructureEnsemble.Models used as data</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2007-11-23-12:00:10_00001</valueType>
  </MetaRole>

  <MetaAttribute name="molSystemCode"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00043"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
   baseName="molSystemCode" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>MolSystem code of relevant MolSystem - used in deriving link to Structures</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
  </MetaAttribute>

  <MetaOperation name="setModels"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00049"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link models</documentation>
    <target>www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00042</target>
    <codeStubs>
      <item tag="java">if ((values != null) &amp;&amp; !values.isEmpty()) {
  java.util.Set&lt;ccp.api.molecule.MolStructure.StructureEnsemble&gt; ensembles = new java.util.HashSet&lt;ccp.api.molecule.MolStructure.StructureEnsemble&gt;();
  for (ccp.api.molecule.MolStructure.Model x: values)
    ensembles.add(x.getStructureEnsemble());
  if (ensembles.size() == 1) {
    setEnsembleId(ensembles.iterator().next().getEnsembleId());
    java.util.List&lt;java.lang.Integer&gt; modelSerials = new java.util.ArrayList&lt;java.lang.Integer&gt;();
    for (ccp.api.molecule.MolStructure.Model x: values)
      modelSerials.add(x.getSerial());
    setModelSerials(modelSerials);
  } else {
    throw new memops.general.ApiException("Models are from different StructureEnsembles:" + values);
  }
} else {
  setModelSerials(new java.util.ArrayList&lt;java.lang.Integer&gt;());
  setEnsembleId(null);
}</item>
      <item tag="python">if values:
  ensembles = set(x.structureEnsemble for x in values)
  if len(ensembles) == 1:
    ensemble =  ensembles.pop()
    self.molSystemCode = ensemble.molSystem.code
    self.ensembleId = ensemble.ensembleId
    self.modelSerials = [x.serial for x in values]
  else:
    raise ApiError("Models are from different StructureEnsembles: %s" % values)
else:
  self.modelSerials = ()</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="setStructureEnsemble"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00047"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>setter for derived link structureEnsemble</documentation>
    <target>www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00041</target>
    <codeStubs>
      <item tag="java">if (value == null)
  throw new memops.general.ApiException("StructureEnsembleData.structureEnsemble can not be set to null ");
else {
  setMolSystemCode(value.getMolSystem().getCode());
  setEnsembleId(value.getEnsembleId());
}</item>
      <item tag="python">if value:
  self.molSystemCode = value.molSystem.code
  self.ensembleId = value.ensembleId
else:
  raise ApiError("StructureEnsembleData.structureEnsemble can not be set to None")</item>
    </codeStubs>
  </MetaOperation>

  <MetaRole name="structureEnsemble"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00041"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00004"
   baseName="structureEnsemble" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>StructureEnsemble used as data</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00032</valueType>
  </MetaRole>
</MetaClass>

