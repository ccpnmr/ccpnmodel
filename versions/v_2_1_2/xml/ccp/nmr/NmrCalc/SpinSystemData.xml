<?xml version="1.0"?>
<!--
#######################################################################

CCPN Data Model version 2.1.2

Autogenerated by XmlModelIo revision 1.18 on ?
  from data model element ccp.nmr.NmrCalc.SpinSystemData revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

SpinSystemData.xml: xmlmodel model for CCPN data model, MetaClass ccp.nmr.NmrCalc.SpinSystemData

Copyright (C) 2007 Rasmus Fogh (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Wim F. Vranken, Wayne Boucher, Tim J. Stevens, Rasmus
H. Fogh, Anne Pajon, Miguel Llinas, Eldon L. Ulrich, John L. Markley, John
Ionides and Ernest D. Laue (2005). The CCPN Data Model for NMR Spectroscopy:
Development of a Software Pipeline. Proteins 59, 687 - 696.

Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="SpinSystemData"
 guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00001"
 container="www.ccpn.ac.uk_Fogh_2009-04-16-16:23:57_00001"
 isAbstract="false" isDerived="false" isImplicit="false" isLeaf="false"
 isRoot="false" isSingleton="false" partitionsChildren="false"
 visibility="public_vis">
  <documentation>Nmr.SpinSystem data for calculations</documentation>
  <keyNames>
    <item>serial</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2009-04-16-16:23:57_00006</item>
  </supertypes>
  <taggedValues>
    <item tag="repositoryId">$Id:  $</item>
    <item tag="repositoryTag">$Name:  $</item>
  </taggedValues>


  <MetaOperation name="getResonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00039"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link resonanceGroups</documentation>
    <target>www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00037</target>
    <codeStubs>
      <item tag="java">result = getRun().getNmrCalcStore().getNmrProject().findFirstResonanceGroup("serial", getResonanceGroupSerial());
/* NBNB TBD redo */</item>
      <item tag="python">nmrProject = self.topObject.nmrProject
ff = nmrProject.findFirstResonanceGroup
ll = [ff(x) for x in self.resonanceGroupSerials]
result = frozenset(x for x in ll if x is not None)</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="resonanceGroupSerials"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00038"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00001"
   baseName="resonanceGroupSerial" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="true" isUnique="false"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Serial numbers of Resonance groups - used to derive actual objects.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaRole name="resonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00037"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00001"
   baseName="resonanceGroup" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Nmr.ResonanceGroups (spinSystems) used for data</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034</valueType>
  </MetaRole>

  <MetaOperation name="setResonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00040"
   container="www.ccpn.ac.uk_Fogh_2009-05-20-16:32:11_00001"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>setter for derived link resonanceGroups</documentation>
    <target>www.ccpn.ac.uk_Fogh_2009-05-20-16:32:16_00037</target>
    <codeStubs>
      <item tag="java">if (value == null)
  setResonanceGroupSerial(null);
else if (getRun().getNmrCalcStore().getNmrProject() ==
value.getNmrProject())
  setResonanceGroupSerial(value.getSerial());
else
  throw new memops.general.ApiException(value + " does not belong to NmrCalcStore.nmrProject " + getRun().getNmrCalcStore().getNmrProject());
/* NBNB TBD redo */</item>
      <item tag="python">if not values:
  self.resonanceGroupSerials = ()

else:
  nmrProject = self.topObject.nmrProject
  ll = []
  for value in values:
    if value.nmrProject is nmrProject:
      ll.append(value.serial)
    else:
      raise ApiError("%s does not belong to NmrCalcStore.nmrProject %s" % (value,nmrProject ))
  self.self.resonanceGroupSerials = ll</item>
    </codeStubs>
  </MetaOperation>
</MetaClass>

