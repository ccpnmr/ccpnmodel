<?xml version="1.0"?>
<!--
#######################################################################

CCPN Data Model version 3.0.2

Autogenerated by XmlModelIo on ?
  from data model element ccpnmr.gui.Task.GuiTask

#######################################################################
======================COPYRIGHT/LICENSE START==========================

GuiTask.xml: xmlmodel model for CCPN data model, MetaClass ccpnmr.gui.Task.GuiTask

Copyright (C) 2007  (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

A copy of this license can be found in ../../../../../../../../..//LGPL.license

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="GuiTask"
 guid="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
 container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00004"
 isAbstract="false" isDerived="false" isImplicit="false" isLeaf="false"
 isRoot="false" isSingleton="false" partitionsChildren="true"
 visibility="public_vis">
  <documentation>Task - group of modules that together accomplish a task. Serves both to store working activities, and as shareable template desciptions. You must pass in either an nmrProject or an nmrProjectName.</documentation>
  <keyNames>
    <item>nameSpace</item>
    <item>name</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00002</item>
  </supertypes>
  <constructorCodeStubs>
    <item tag="python">if self.nmrProject is None:
  self.root.override = True
  try:
    self.nmrProject = self.root.findFirstNmrProject(name=self.nmrProjectName)
  finally:
    self.root.override = False
else:
  dataDict['nmrProjectName'] = self.nmrProject.name

if self.nmrProject is not None:
  if not self.windows:
    windowStore = self.nmrProject.windowStore
    if windowStore is not None:
      windows = windowStore.sortedWindows()
      for window in windows:
        if window.guiTask is None:
          break
      else:
        # There will always be at least one window - the Main one.
        nextSerial = windows[-1].serial + 1
        window = windowStore.newWindow(title='W%s' % nextSerial)
        objectsCreated.add(window)
      window.guiTask = self</item>
  </constructorCodeStubs>

  <MetaRole name="currentGuiTask"
   guid="ccpn_automatic_memops.Implementation.MemopsRoot.currentGuiTask"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   baseName="currentGuiTask" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>current guiTask - may be reset by implementation.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013</valueType>
  </MetaRole>

  <MetaOperation name="getCurrentGuiTask"
   guid="ccpn_automatic_memops.Implementation.MemopsRoot.getCurrentGuiTask"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>Get for memops.Implementation.MemopsRoot.currentGuiTask</documentation>
    <target>ccpn_automatic_memops.Implementation.MemopsRoot.currentGuiTask</target>
    <codeStubs>
      <item tag="java">
result = _currentGuiTask;
if (result == null) {
  findFirstGuiTask();
  result = _currentGuiTask;
}
</item>
      <item tag="python">
result = dataDict.get('currentGuiTask')
if result is None:
  self.findFirstGuiTask()
  result = dataDict.get('currentGuiTask')
</item>
    </codeStubs>
  </MetaOperation>


  <MetaOperation name="activate"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00019"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   isAbstract="false" isImplicit="false" isQuery="false" opType="other"
   scope="instance_level" visibility="public_vis">
    <documentation>Connect Task to an NmrProject and its data objects and activate it. Display in passed-in window; if None make new window(s).</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00019</target>
    <codeStubs>
      <item tag="python"># Get NmrProject and validity test
if self.nmrProject:
  raise ApiError("Task %s is reconnected already" % self)
nmrProject = self.root.findFirstNmrProject(name=self.nmrProjectName)
if self.nmrProject is None:
  raise ApiError("Could not find NmrProject named %s" % self.nmrProjectName)
windowStore = nmrProject.windowStore
if windowStore is None:
  windowStore = self.root.newWindowStore(nmrProject=nmrProject)

# map windowId to windows, making new windows as necessary
windowIds = list(sorted(set(x.windowId for x in self.modules)))

windows = windowStore.sortedWindows()
nextSerial = 1
if windows:
  nextSerial = windows[-1].serial + 1

if window is None:
  #No window passed in - make all new windows
  windowMap = dict((oldId, windowStore.newWindow(title='W%s' % (nextSerial + ii)))
                   for ii,oldId in enumerate(windowIds))

else:
  # window is passed in. Empty and use this, and successive windows with higher serials
  windowMap = {}
  oldWindows = windowStore.sortedWindows()
  if window not in oldWindows:
    raise ApiError("Window %s does not match WindowStore %s" % (window, windowStore))
  oldWindows = oldWindows[oldWindows.index(window):]
  oldWindowCount = len(oldWindows)
  for ii, window in enumerate(oldWindows[:len(windowIds)]):
    window.empty()
    windowMap[windowIds[ii]] = window
  for ii,windowId in enumerate(windowIds[oldWindowCount:]):
  # We do not have enough windows = make the remainder
    windowMap[windowId] = windowStore.newWindow(title='W%s' % (nextSerial + ii))

# Reconnect project
self.root.override = True
try:
  self.nmrProject = nmrProject
  self.windows = list(windowMap.values())
  for module in self.modules:
    module.reconnect(window=windowMap[module.windowId])
except:
  # NBNB  TBD replace print statement with log message
  print ("Error connecting task %s to NmrProject %s - data may be left in an illegal state" % (self, nmrProject))
  raise
finally:
  self.root.override = False

undo = self.root._undo
if undo is not None:
   undo.newItem(self.passivate, self.activate, redoArgs=(window,))</item>
    </codeStubs>


    <MetaParameter name="window"
     guid="www.ccpn.ac.uk_Fogh_2014-11-10-13:40:02_00001"
     container="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00019"
     direction="in_dir" hicard="1" isImplicit="false" isOrdered="false"
     isUnique="true" locard="1">
      <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00001</valueType>
    </MetaParameter>
  </MetaOperation>

  <MetaOperation name="adaptedCopy"
   guid="www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00003"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   isAbstract="false" isImplicit="false" isQuery="false" opType="other"
   scope="instance_level" visibility="public_vis">
    <documentation>Export copy of task to new NmrProject. The functions assumes that data do not match, and will delete or use heuristics to match to the new project. NBNB TBD Window is optional, nmrProject is mandatory.
Display in passed-in window; if None make new window(s).</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00003</target>
    <codeStubs>
      <item tag="python">params = {'nmrProject':nmrProject}
if name is not None:
  params['name'] = name
if nameSpace is not None:
    params['nameSpace'] = nameSpace

result = self.root.newTask(**params)
if self.details:
  result.details = 'COPY: ' + self.details

for module in self.modules:
  module.copyToTask(result), nmrProject

for axisPositionGroup in self.sortedAxisPositionGroups():
  newGroup = result.newAxisPositionGroup()
  axes = [result.findFirstModule(name=x.spectrumDisplay.name).findFirstAxis(code=x.code)
              for x in axisPositionGroup.axes]
  newGroup.axes = axes

for axisWidthGroup in self.sortedAxisWidthGroups():
  newGroup = result.newAxisWidthGroup()
  axes = [result.findFirstModule(name=x.spectrumDisplay.name).findFirstAxis(code=x.code)
              for x in axisWidthGroup.axes]
  newGroup.axes = axes

result.activate(window)</item>
    </codeStubs>


    <MetaParameter name="name"
     guid="www.ccpn.ac.uk_Fogh_2014-11-11-18:25:59_00004"
     container="www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00003"
     direction="in_dir" hicard="1" isImplicit="false" isOrdered="false"
     isUnique="true" locard="1">
      <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
    </MetaParameter>

    <MetaParameter name="nameSpace"
     guid="www.ccpn.ac.uk_Fogh_2014-11-11-18:25:59_00003"
     container="www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00003"
     direction="in_dir" hicard="1" isImplicit="false" isOrdered="false"
     isUnique="true" locard="1">
      <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
    </MetaParameter>

    <MetaParameter name="nmrProject"
     guid="www.ccpn.ac.uk_Fogh_2014-11-10-13:48:28_00001"
     container="www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00003"
     direction="in_dir" hicard="1" isImplicit="false" isOrdered="false"
     isUnique="true" locard="1">
      <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-18:19:48_00001</valueType>
    </MetaParameter>

    <MetaParameter name="result"
     guid="www.ccpn.ac.uk_Fogh_2014-11-10-13:48:28_00003"
     container="www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00003"
     direction="return_dir" hicard="1" isImplicit="false" isOrdered="false"
     isUnique="true" locard="1">
      <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013</valueType>
    </MetaParameter>

    <MetaParameter name="window"
     guid="www.ccpn.ac.uk_Fogh_2014-11-10-13:48:28_00002"
     container="www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00003"
     direction="in_dir" hicard="1" isImplicit="false" isOrdered="false"
     isUnique="true" locard="1">
      <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00001</valueType>
    </MetaParameter>
  </MetaOperation>

  <MetaRole name="axisPositionGroups"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:42:29_00007"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="axisPositionGroup" changeability="changeable"
   forceUndoNotify="true" hicard="-1" hierarchy="child" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2014-11-04-17:42:29_00008</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-11-04-17:39:35_00002</valueType>
  </MetaRole>

  <MetaRole name="axisWidthGroups"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00012"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="axisWidthGroup" changeability="changeable" forceUndoNotify="true"
   hicard="-1" hierarchy="child" isAbstract="false" isAutomatic="false"
   isDerived="false" isImplementation="false" isImplicit="false"
   isOrdered="false" isUnique="true" locard="0" noDeleteIfSet="false"
   partitionsChildren="false" scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00011</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-11-04-17:39:35_00003</valueType>
  </MetaRole>

  <MetaOperation name="clone"
   guid="www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00002"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   isAbstract="false" isImplicit="false" isQuery="false" opType="other"
   scope="instance_level" visibility="public_vis">
    <documentation>Make precise, renamed copy of task - disconnecting if already connected</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00002</target>
    <codeStubs>
      <item tag="python">from ccpnmodel.ccpncore.lib import CopyData
if self.nmrProject is not None:
  reactivate = True
  self.passivate()
else:
  reactivate = False
result = CopyData.copySubTree(self, self.root, topObjectParameters={'nameSpace':nameSpace, 'name':name})
if reactivate:
  self.activate()</item>
    </codeStubs>


    <MetaParameter name="name"
     guid="www.ccpn.ac.uk_Fogh_2014-11-27-16:37:56_00001"
     container="www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00002"
     direction="in_dir" hicard="1" isImplicit="false" isOrdered="false"
     isUnique="true" locard="1">
      <documentation>Name of new GuiTask</documentation>
      <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
    </MetaParameter>

    <MetaParameter name="nameSpace"
     guid="www.ccpn.ac.uk_Fogh_2014-11-27-16:37:56_00002"
     container="www.ccpn.ac.uk_Fogh_2014-11-10-13:47:47_00002"
     defaultValue="user" direction="in_dir" hicard="1" isImplicit="false"
     isOrdered="false" isUnique="true" locard="0">
      <documentation>nameSpace for new GuiTask</documentation>
      <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
    </MetaParameter>
  </MetaOperation>

  <MetaAttribute name="details"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00017"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="details" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Free text, for notes, explanatory comments, etc.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00035</valueType>
  </MetaAttribute>

  <MetaRole name="marks"
   guid="www.ccpn.ac.uk_Fogh_2014-11-11-18:25:59_00002"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="mark" changeability="changeable" forceUndoNotify="true" hicard="-1"
   hierarchy="child" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2014-11-11-18:25:59_00001</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00002</valueType>
  </MetaRole>

  <MetaRole name="guiTasks"
   guid="ccpn_automatic_memops.Implementation.MemopsRoot.guiTask"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   baseName="guiTask" changeability="changeable" forceUndoNotify="true"
   hicard="-1" hierarchy="child" isAbstract="false" isAutomatic="false"
   isDerived="false" isImplementation="false" isImplicit="false"
   isOrdered="false" isUnique="true" locard="0" noDeleteIfSet="false"
   partitionsChildren="false" scope="instance_level" visibility="public_vis">
    <documentation>child link</documentation>
    <otherRole>ccpn_automatic_ccpnmr.gui.Task.GuiTask.memopsRoot</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013</valueType>
  </MetaRole>

  <MetaRole name="memopsRoot"
   guid="ccpn_automatic_ccpnmr.gui.Task.GuiTask.memopsRoot"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   aggregation="composite" baseName="memopsRoot" changeability="frozen"
   forceUndoNotify="true" hicard="1" hierarchy="parent" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <documentation>parent link</documentation>
    <otherRole>ccpn_automatic_memops.Implementation.MemopsRoot.guiTask</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047</valueType>
  </MetaRole>

  <MetaRole name="modules"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00008"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="module" changeability="changeable" forceUndoNotify="true"
   hicard="-1" hierarchy="child" isAbstract="false" isAutomatic="false"
   isDerived="false" isImplementation="false" isImplicit="false"
   isOrdered="false" isUnique="true" locard="0" noDeleteIfSet="false"
   partitionsChildren="false" scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00007</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00006</valueType>
  </MetaRole>

  <MetaAttribute name="name"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00014"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="name" changeability="frozen" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Name of Task - Together with namespace identifies Task.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
  </MetaAttribute>

  <MetaAttribute name="nameSpace"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00013"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="nameSpace" changeability="frozen" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Name space of Task.Groups tasks by origin. Only tasks in namespace 'user' are modifiable, and can be connected to actual data.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
    <defaultValue>
      <item>user</item>
    </defaultValue>
  </MetaAttribute>

  <MetaRole name="guiTasks"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00009"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-18:19:48_00001"
   baseName="guiTask" changeability="changeable" forceUndoNotify="true"
   hicard="-1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="true"
   scope="instance_level" visibility="public_vis">
    <documentation>Gui Tasks active on NmrProject</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00010</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013</valueType>
  </MetaRole>

  <MetaRole name="nmrProject"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00010"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="nmrProject" changeability="frozen" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="true"
   scope="instance_level" visibility="public_vis">
    <documentation>NmrProject that task is active in. Tasks with no NmrProject attached are not active.</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00009</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-18:19:48_00001</valueType>
  </MetaRole>

  <MetaAttribute name="nmrProjectName"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00016"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="nmrProjectName" changeability="frozen" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>NmrProject name. Serves to store link to NmrProject while task is disconnected.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00033</valueType>
  </MetaAttribute>

  <MetaOperation name="passivate"
   guid="www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00021"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   isAbstract="false" isImplicit="false" isQuery="false" opType="other"
   scope="instance_level" visibility="public_vis">
    <documentation>Disconnect task from NmrProject and deactivate it.</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-11-04-17:46:55_00021</target>
    <codeStubs>
      <item tag="python">self.root.override = True
try:
  self.nmrProjectName = self.nmrProject.name 
  self.nmrProject = None
  for module in self.modules:
    module.disconnect()
  self.windows = ()
finally:
  self.root.override = False

undo = self.root._undo
if undo is not None:
   undo.newItem(self.activate, self.passivate)</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="pruneSpectrumViews"
   guid="www.ccpn.ac.uk_Fogh_2014-11-10-13:48:28_00004"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   isAbstract="false" isImplicit="false" isQuery="false" opType="other"
   scope="instance_level" visibility="public_vis">
    <documentation>Remove  SpectrumViews that do not match NmrProject- all other dangling links are removed by disconnect,reconnect</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-11-10-13:48:28_00004</target>
    <codeStubs>
      <item tag="python">for module in self.modules:
  if hasattr(module, 'spectrumViews'):
    for spectrumView in module.spectrumViews:
      experiment = self.nmrProject.findFirstExperiment(name=module.experimentName)
      dataSource = None
      if experiment is not None:
        dataSource = experiment.findFirstDataSource(serial=spectrumView.dataSourceSerial)
      if dataSource is None:
        spectrumView.delete()</item>
    </codeStubs>
  </MetaOperation>

  <MetaRole name="guiTask"
   guid="www.ccpn.ac.uk_Fogh_2015-02-10-12:18:02_00001"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00001"
   baseName="guiTask" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="true"
   scope="instance_level" visibility="public_vis">
    <documentation>GuiTask diaplayed in a window </documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2015-02-10-12:18:02_00002</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013</valueType>
  </MetaRole>

  <MetaRole name="windows"
   guid="www.ccpn.ac.uk_Fogh_2015-02-10-12:18:02_00002"
   container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00013"
   baseName="window" changeability="changeable" forceUndoNotify="true"
   hicard="-1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="true"
   scope="instance_level" visibility="public_vis">
    <documentation>Wndows displaying GuiTAsk</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2015-02-10-12:18:02_00001</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00001</valueType>
  </MetaRole>
</MetaClass>

