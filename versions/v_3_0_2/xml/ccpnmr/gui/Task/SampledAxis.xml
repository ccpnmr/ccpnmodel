<?xml version="1.0"?>
<!--
#######################################################################

CCPN Data Model version 3.0.2

Autogenerated by XmlModelIo on ?
  from data model element ccpnmr.gui.Task.SampledAxis

#######################################################################
======================COPYRIGHT/LICENSE START==========================

SampledAxis.xml: xmlmodel model for CCPN data model, MetaClass ccpnmr.gui.Task.SampledAxis

Copyright (C) 2007  (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

A copy of this license can be found in ../../../../<topdirectory>/LGPL.license

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="SampledAxis"
 guid="www.ccpn.ac.uk_Fogh_2014-11-06-10:52:33_00004"
 container="www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00004"
 isAbstract="false" isDerived="false" isImplicit="false" isLeaf="false"
 isRoot="false" isSingleton="false" partitionsChildren="false"
 visibility="public_vis">
  <keyNames>
    <item>code</item>
    <item>stripSerial</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2014-10-31-16:36:26_00005</item>
  </supertypes>
  <constructorCodeStubs>
    <item tag="python">if self.resonances:
  self.resonanceSerials = [x.serial for x in self.resonances]
else:
  nmrProject = self.topObject.nmrProject
  if nmrProject is not None:
    ll = [nmrProject.findFirstResonance(serial=x) for x in self.resonanceSerials]
    self.resonances = [x for x in ll if x is not None]</item>
  </constructorCodeStubs>
  <destructorCodeStubs>
    <item tag="python">spectrumDisplay = self.spectrumDisplay
strip = spectrumDisplay.findFirstStrip(serial=self.stripSerial)
if not (spectrumDisplay in objsToBeDeleted or (strip and strip in objsToBeDeleted)):
  raise ApiError("Axes cannot be deleted independently")</item>
  </destructorCodeStubs>
  <postConstructorCodeStubs>
    <item tag="python">stripSerial = self.stripSerial
if stripSerial:
  strip = self.spectrumDisplay.findFirstStrip(serial=stripSerial)
  if strip:
    sa = strip.newStripAxis(axis=self)
    objectsCreated.add(sa)
else:
  for strip in self.spectrumDisplay.strips:
    sa = strip.newStripAxis(axis=self)
    objectsCreated.add(sa)</item>
  </postConstructorCodeStubs>


  <MetaAttribute name="code"
   guid="www.ccpn.ac.uk_Fogh_2014-11-06-10:53:15_00006"
   container="www.ccpn.ac.uk_Fogh_2014-11-06-10:52:33_00004"
   baseName="code" changeability="frozen" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>

    <!-- Start constraints for <MetaAttribute: ccpnmr.gui.Task.SampledAxis.code>: -->
    <MetaConstraint name="value_axis_code_starts_with_lower_case"
     guid="www.ccpn.ac.uk_Fogh_2014-11-06-10:53:15_00007"
     container="www.ccpn.ac.uk_Fogh_2014-11-06-10:53:15_00006"
     isImplicit="false">
      <codeStubs>
        <item tag="python">value[0].islower()</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: ccpnmr.gui.Task.SampledAxis.code>: -->
  </MetaAttribute>

  <MetaAttribute name="unit"
   guid="www.ccpn.ac.uk_Fogh_2014-11-06-10:53:15_00008"
   container="www.ccpn.ac.uk_Fogh_2014-11-06-10:52:33_00004"
   baseName="unit" changeability="changeable" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
  </MetaAttribute>
</MetaClass>

