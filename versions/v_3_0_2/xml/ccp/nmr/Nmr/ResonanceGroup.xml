<?xml version="1.0"?>
<!--
#######################################################################

CCPN Data Model version 3.0.2

Autogenerated by XmlModelIo on ?
  from data model element ccp.nmr.Nmr.ResonanceGroup

#######################################################################
======================COPYRIGHT/LICENSE START==========================

ResonanceGroup.xml: xmlmodel model for CCPN data model, MetaClass ccp.nmr.Nmr.ResonanceGroup

Copyright (C) 2007  (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

A copy of this license can be found in ../../../../<topdirectory>/LGPL.license

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="ResonanceGroup"
 guid="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
 container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00006"
 isAbstract="false" isDerived="false" isImplicit="false" isLeaf="false"
 isRoot="false" isSingleton="false" partitionsChildren="false"
 visibility="public_vis">
  <documentation>Group of Resonances belonging within the same Residue. Serves to organise Resonances that have not yet been assigned, and to set Residue types, (sequential) neighbours, Residues and their probabilities for an entire group without necesarily assigning the individual Resonances. </documentation>
  <keyNames>
    <item>serial</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00005</item>
  </supertypes>
  <destructorCodeStubs>
    <item tag="python">nmrChain = self.directNmrChain
if nmrChain and nmrChain.isConnected:
  stretch = nmrChain.mainResonanceGroups
  if self not in (stretch[0], stretch[-1]):
    raise ValueError("ResonanceGroup in the middle of a connected NmrChain cannot be deleted")
objsToBeChecked.extend(self.offsetResonanceGroups)

# NBNB TBD the following should not be necessary once we have updated the model and made Resonance.resonanceGroup mandatory, but we cannot do that yet.
objsToBeChecked.extend(self.resonances)</item>
  </destructorCodeStubs>

  <!-- Start constraints for <MetaClass: ccp.nmr.Nmr.ResonanceGroup>: -->
  <MetaConstraint name="nmrChain_and_sequenceCode_form_unique_key_for_nonoffset_resonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2015-04-27-11:10:21_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isImplicit="false">
    <codeStubs>
      <item tag="python">(self.mainGroupSerial is not None) or (self.seqCode is None and self.seqInsertCode is None) or all(x is self for x in self.nmrProject.findAllResonanceGroups(directNmrChain=self.directNmrChain, seqCode=self.seqCode, seqInsertCode=self.seqInsertCode, mainGroupSerial=None))</item>
    </codeStubs>
  </MetaConstraint>
  <MetaConstraint name="offset_ResonanceGroups_must_be_unique_within_main_ResonanceGroup"
   guid="www.ccpn.ac.uk_Fogh_2015-12-04-19:34:58_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isImplicit="false">
    <codeStubs>
      <item tag="python">self.mainGroupSerial is None or not any(x for x in self.nmrProject.findAllResonanceGroups(mainGroupSerial=self.mainGroupSerial, relativeOffset=self.relativeOffset) if x is not self)</item>
    </codeStubs>
  </MetaConstraint>
  <!-- End constraints for <MetaClass: ccp.nmr.Nmr.ResonanceGroup>: -->


  <MetaRole name="assignedResidue"
   guid="www.ccpn.ac.uk_Fogh_2015-07-08-14:08:26_00003"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="assignedResidue" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Residue that ResonanceGroup is assigned to.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00030</valueType>
  </MetaRole>

  <MetaAttribute name="ccpCode"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00031"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="ccpCode" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>ccpCode ('threeLetterCode') identifying the ChemComp giving the type of the ResonanceGroup. Used as a key in deriving the link chemComp.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2007-09-12-18:31:28_00003</valueType>
  </MetaAttribute>

  <MetaAttribute name="chainSerial"
   guid="www.ccpn.ac.uk_Fogh_2015-04-27-10:49:34_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="chainSerial" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>OBSOLETE.  NOT USED serial of connected NmrChain</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
    <defaultValue>
      <item>1</item>
    </defaultValue>
  </MetaAttribute>

  <MetaRole name="resonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00023"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00024"
   baseName="resonanceGroup" changeability="changeable" forceUndoNotify="true"
   hicard="-1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>ResonanceGroups that may be relevant to Chain</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00024</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034</valueType>
  </MetaRole>

  <MetaRole name="chains"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00024"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="chain" changeability="changeable" forceUndoNotify="true"
   hicard="-1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Chains to which ResonanceGroup may belong</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00023</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00024</valueType>
  </MetaRole>

  <MetaRole name="chemComp"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00025"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="chemComp" changeability="frozen" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>ChemComp corresponding to ResonanceGroup</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:51_00047</valueType>
  </MetaRole>

  <MetaRole name="chemCompVar"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00026"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="chemCompVar" changeability="frozen" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>ChemCompVar corresponding to ResonanceGroup</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:52_00005</valueType>
  </MetaRole>

  <MetaAttribute name="descriptor"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:11_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="descriptor" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>String describing the precise form of the ChemCompVar giving the type of the ResonanceGroup. Used as a key in deriving the link chemCompVar.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00033</valueType>
  </MetaAttribute>

  <MetaAttribute name="details"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:11_00004"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="details" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Free text, for notes, explanatory comments, etc.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2009-01-23-10:52:32_00001</valueType>
  </MetaAttribute>

  <MetaRole name="directNmrChain"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="directNmrChain" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>NmrChain directly linked to ResonanceGroup (i.e. not as a sateilite of another ResonanceGroup).
NB The NmrChain with code == '@'-' is the default NmrChain, and ResonanceGroup.directNmrChain will revert to this value if 'unset'.</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00002</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001</valueType>

    <!-- Start constraints for <MetaRole: ccp.nmr.Nmr.ResonanceGroup.directNmrChain>: -->
    <MetaConstraint name="ResonanceGoups_with_offset_cannot_have_directNmrChain"
     guid="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:46_00001"
     container="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00001"
     isImplicit="false">
      <codeStubs>
        <item tag="python">(self.relativeOffset is None) != (value is None)</item>
      </codeStubs>
    </MetaConstraint>
    <MetaConstraint name="sequenceCode_is_unique_within_nmrChain"
     guid="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:46_00002"
     container="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00001"
     isImplicit="false">
      <codeStubs>
        <item tag="python">not (value and any(x for x in value.mainResonanceGroups if x.sequenceCode == self.sequenceCode and x is not self))</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaRole: ccp.nmr.Nmr.ResonanceGroup.directNmrChain>: -->
  </MetaRole>

  <MetaRole name="fromResonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:11_00009"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="fromResonanceGroup" changeability="changeable"
   forceUndoNotify="true" hicard="-1" isAbstract="false" isAutomatic="false"
   isDerived="false" isImplementation="false" isImplicit="false"
   isOrdered="false" isUnique="true" locard="0" noDeleteIfSet="false"
   partitionsChildren="false" scope="instance_level" visibility="public_vis">
    <documentation>ResonanceGroupProbs describing linking probabilities to this Resonance</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:11_00010</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00035</valueType>
  </MetaRole>

  <MetaOperation name="getAssignedResidue"
   guid="www.ccpn.ac.uk_Fogh_2015-07-08-14:08:27_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link assignedResidue</documentation>
    <target>www.ccpn.ac.uk_Fogh_2015-07-08-14:08:26_00003</target>
    <codeStubs>
      <item tag="python">result = None
chain = self.nmrChain.chain
if chain is not None:
  result = chain.findFirstResidue(seqCode=self.seqCode, seqInsertCode=self.seqInsertCode  or ' ', code3Letter=self.residueType)</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getChemComp"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:11_00005"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link chemComp</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00025</target>
    <codeStubs>
      <item tag="java">java.lang.String molType = getMolType();
java.lang.String ccpCode = getCcpCode();

if ((molType == null) || (ccpCode == null))
  result = null;
else
  result = getRoot().findFirstChemComp("molType", molType, "ccpCode", ccpCode);</item>
      <item tag="python">molType = self.molType
ccpCode = self.ccpCode
if molType is None or ccpCode is None:
  result = None
else:
  result = self.root.findFirstChemComp(molType=molType, ccpCode=ccpCode)</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getChemCompVar"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:11_00007"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link chemCompVar</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00026</target>
    <codeStubs>
      <item tag="java">java.lang.String molType = getMolType();
java.lang.String ccpCode = getCcpCode();

if ((molType == null) || (ccpCode == null))
  result = null;
else {
  java.util.List&lt;java.lang.Object&gt; keys = memops.universal.Util.argsToList((java.lang.Object) molType, ccpCode, getLinking(), getDescriptor());
  result = ccp.api.molecule.ChemComp.ChemCompVar.getByKey(getRoot(), keys);
}</item>
      <item tag="python">molType = self.molType
ccpCode = self.ccpCode
if molType is None or ccpCode is None:
  result = None
else:
  result = ccpnmodel.ccpncore.api.ccp.molecule.ChemComp.ChemCompVar.getByKey(self.root, (molType, ccpCode, self.linking, self.descriptor))</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getMainResonanceGroup"
   guid="www.ccpn.ac.uk_Fogh_2015-04-24-18:25:48_00003"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link mainResonanceGroup</documentation>
    <target>www.ccpn.ac.uk_Fogh_2016-01-06-14:18:45_00001</target>
    <codeStubs>
      <item tag="python">key = self.mainGroupSerial 
if key is None:
  result = self
else:
  result = self.nmrProject.findFirstResonanceGroup(serial=key)</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getNmrChain"
   guid="www.ccpn.ac.uk_Fogh_2015-04-27-10:49:34_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link nmrChain</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00001</target>
    <codeStubs>
      <item tag="python">result = self.directNmrChain
if result is None:
  mainGroup = self.mainResonanceGroup
  if mainGroup is not None:
    result = mainGroup.directNmrChain
if result is None:
  # We should never get here, but just in case
  result = self.nmrProject.findFirstNmrChain(code='@-')</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getOffsetResonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2015-04-24-18:25:48_00004"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link offsetResonanceGroups</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-08-01-13:41:41_00003</target>
    <codeStubs>
      <item tag="python">ll = [(x.relativeOffset, x) for x in self.nmrProject.findAllResonanceGroups(mainGroupSerial=self.serial) if x.relativeOffset is not None]
result = [tt[1] for tt in sorted(ll)]</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getSequenceCode"
   guid="www.ccpn.ac.uk_Fogh_2014-10-24-16:26:38_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>geter for derived attribute sequenceCode</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-10-24-16:26:38_00001</target>
    <codeStubs>
      <item tag="java">/* */</item>
      <item tag="python">mainGroupSerial = self.mainGroupSerial
if mainGroupSerial is None:
  # Main ResonanceGroup
  seqCode = self.seqCode
  seqInsertCode = (self.seqInsertCode or '').strip()
  if seqCode is None and not seqInsertCode:
    result = '@%s' % self.serial
  else:
    if seqCode is None:
      seqCode = ''
    result = '%s%s' %  (seqCode, seqInsertCode)
else:
  mainGroup = self.nmrProject.findFirstResonanceGroup(serial=mainGroupSerial)
  if mainGroup is None:
    self.root._logger.warning("ResonanceGroup @%s is satellite of non-existent ResonanceGroup serial=%s. Reset sequenceCode to correct value." % (self.serial, mainGroupSerial))
    result = '@%s' % self.serial
  else:
    offset = self.relativeOffset
    if offset is None:
      self.root._logger.warning("ResonanceGroup @%s is satellite of ResonanceGroup %s%s. but has no relativeOffset, Reset sequenceCode to correct value." % (self.serial, seqCode, seqInsertCode))
      result = '@%s' % self.serial
    else:
      result = '%s%+d' % (mainGroup.sequenceCode, offset)</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="linking"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:11_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="linking" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>String describing the linking of the ChemComp giving the type of the ResonanceGroup. Used as a key in deriving the link chemCompVar.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:52_00025</valueType>
  </MetaAttribute>

  <MetaAttribute name="mainGroupSerial"
   guid="www.ccpn.ac.uk_Fogh_2015-04-24-18:25:48_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="mainGroupSerial" changeability="frozen" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Serial number of corresponding main ResonanceGroup, for satellite resonance groups. </documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00001</valueType>
  </MetaAttribute>

  <MetaRole name="mainResonanceGroup"
   guid="www.ccpn.ac.uk_Fogh_2016-01-06-14:18:45_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="mainResonanceGroup" changeability="frozen" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>main  resonanceGroup, for ResonaceGroups that are defined as satellites to another group. For non-satellites, mainResonanceGroup is self.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034</valueType>
  </MetaRole>

  <MetaAttribute name="molType"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00029"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="molType" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>String describing the molecule type of the ChemComp giving the type of the ResonanceGroup. Used as a key in deriving the link chemComp.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:52_00024</valueType>
  </MetaAttribute>

  <MetaAttribute name="name"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00028"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="name" changeability="changeable" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Name of ResonanceGroup. Freely modifiable.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00033</valueType>
  </MetaAttribute>

  <MetaRole name="nmrChain"
   guid="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="nmrChain" changeability="frozen" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>NmrChain that contains ResonanceGroup</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00002</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001</valueType>
  </MetaRole>

  <MetaRole name="nmrProject"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:22:33_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   aggregation="composite" baseName="nmrProject" changeability="frozen"
   forceUndoNotify="true" hicard="1" hierarchy="parent" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:22:33_00002</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-18:19:48_00001</valueType>
  </MetaRole>

  <MetaRole name="offsetResonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2014-08-01-13:41:41_00003"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="offsetResonanceGroup" changeability="frozen" forceUndoNotify="true"
   hicard="-1" isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="true" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Satellite resonance groups, defined by their relationship to the main group, as defined by the offset parameter (+0, +1, -2, ...), sorted by increasing offset</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034</valueType>
  </MetaRole>

  <MetaAttribute name="relativeOffset"
   guid="www.ccpn.ac.uk_Fogh_2014-08-01-13:41:41_00006"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="relativeOffset" changeability="frozen" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Offset of satellite ResonanceGroup relative to main group - part of sequenceCode. Not settable individually, only by setting sequenceCode</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>

    <!-- Start constraints for <MetaAttribute: ccp.nmr.Nmr.ResonanceGroup.relativeOffset>: -->
    <MetaConstraint name="offset_only_set_for_satellite_ResonanceGroups"
     guid="www.ccpn.ac.uk_Fogh_2015-11-27-15:09:32_00006"
     container="www.ccpn.ac.uk_Fogh_2014-08-01-13:41:41_00006"
     isImplicit="false">
      <codeStubs>
        <item tag="python">(value is None) == (self.mainResonanceGroup is self)</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: ccp.nmr.Nmr.ResonanceGroup.relativeOffset>: -->
  </MetaAttribute>

  <MetaRole name="resonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:32_00039"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00030"
   baseName="resonanceGroup" changeability="changeable" forceUndoNotify="true"
   hicard="-1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>ResonanceGroups that are definitely assigned to this residue. OBSOLETE. TO BE REMOVED</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:32_00038</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034</valueType>
  </MetaRole>

  <MetaRole name="residue"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:32_00038"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="residue" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Residue to which ResonanceGroup definitely belongs. In case of conflict, this link overrides conflicting ResidueType or Residue probabilities. OBSOLETE. TO BE REMOVED</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:32_00039</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00030</valueType>

    <!-- Start constraints for <MetaRole: ccp.nmr.Nmr.ResonanceGroup.residue>: -->
    <MetaConstraint name="residue_consistent_with_chemComp"
     guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:32_00040"
     container="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:32_00038"
     isImplicit="false">
      <codeStubs>
        <item tag="java">(self.getChemComp() == null) || (self.getChemComp() == other.getMolResidue().getChemComp())</item>
        <item tag="python">cc = self.chemComp
isValid = (cc is None or cc is value.molResidue.chemComp)
</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaRole: ccp.nmr.Nmr.ResonanceGroup.residue>: -->
  </MetaRole>

  <MetaRole name="residueProbs"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00020"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="residueProb" changeability="changeable" forceUndoNotify="true"
   hicard="-1" hierarchy="child" isAbstract="false" isAutomatic="false"
   isDerived="false" isImplementation="false" isImplicit="false"
   isOrdered="false" isUnique="true" locard="0" noDeleteIfSet="false"
   partitionsChildren="false" scope="instance_level" visibility="public_vis">
    <documentation>ResidueProbs describing residues that probably correspond to the ResonanceGroup.</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00019</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00031</valueType>
  </MetaRole>

  <MetaAttribute name="residueType"
   guid="www.ccpn.ac.uk_Fogh_2014-08-01-13:41:41_00005"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="residueType" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Residue type (three-letter-code) that defines the assignment of the Resonancegroup. NB May be set to more than three letters</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>

    <!-- Start constraints for <MetaAttribute: ccp.nmr.Nmr.ResonanceGroup.residueType>: -->
    <MetaConstraint name="residuetype_consistent_with_assigned_residue"
     guid="www.ccpn.ac.uk_Fogh_2015-07-09-20:19:53_00002"
     container="www.ccpn.ac.uk_Fogh_2014-08-01-13:41:41_00005"
     isImplicit="false">
      <codeStubs>
        <item tag="python">rr = self.assignedResidue
isValid = (rr is None or value == rr.code3Letter)
</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: ccp.nmr.Nmr.ResonanceGroup.residueType>: -->
  </MetaAttribute>

  <MetaRole name="residueTypeProbs"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00016"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="residueTypeProb" changeability="changeable" forceUndoNotify="true"
   hicard="-1" hierarchy="child" isAbstract="false" isAutomatic="false"
   isDerived="false" isImplementation="false" isImplicit="false"
   isOrdered="false" isUnique="true" locard="0" noDeleteIfSet="false"
   partitionsChildren="false" scope="instance_level" visibility="public_vis">
    <documentation>ResidueTypeProbs describing probable ChemComp types of ResonanceGroup</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00015</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00032</valueType>
  </MetaRole>

  <MetaRole name="resonanceGroupProbs"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00018"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="resonanceGroupProb" changeability="changeable"
   forceUndoNotify="true" hicard="-1" hierarchy="child" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <documentation>ResonanceGroupProbs describing probable links from (owned by) this ResonanceGroup.</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00017</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00035</valueType>
  </MetaRole>

  <MetaRole name="resonances"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:09_00052"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="resonance" changeability="changeable" forceUndoNotify="true"
   hicard="-1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Resonances belonging to ResonanceGroup. This link overrides any conflicting ResonanceProbs.</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00001</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00033</valueType>
  </MetaRole>

  <MetaAttribute name="secStrucCode"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:11_00003"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="secStrucCode" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Code for secondary structure assigned to ResonanceGroup.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00053</valueType>
  </MetaAttribute>

  <MetaAttribute name="seqCode"
   guid="www.ccpn.ac.uk_Fogh_2014-09-09-15:47:03_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="seqCode" changeability="frozen" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Author sequence identifier - part of sequenceCode. Not settable individually, only by setting sequenceCode</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaAttribute name="seqInsertCode"
   guid="www.ccpn.ac.uk_Fogh_2014-09-09-15:47:03_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="seqInsertCode" changeability="frozen" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>sequence insert code. NBNB TBD Change data type so the attribute cannot contain whitespace or start with a digit.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00033</valueType>

    <!-- Start constraints for <MetaAttribute: ccp.nmr.Nmr.ResonanceGroup.seqInsertCode>: -->
    <MetaConstraint name="no_whitespace_in_seqInsertCode"
     guid="www.ccpn.ac.uk_Fogh_2015-12-06-16:18:12_00001"
     container="www.ccpn.ac.uk_Fogh_2014-09-09-15:47:03_00002"
     isImplicit="false">
      <codeStubs>
        <item tag="python">not (value and  any(x.isspace() for x in value))</item>
      </codeStubs>
    </MetaConstraint>
    <MetaConstraint name="seqInsertCode_may_not_start_with_a_digit"
     guid="www.ccpn.ac.uk_Fogh_2015-12-06-16:18:12_00002"
     container="www.ccpn.ac.uk_Fogh_2014-09-09-15:47:03_00002"
     isImplicit="false">
      <codeStubs>
        <item tag="python">not (value and  value[0].isdigit())</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: ccp.nmr.Nmr.ResonanceGroup.seqInsertCode>: -->
  </MetaAttribute>

  <MetaAttribute name="sequenceCode"
   guid="www.ccpn.ac.uk_Fogh_2014-10-24-16:26:38_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="sequenceCode" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Sequence code.Unique identifier for a ResonanceGroup within an NmrChain, of the form str(seqCode) + seqInsertCode + '+str(relativeOffset)' / '-str(relativeOffset)'. If either attribute is None this part of the derivation is omitted. If sequenceCode is set to None the value is set to a unique string derived from the ResonanceGroup.serial. If relativeOffset is not None, the ResonanceGroup is the satellite of another group, identified by the preceding parts of the sequenceCode, and stored using hte mainGroupSerial.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
  </MetaAttribute>

  <MetaAttribute name="serial"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00027"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   baseName="serial" changeability="frozen" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="true" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Serial number of object. Serves as object main key. Serial numbers of deleted objects are not re-used. Serial numbers can only be set by the implementation. Values are in practice always positive, since negative values are interpreted as a signal to set the next free serial</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaOperation name="setAssignedResidue"
   guid="www.ccpn.ac.uk_Fogh_2015-07-08-14:08:27_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>setter for derived link assignedResidue</documentation>
    <target>www.ccpn.ac.uk_Fogh_2015-07-08-14:08:26_00003</target>
    <codeStubs>
      <item tag="python">if value is None:
  self.sequenceCode = None
  return

else:
  chainCode = value.chain.code
  nmrProject = self.nmrProject
  seqCode = value.seqCode 
  seqInsertCode = value.seqInsertCode.strip() or None
  residueType = value.code3Letter
  oldSeqCode = self.seqCode 
  oldSeqInsertCode = self.seqInsertCode
  oldResidueType = self.residueType
  oldRelativeOffset = self.relativeOffset
  directNmrChain = nmrProject.findFirstNmrChain(code=chainCode)

  if directNmrChain is None:
    directNmrChain = nmrProject.newNmrChain(code=chainCode)
  else:
    oldSelf = directNmrChain.findFirstResonanceGroup(seqCode=seqCode, seqInsertCode=seqInsertCode, relativeOffset=None)
    if oldSelf is not None:
      raise ValueError("Residue %s.%s.%s is already assigned" % (chainCode, seqCode, seqInsertCode or ''))
dataDict['seqCode'] = seqCode
dataDict['seqInsertCode'] = seqInsertCode
dataDict['relativeOffset'] = None
dataDict['residueType'] = residueType
try:
  self.directNmrChain = directNmrChain
except:
  dataDict['seqCode'] = oldSeqCode
  dataDict['seqInsertCode'] = oldSeqInsertCode
  dataDict['relativeOffset'] = oldRelativeOffset
  dataDict['residueType'] = oldResidueType
  raise</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="setDirectNmrChain"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-09:49:39_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>custom setter for direct NmrChain, implementing special restrictions</documentation>
    <target>www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00001</target>
    <codeStubs>
      <item tag="python">if currentValue is not None:
  stretch = currentValue.__dict__['mainResonanceGroups']
  if currentValue.isConnected:
    if self not in (stretch[0], stretch[-1]):
      raise ValueError("ResonanceGroup in the middle of connected NmrChain cannot be assigned away from the NmrChain")
  stretch.remove(self)
if value is not None:
  value.__dict__['mainResonanceGroups'].append(self)
dataDict['directNmrChain'] = value</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="setResonances"
   guid="www.ccpn.ac.uk_Fogh_2016-11-19-13:08:57_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>Setter for resonances link - ensures resonance uniqueness constraint checking, which default one did not.</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:09_00052</target>
    <codeStubs>
      <item tag="python">for cv in currentValues:
  if (not (cv in values)):
    cv.resonanceGroup = None

for cv in values:
  if (not (cv in currentValues)):
    cv.resonanceGroup = self</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="setSequenceCode"
   guid="www.ccpn.ac.uk_Fogh_2014-10-24-16:26:38_00003"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>setter for derived link sequenceCode</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-10-24-16:26:38_00001</target>
    <codeStubs>
      <item tag="java">/* */</item>
      <item tag="python">from ccpn.util.Common import parseSequenceCode
# prevDirectNmrChain = directNmrChain = self.directNmrChain
if value is None:
  code = ss = offset = mainGroupSerial = None

else:
  # Parse values from sequenceCode
  code, ss, offset = parseSequenceCode(value)

  # Get mainGroupSerial from sequenceCode of form '@ijk'
  if code is None and ss and ss[0] == '@' and ss[1:].isdigit():
    # Check that name matches serial, and reset values if it does
    mainGroupSerial = int(ss[1:])
  else:
    mainGroupSerial = mainResonanceGroup = None

  if offset is None:
    # Setting to non-offset ResonanceGroup
    if mainGroupSerial is not None:
      # sequenceCode of form '@ijk' passed in'
      if self.serial is None:
        raise ValueError(
          "Cannot create ResonanceGroup, names of the form '@ijk' are reserved: %s" % ss)
      elif mainGroupSerial == self.serial:
        # Setting to default ResonanceGroup name. OK.
        mainGroupSerial = ss = None
      else:
        raise ValueError(
        "Cannot rename ResonanceGroup, names of the form '@ijk' are reserved: %s" % ss)

  else:
    if mainGroupSerial is None:
      mainResonanceGroup = self.nmrChain.findFirstMainResonanceGroup(seqCode=code, seqInsertCode=ss or None)
    elif mainGroupSerial == self.serial:
      raise ValueError("A resonanceGroup cannot be offset relative to itself: %s" % value)
    else:
      mainResonanceGroup = self.topObject.findFirstResonanceGroup(serial=mainGroupSerial)

    if mainResonanceGroup is None:
      raise ValueError("Attempt to set Offset relative to non-existing resonanceGroup: %s.%s" % (self.nmrChain and self.nmrChain.code, value))
    elif mainResonanceGroup.relativeOffset is not None:
      raise ValueError("Attempt to set Offset relative to already offset resonanceGroup: %s.%s" % (self.nmrChain and self.nmrChain.code, value))
    elif self.nmrChain is not mainResonanceGroup.directNmrChain:
      # NBNB On creation ONLY works if nmrChain is already set. DEPENDS on attrlinks being set in order.
      raise ValueError("Attempt to set Offset relative to resonanceGroup in different NmrChain:%s.%s" % (self.nmrChain and self.nmrChain.code, value))

    mainGroupSerial = mainResonanceGroup.serial
    code = ss = None

seqInsertCode = ss or None
if notInConstructor:
  if (code is not None or seqInsertCode is not None or mainGroupSerial is not None) and any(x is not self for x in self.nmrProject.findAllResonanceGroups(directNmrChain=self.directNmrChain, seqCode=code, seqInsertCode=seqInsertCode, relativeOffset=offset, mainGroupSerial=mainGroupSerial)):
    raise ValueError("ResonanceGroup with chain %s, sequenceCode %s already exists" % (self.nmrChain, value))

# Must bypass API
dataDict['seqCode'] = code
dataDict['seqInsertCode'] = seqInsertCode
dataDict['relativeOffset'] = offset
dataDict['mainGroupSerial'] = mainGroupSerial
if offset is None:
  self.directNmrChain = self.nmrChain
else:
   self.directNmrChain = None</item>
    </codeStubs>
  </MetaOperation>
</MetaClass>

