<?xml version="1.0"?>
<!--
#######################################################################

CCPN Data Model version 3.0.2

Autogenerated by XmlModelIo on ?
  from data model element ccp.nmr.Nmr.NmrChain

#######################################################################
======================COPYRIGHT/LICENSE START==========================

NmrChain.xml: xmlmodel model for CCPN data model, MetaClass ccp.nmr.Nmr.NmrChain

Copyright (C) 2007  (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

A copy of this license can be found in ../../../../../../../../../license/LGPL.license

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="NmrChain"
 guid="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
 container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00006"
 isAbstract="false" isDerived="false" isImplicit="false" isLeaf="false"
 isRoot="false" isSingleton="false" partitionsChildren="false"
 visibility="public_vis">
  <documentation>Chain used for Nmr Assignment. If chainCode matches a chain in the MolSystem, this effectuates an assignment to the chain.</documentation>
  <keyNames>
    <item>serial</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00005</item>
  </supertypes>
  <destructorCodeStubs>
    <item tag="python"># The following code interacts directly with the deletion implementation (use of 'objsToBeDeleted'). 
# This is bad, but the only way to accomplish the desired result.
if self.implCode == '@-' and self.nmrProject not in objsToBeDeleted and not self.root.override:
  raise ApiError("NmrChain %s: NmrChain '@-' can only be deleted when NmrProject is deleted." % self)

for obj in self.resonanceGroups:
  objsToBeChecked.append(obj)</item>
  </destructorCodeStubs>
  <postConstructorCodeStubs>
    <item tag="python">if self.label == '?':
  if self.implCode =='@-':
    self.label = '@-'
  elif self.isConnected:
    self.label = '#%s' % self.serial
  else:
    self.label = '@%s' % self.serial</item>
  </postConstructorCodeStubs>


  <MetaOperation name="addMainResonanceGroup"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:46_00006"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   isAbstract="false" isImplicit="false" isQuery="false" opType="add"
   scope="instance_level" visibility="public_vis">
    <documentation>Adder for mainResonanceGroup, incorporating special constraints</documentation>
    <target>www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00002</target>
    <codeStubs>
      <item tag="python">value.directNmrChain = self</item>
    </codeStubs>
  </MetaOperation>

  <MetaRole name="chain"
   guid="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00003"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   baseName="chain" changeability="frozen" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Chain to which NmrChain is assigned - None if NmrChain.code does not match MolSystem</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00024</valueType>
  </MetaRole>

  <MetaAttribute name="code"
   guid="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00005"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   baseName="code" changeability="changeable" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Chain code. If set to None will revert to the canonical name of the object ;  '@ijk' (for unconnected) or '#ijk' (for connected NmrChains), where ijk is an integer.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
  </MetaAttribute>

  <MetaAttribute name="details"
   guid="www.ccpn.ac.uk_Fogh_2014-12-30-11:21:22_00001"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   baseName="details" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Free text, for notes, explanatory comments, etc.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2009-01-23-10:52:32_00001</valueType>
  </MetaAttribute>

  <MetaOperation name="getChain"
   guid="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00006"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link chain</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00003</target>
    <codeStubs>
      <item tag="java">/* */</item>
      <item tag="python">molSystem =  self.nmrProject.molSystem
result = None if molSystem is None else molSystem.findFirstChain(code=self.code)</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getCode"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-15:09:32_00002"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived attribute code</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00005</target>
    <codeStubs>
      <item tag="python">result = self.implCode
if result is None:
  if self.isConnected:
    result = '#%s' % self.serial
  else:
    result = '@%s' % self.serial</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getResonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2015-04-27-10:49:33_00003"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link resonanceGroups</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00002</target>
    <codeStubs>
      <item tag="python">result = []
for resonanceGroup in self.mainResonanceGroups:
  # NB sateliteResonanceGroups are sorted by increasing offset
  ll = resonanceGroup.offsetResonanceGroups
  result.extend(x for x in ll if x.relativeOffset &lt; 0)
  result.append(resonanceGroup)
  result.extend(x for x in ll if x.relativeOffset &gt;= 0)
if self.code == '@-':
  # NB nothing should ever happen here, but to avoid losing any ResonanceGroups:
  result.extend(x for x in self.nmrProject.sortedResonanceGroups() if x.directNmrChain is None and x.mainResonanceGroup in (None, x))</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="implCode"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-15:08:54_00001"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   baseName="implCode" changeability="changeable" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Implementation-only storage for NmrChain.code</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>

    <!-- Start constraints for <MetaAttribute: ccp.nmr.Nmr.NmrChain.implCode>: -->
    <MetaConstraint name="code_is_unique_across_nmrChains"
     guid="www.ccpn.ac.uk_Fogh_2015-11-27-18:15:56_00003"
     container="www.ccpn.ac.uk_Fogh_2015-11-27-15:08:54_00001"
     isImplicit="false">
      <codeStubs>
        <item tag="python">value is None or not any(x is not self for x in self.nmrProject.findAllNmrChains(implCode=value))</item>
      </codeStubs>
    </MetaConstraint>
    <MetaConstraint name="connected_NmrChains_must_have_default_name"
     guid="www.ccpn.ac.uk_Fogh_2015-11-27-18:15:56_00001"
     container="www.ccpn.ac.uk_Fogh_2015-11-27-15:08:54_00001"
     isImplicit="false">
      <codeStubs>
        <item tag="python">not self.isConnected or value is None</item>
      </codeStubs>
    </MetaConstraint>
    <MetaConstraint name="names_of_the_form_atsign_or_hash_followed_by_integer_are_reserved"
     guid="www.ccpn.ac.uk_Fogh_2015-11-27-15:09:32_00001"
     container="www.ccpn.ac.uk_Fogh_2015-11-27-15:08:54_00001"
     isImplicit="false">
      <codeStubs>
        <item tag="python">not(value and value[0] in '#@' and  len(value) &gt; 1 and value[1:].isdigit())</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: ccp.nmr.Nmr.NmrChain.implCode>: -->
  </MetaAttribute>

  <MetaAttribute name="isConnected"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:46_00005"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   baseName="isConnected" changeability="frozen" forceUndoNotify="true"
   hicard="1" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Is this a connected stretch?
If so, self.mainResidues are sequentially connected in the order given, and the name must be of the form @ijk (ijk an integer)</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00028</valueType>
    <defaultValue>
      <item>false</item>
    </defaultValue>
  </MetaAttribute>

  <MetaAttribute name="label"
   guid="www.ccpn.ac.uk_Fogh_2015-11-29-15:20:59_00001"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   baseName="label" changeability="changeable" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Identifying label of NmrChain. By default set to the canonical name '@ijk' (for unconnected) or '#ijk' (for connected NmrChains (ijk is an integer.), but freely changeable.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
    <defaultValue>
      <item>?</item>
    </defaultValue>
  </MetaAttribute>

  <MetaRole name="mainResonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00002"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   baseName="mainResonanceGroup" changeability="changeable"
   forceUndoNotify="true" hicard="-1" isAbstract="false" isAutomatic="false"
   isDerived="false" isImplementation="false" isImplicit="false"
   isOrdered="true" isUnique="true" locard="0" noDeleteIfSet="false"
   partitionsChildren="false" scope="instance_level" visibility="public_vis">
    <documentation>ResonanceGroups directly connnected to NmrChain </documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00001</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034</valueType>
  </MetaRole>

  <MetaRole name="nmrProject"
   guid="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00007"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   aggregation="composite" baseName="nmrProject" changeability="frozen"
   forceUndoNotify="true" hicard="1" hierarchy="parent" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00008</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-18:19:48_00001</valueType>
  </MetaRole>

  <MetaOperation name="removeMainResonanceGroup"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:46_00007"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   isAbstract="false" isImplicit="false" isQuery="false" opType="remove"
   scope="instance_level" visibility="public_vis">
    <documentation>remove for mainResonanceGroups link, incorporating special constraints. NB Remove does nothing if self is chain '@-'</documentation>
    <target>www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00002</target>
    <codeStubs>
      <item tag="python">value.directNmrChain = self.nmrProject.findFirstNmrChain(code='@-')</item>
    </codeStubs>
  </MetaOperation>

  <MetaRole name="resonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00002"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   baseName="resonanceGroup" changeability="frozen" forceUndoNotify="true"
   hicard="-1" isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>ResonanceGroups contained within NmrChain</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00001</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00034</valueType>
  </MetaRole>

  <MetaAttribute name="serial"
   guid="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00004"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   baseName="serial" changeability="frozen" forceUndoNotify="true" hicard="1"
   isAbstract="false" isAutomatic="true" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Serial number of object. Serves as object main key. Serial numbers of deleted objects are not re-used. Serial numbers can only be set by the implementation. Values are in practice always positive, since negative values are interpreted as a signal to set the next free serial</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaOperation name="setCode"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-15:09:32_00003"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>setter for derived attribute code</documentation>
    <target>www.ccpn.ac.uk_Fogh_2014-07-30-17:44:23_00005</target>
    <codeStubs>
      <item tag="python">if self.implCode == '@-' and value != '@-':
  raise ApiError("NmrChain code '@-' cannot be reset") 
else:
  self.implCode = value</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="setMainResonanceGroups"
   guid="www.ccpn.ac.uk_Fogh_2015-11-27-09:48:46_00008"
   container="www.ccpn.ac.uk_Fogh_2014-07-30-17:44:22_00001"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>special setter for mainResonanceGroups, incorporating special constraints</documentation>
    <target>www.ccpn.ac.uk_Fogh_2015-11-27-09:48:04_00002</target>
    <codeStubs>
      <item tag="python">if any(x for x in values if x.relativeOffset is not None):
  raise ValueError("Offset ResonanceGroup cannot be set as mainResonanceGroup") 

# Check for breaking NmrChains.
previousStretches = set(x.directNmrChain for x in values)
if any(x for x in previousStretches if x and x.isConnected and x is not self):
  raise ValueError("Cannot reset ResonanceGroups while they are part of a different connected NmrChain")

defaultNmrChain = self.nmrProject.findFirstNmrChain(code='@-')
if self.isConnected:
  for val in currentValues:
    val.directNmrChain = defaultNmrChain
for val in values:
  val.directNmrChain = self</item>
    </codeStubs>
  </MetaOperation>
</MetaClass>

