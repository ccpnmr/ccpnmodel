<?xml version="1.0"?>
<!--
#######################################################################

CCPN Data Model version 2.0.4

Autogenerated by XmlModelIo revision 1.18 on ?
  from data model element memops.Implementation.AbstractMatrix revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

AbstractMatrix.xml: xmlmodel model for CCPN data model, MetaDataObjType memops.Implementation.AbstractMatrix

Copyright (C) 2007  (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaDataObjType name="AbstractMatrix"
 guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
 container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00025"
 isAbstract="true" isChangeable="0" isImplicit="false" isLeaf="false"
 isRoot="false" visibility="public_vis">
  <documentation>nD Matrix of simple data type elements</documentation>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-12-15-19:00:39_00003</item>
  </supertypes>
  <taggedValues>
    <item tag="repositoryId">$Id: AbstractMatrix.xml,v 1.4 2010/08/11 13:59:55 rhfogh Exp $</item>
    <item tag="repositoryTag">$Name:  $</item>
  </taggedValues>

  <!-- Start constraints for <MetaDataObjType: memops.Implementation.AbstractMatrix>: -->
  <MetaConstraint name="matrix_size_eq_data_size"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00002"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   isImplicit="false">
    <codeStubs>
      <item tag="java">getSize() == getData().size()</item>
      <item tag="python">self.size == len(self.data)</item>
    </codeStubs>
  </MetaConstraint>
  <!-- End constraints for <MetaDataObjType: memops.Implementation.AbstractMatrix>: -->


  <MetaAttribute name="data"
   guid="www.ccpn.ac.uk_Fogh_2010-05-13-14:38:45_00001"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   baseName="data" changeability="frozen" hicard="-1" isAbstract="true"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="true" isUnique="false" locard="1"
   scope="instance_level" visibility="public_vis">
    <valueType>www.ccpn.ac.uk_Fogh_2006-11-17-09:06:35_00001</valueType>
  </MetaAttribute>

  <MetaOperation name="getNdim"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00004"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived attribute ndim</documentation>
    <target>www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00001</target>
    <codeStubs>
      <item tag="java">result = getShape().size();</item>
      <item tag="python">result = len(self.shape)</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getSize"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00003"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for serived attribute size</documentation>
    <target>www.ccpn.ac.uk_Fogh_2010-05-12-17:31:58_00003</target>
    <codeStubs>
      <item tag="java">result = 1;
java.util.List&lt;java.lang.Integer&gt; shape = getShape();
for (java.lang.Integer size: shape)
  result *= size;</item>
      <item tag="python">from operator import mul as multiply
result = reduce(multiply, self.shape)</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getStrides"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00005"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link strides</documentation>
    <target>www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00002</target>
    <codeStubs>
      <item tag="java">result = new java.util.ArrayList&lt;java.lang.Integer&gt;();
java.util.ArrayList&lt;java.lang.Integer&gt; shape = getShape();
java.util.Collections.reverse(shape);
int n = 1;
for (java.lang.Integer size: shape) {
  result.add(n);
  n *= size;
}
java.util.Collections.reverse(result);</item>
      <item tag="python">from memops.universal.BlockData import strides
result = tuple(strides(self.shape))</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getValue"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00006"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived attribute value</documentation>
    <target>www.ccpn.ac.uk_Fogh_2010-05-12-17:31:58_00002</target>
    <codeStubs>
      <item tag="java">result = null; /* NBNB TBD */</item>
      <item tag="python">result = self.__dict__['data']
for step in reversed(shape[1:]):
  newval = tuple(tuple(result[x:x+step]) 
                         for x in range(0, len(result), step))
  result = newval</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="ndim"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00001"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   baseName="ndim" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Number of dimensions of matrix</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00011</valueType>
  </MetaAttribute>

  <MetaOperation name="pointValue"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00008"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="other"
   scope="instance_level" visibility="public_vis">
    <documentation>get value of point - type is the type of the matrix element</documentation>
    <target>www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00008</target>
    <codeStubs>
      <item tag="java">result = null; /* NBNB TBD */</item>
      <item tag="python">strides = self.strides
index = sum(ind*strides[i] for i,ind in enumerate(point))
result = self.__dict__['data'][index]</item>
    </codeStubs>


    <MetaParameter name="point"
     guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00009"
     container="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00008"
     direction="in_dir" hicard="-1" isImplicit="false" isOrdered="true"
     isUnique="false" locard="0">
      <documentation>point to determine value of - implicitly padded to correct  lengths by zeros</documentation>
      <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00011</valueType>
    </MetaParameter>

    <MetaParameter name="result"
     guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:36:49_00001"
     container="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00008"
     direction="return_dir" hicard="1" isImplicit="false" isOrdered="false"
     isUnique="true" locard="1">
      <documentation>Element value</documentation>
      <valueType>www.ccpn.ac.uk_Fogh_2006-11-17-09:06:35_00001</valueType>
    </MetaParameter>
  </MetaOperation>

  <MetaAttribute name="shape"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:25_00001"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   baseName="shape" changeability="frozen" hicard="-1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="true" isUnique="false" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Dimension sizes of matrix - slowest varying first.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00001</valueType>
  </MetaAttribute>

  <MetaAttribute name="size"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:31:58_00003"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   baseName="size" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Number of elements in matrix</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00011</valueType>
  </MetaAttribute>

  <MetaAttribute name="strides"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:32:42_00002"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   baseName="stride" changeability="frozen" hicard="-1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="true" isUnique="false" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>strides[i] is the distance between two points in the linear data representation that differ by 1 in dimension i. strides[i] is equal to the product of the length of all faster-changing dimensions.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00001</valueType>
  </MetaAttribute>

  <MetaOperation name="subMatrix"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:36:49_00002"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   isAbstract="false" isImplicit="false" isQuery="true" opType="other"
   scope="instance_level" visibility="public_vis">
    <documentation>get subMatrix of current Matrix, in ranges point:point+width. Type is the same type as the current matrix</documentation>
    <target>www.ccpn.ac.uk_Fogh_2010-05-12-17:36:49_00002</target>
    <codeStubs>
      <item tag="java">result = null; /* NBNB TBD */</item>
      <item tag="python"># read in data
ndim = self.ndim
data = self.__dict__['data']
strides = self.strides

# set widths - padding with dimension sizes.
useWidths = list(self.shape)
if widths is not None:
  useWidths[:len(widths)] = widths
widths = useWidths

#set point - padding with zero
usePoint = ndim * [0]
if point is not None:
  point[:len(point)] = point
point = usePoint

# adjust widths for cases where width==0, and set new shape.
newshape = []
for ii,width in enumerate(widths):
  if width:
    newshape.append(width) # use only dims with non-zero widths
  else:
    widths[ii] = 1 # replace width 0 with width 1 for further processing


# find start indices for stretches of data used
indices = [0] 
for dim,stride in enumerate(strides[:-1]):
  offset = point[dim] * stride
  width = widths[dim] 
  ll = []
  for index in indices:
    newindex = index + offset
    for dummy in range(width):
      ll.append(newindex)
      newindex += stride
  indices = ll

# get actual data and create new data array
width = widths[-1]
newdata = [None] * (width * len(indices))
start = 0
for index in indices:
  end = start + width
  newdata[start:end] = data[index:index+width]
  start = end
    
# create subMatrix object
result = self.__class__(shape=newshape, data=newdata)</item>
    </codeStubs>


    <MetaParameter name="point"
     guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:36:49_00003"
     container="www.ccpn.ac.uk_Fogh_2010-05-12-17:36:49_00002"
     direction="in_dir" hicard="-1" isImplicit="false" isOrdered="true"
     isUnique="false" locard="0">
      <documentation>point, sequence of NonNegInt, point in subMatrix closest to matrix origin
Padded to ndim with zeroes</documentation>
      <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
    </MetaParameter>

    <MetaParameter name="result"
     guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:39:28_00002"
     container="www.ccpn.ac.uk_Fogh_2010-05-12-17:36:49_00002"
     direction="return_dir" hicard="-1" isImplicit="false" isOrdered="true"
     isUnique="false" locard="0">
      <documentation>AbstractMatrix of same type containing submatrix.</documentation>
      <valueType>www.ccpn.ac.uk_Fogh_2006-11-17-09:06:35_00001</valueType>
    </MetaParameter>

    <MetaParameter name="widths"
     guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:39:28_00001"
     container="www.ccpn.ac.uk_Fogh_2010-05-12-17:36:49_00002"
     direction="in_dir" hicard="-1" isImplicit="false" isOrdered="true"
     isUnique="false" locard="0">
      <documentation>widths, sequence of NonNegInt,
Padded to ndim with dimension sizes 
Where dim==0 the dimension is skipped and the corresponding point is used. </documentation>
      <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
    </MetaParameter>
  </MetaOperation>

  <MetaAttribute name="value"
   guid="www.ccpn.ac.uk_Fogh_2010-05-12-17:31:58_00002"
   container="www.ccpn.ac.uk_Fogh_2010-05-12-17:30:22_00001"
   baseName="value" changeability="frozen" hicard="-1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="true" isUnique="false" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>Matrix value, represented as nested tuples of elements.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-11-17-09:06:35_00001</valueType>
  </MetaAttribute>
</MetaDataObjType>

